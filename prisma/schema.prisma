generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model employee {
  payroll                                       String       @id @db.VarChar(8)
  profile_id                                    String?      @db.VarChar(50)
  user_id_mesin                                 String?      @unique(map: "user_id_mesin") @db.VarChar(6)
  name                                          String       @db.VarChar(250)
  password                                      String       @db.VarChar(250)
  jabatan                                       String       @db.VarChar(100)
  department                                    String       @db.VarChar(4)
  location                                      String       @db.VarChar(100)
  phone                                         String       @db.VarChar(13)
  email                                         String       @unique(map: "Employee_Email_key") @db.VarChar(100)
  signature                                     String       @db.VarChar(250)
  attendance_attendance_createdByToemployee     attendance[] @relation("attendance_createdByToemployee")
  attendance_attendance_user_id_mesinToemployee attendance?  @relation("attendance_user_id_mesinToemployee")
  check_io                                      check_io[]
  profile                                       profile?     @relation(fields: [profile_id], references: [profile_id], map: "Employee_profile_id_fkey")

  @@index([profile_id], map: "Employee_profile_id_fkey")
}

model profile {
  profile_id        String        @id @db.VarChar(50)
  name              String        @db.VarChar(100)
  description       String        @db.VarChar(255)
  level             profile_level
  user_hrd          Boolean
  delegation        Boolean
  access_sppd       String        @db.VarChar(4)
  access_skpd       String        @db.VarChar(4)
  access_attendance String        @db.VarChar(4)
  access_spl        String        @db.VarChar(4)
  access_srl        String        @db.VarChar(4)
  access_cuti       String        @db.VarChar(4)
  access_calendar   String        @db.VarChar(4)
  access_user       String        @db.VarChar(4)
  access_profile    String        @db.VarChar(4)
  employee          employee[]
}

model check_io {
  check_io_id   String    @id @db.VarChar(40)
  user_id_mesin String?   @db.VarChar(6)
  waktu         DateTime  @db.DateTime(0)
  type          String    @db.VarChar(50)
  createdAt     DateTime  @default(now()) @db.DateTime(0)
  employee      employee? @relation(fields: [user_id_mesin], references: [user_id_mesin], map: "Check_io_user_id_mesin_fkey")

  @@index([user_id_mesin], map: "Check_io_user_id_mesin_fkey")
}

model attendance {
  attendance_id                               String    @id @db.VarChar(40)
  user_id_mesin                               String?   @unique(map: "user_id_mesin") @db.VarChar(6)
  waktu                                       DateTime  @db.DateTime(0)
  type                                        String    @db.VarChar(50)
  description                                 String    @db.VarChar(255)
  attachment                                  String?   @db.Text
  createdBy                                   String?   @db.VarChar(8)
  createdAt                                   DateTime  @default(now()) @db.DateTime(0)
  employee_attendance_createdByToemployee     employee? @relation("attendance_createdByToemployee", fields: [createdBy], references: [payroll], map: "Attendance_created_by_fkey")
  employee_attendance_user_id_mesinToemployee employee? @relation("attendance_user_id_mesinToemployee", fields: [user_id_mesin], references: [user_id_mesin], map: "Attendance_user_id_mesin_fkey")

  @@index([createdBy], map: "createdBy")
}

model temp_check_io {
  check_io_id   String   @id @db.VarChar(40)
  user_id_mesin String   @db.VarChar(6)
  waktu         DateTime @db.DateTime(0)
  type          String   @db.VarChar(50)

  @@index([user_id_mesin], map: "user_id_mesin")
}

enum profile_level {
  L0
  L1
  L2
  L3
  L4
  L5
  L6
  L7
  L8
  L9
}
