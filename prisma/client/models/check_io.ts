
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `check_io` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model check_io
 * 
 */
export type check_ioModel = runtime.Types.Result.DefaultSelection<Prisma.$check_ioPayload>

export type AggregateCheck_io = {
  _count: Check_ioCountAggregateOutputType | null
  _avg: Check_ioAvgAggregateOutputType | null
  _sum: Check_ioSumAggregateOutputType | null
  _min: Check_ioMinAggregateOutputType | null
  _max: Check_ioMaxAggregateOutputType | null
}

export type Check_ioAvgAggregateOutputType = {
  machine_no: number | null
}

export type Check_ioSumAggregateOutputType = {
  machine_no: number | null
}

export type Check_ioMinAggregateOutputType = {
  check_io_id: string | null
  user_id_machine: string | null
  datetime: Date | null
  type: string | null
  transfer_status: boolean | null
  machine_no: number | null
}

export type Check_ioMaxAggregateOutputType = {
  check_io_id: string | null
  user_id_machine: string | null
  datetime: Date | null
  type: string | null
  transfer_status: boolean | null
  machine_no: number | null
}

export type Check_ioCountAggregateOutputType = {
  check_io_id: number
  user_id_machine: number
  datetime: number
  type: number
  transfer_status: number
  machine_no: number
  _all: number
}


export type Check_ioAvgAggregateInputType = {
  machine_no?: true
}

export type Check_ioSumAggregateInputType = {
  machine_no?: true
}

export type Check_ioMinAggregateInputType = {
  check_io_id?: true
  user_id_machine?: true
  datetime?: true
  type?: true
  transfer_status?: true
  machine_no?: true
}

export type Check_ioMaxAggregateInputType = {
  check_io_id?: true
  user_id_machine?: true
  datetime?: true
  type?: true
  transfer_status?: true
  machine_no?: true
}

export type Check_ioCountAggregateInputType = {
  check_io_id?: true
  user_id_machine?: true
  datetime?: true
  type?: true
  transfer_status?: true
  machine_no?: true
  _all?: true
}

export type Check_ioAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which check_io to aggregate.
   */
  where?: Prisma.check_ioWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of check_ios to fetch.
   */
  orderBy?: Prisma.check_ioOrderByWithRelationInput | Prisma.check_ioOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.check_ioWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` check_ios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` check_ios.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned check_ios
  **/
  _count?: true | Check_ioCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Check_ioAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Check_ioSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Check_ioMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Check_ioMaxAggregateInputType
}

export type GetCheck_ioAggregateType<T extends Check_ioAggregateArgs> = {
      [P in keyof T & keyof AggregateCheck_io]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateCheck_io[P]>
    : Prisma.GetScalarType<T[P], AggregateCheck_io[P]>
}




export type check_ioGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.check_ioWhereInput
  orderBy?: Prisma.check_ioOrderByWithAggregationInput | Prisma.check_ioOrderByWithAggregationInput[]
  by: Prisma.Check_ioScalarFieldEnum[] | Prisma.Check_ioScalarFieldEnum
  having?: Prisma.check_ioScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Check_ioCountAggregateInputType | true
  _avg?: Check_ioAvgAggregateInputType
  _sum?: Check_ioSumAggregateInputType
  _min?: Check_ioMinAggregateInputType
  _max?: Check_ioMaxAggregateInputType
}

export type Check_ioGroupByOutputType = {
  check_io_id: string
  user_id_machine: string
  datetime: Date
  type: string
  transfer_status: boolean | null
  machine_no: number | null
  _count: Check_ioCountAggregateOutputType | null
  _avg: Check_ioAvgAggregateOutputType | null
  _sum: Check_ioSumAggregateOutputType | null
  _min: Check_ioMinAggregateOutputType | null
  _max: Check_ioMaxAggregateOutputType | null
}

type GetCheck_ioGroupByPayload<T extends check_ioGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Check_ioGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Check_ioGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Check_ioGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Check_ioGroupByOutputType[P]>
      }
    >
  > 



export type check_ioWhereInput = {
  AND?: Prisma.check_ioWhereInput | Prisma.check_ioWhereInput[]
  OR?: Prisma.check_ioWhereInput[]
  NOT?: Prisma.check_ioWhereInput | Prisma.check_ioWhereInput[]
  check_io_id?: Prisma.StringFilter<"check_io"> | string
  user_id_machine?: Prisma.StringFilter<"check_io"> | string
  datetime?: Prisma.DateTimeFilter<"check_io"> | Date | string
  type?: Prisma.StringFilter<"check_io"> | string
  transfer_status?: Prisma.BoolNullableFilter<"check_io"> | boolean | null
  machine_no?: Prisma.IntNullableFilter<"check_io"> | number | null
}

export type check_ioOrderByWithRelationInput = {
  check_io_id?: Prisma.SortOrder
  user_id_machine?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  type?: Prisma.SortOrder
  transfer_status?: Prisma.SortOrderInput | Prisma.SortOrder
  machine_no?: Prisma.SortOrderInput | Prisma.SortOrder
  _relevance?: Prisma.check_ioOrderByRelevanceInput
}

export type check_ioWhereUniqueInput = Prisma.AtLeast<{
  check_io_id?: string
  AND?: Prisma.check_ioWhereInput | Prisma.check_ioWhereInput[]
  OR?: Prisma.check_ioWhereInput[]
  NOT?: Prisma.check_ioWhereInput | Prisma.check_ioWhereInput[]
  user_id_machine?: Prisma.StringFilter<"check_io"> | string
  datetime?: Prisma.DateTimeFilter<"check_io"> | Date | string
  type?: Prisma.StringFilter<"check_io"> | string
  transfer_status?: Prisma.BoolNullableFilter<"check_io"> | boolean | null
  machine_no?: Prisma.IntNullableFilter<"check_io"> | number | null
}, "check_io_id">

export type check_ioOrderByWithAggregationInput = {
  check_io_id?: Prisma.SortOrder
  user_id_machine?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  type?: Prisma.SortOrder
  transfer_status?: Prisma.SortOrderInput | Prisma.SortOrder
  machine_no?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.check_ioCountOrderByAggregateInput
  _avg?: Prisma.check_ioAvgOrderByAggregateInput
  _max?: Prisma.check_ioMaxOrderByAggregateInput
  _min?: Prisma.check_ioMinOrderByAggregateInput
  _sum?: Prisma.check_ioSumOrderByAggregateInput
}

export type check_ioScalarWhereWithAggregatesInput = {
  AND?: Prisma.check_ioScalarWhereWithAggregatesInput | Prisma.check_ioScalarWhereWithAggregatesInput[]
  OR?: Prisma.check_ioScalarWhereWithAggregatesInput[]
  NOT?: Prisma.check_ioScalarWhereWithAggregatesInput | Prisma.check_ioScalarWhereWithAggregatesInput[]
  check_io_id?: Prisma.StringWithAggregatesFilter<"check_io"> | string
  user_id_machine?: Prisma.StringWithAggregatesFilter<"check_io"> | string
  datetime?: Prisma.DateTimeWithAggregatesFilter<"check_io"> | Date | string
  type?: Prisma.StringWithAggregatesFilter<"check_io"> | string
  transfer_status?: Prisma.BoolNullableWithAggregatesFilter<"check_io"> | boolean | null
  machine_no?: Prisma.IntNullableWithAggregatesFilter<"check_io"> | number | null
}

export type check_ioCreateInput = {
  check_io_id: string
  user_id_machine: string
  datetime: Date | string
  type: string
  transfer_status?: boolean | null
  machine_no?: number | null
}

export type check_ioUncheckedCreateInput = {
  check_io_id: string
  user_id_machine: string
  datetime: Date | string
  type: string
  transfer_status?: boolean | null
  machine_no?: number | null
}

export type check_ioUpdateInput = {
  check_io_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_id_machine?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  transfer_status?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  machine_no?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type check_ioUncheckedUpdateInput = {
  check_io_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_id_machine?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  transfer_status?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  machine_no?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type check_ioCreateManyInput = {
  check_io_id: string
  user_id_machine: string
  datetime: Date | string
  type: string
  transfer_status?: boolean | null
  machine_no?: number | null
}

export type check_ioUpdateManyMutationInput = {
  check_io_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_id_machine?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  transfer_status?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  machine_no?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type check_ioUncheckedUpdateManyInput = {
  check_io_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_id_machine?: Prisma.StringFieldUpdateOperationsInput | string
  datetime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  transfer_status?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  machine_no?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type check_ioOrderByRelevanceInput = {
  fields: Prisma.check_ioOrderByRelevanceFieldEnum | Prisma.check_ioOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type check_ioCountOrderByAggregateInput = {
  check_io_id?: Prisma.SortOrder
  user_id_machine?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  type?: Prisma.SortOrder
  transfer_status?: Prisma.SortOrder
  machine_no?: Prisma.SortOrder
}

export type check_ioAvgOrderByAggregateInput = {
  machine_no?: Prisma.SortOrder
}

export type check_ioMaxOrderByAggregateInput = {
  check_io_id?: Prisma.SortOrder
  user_id_machine?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  type?: Prisma.SortOrder
  transfer_status?: Prisma.SortOrder
  machine_no?: Prisma.SortOrder
}

export type check_ioMinOrderByAggregateInput = {
  check_io_id?: Prisma.SortOrder
  user_id_machine?: Prisma.SortOrder
  datetime?: Prisma.SortOrder
  type?: Prisma.SortOrder
  transfer_status?: Prisma.SortOrder
  machine_no?: Prisma.SortOrder
}

export type check_ioSumOrderByAggregateInput = {
  machine_no?: Prisma.SortOrder
}

export type NullableBoolFieldUpdateOperationsInput = {
  set?: boolean | null
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}



export type check_ioSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  check_io_id?: boolean
  user_id_machine?: boolean
  datetime?: boolean
  type?: boolean
  transfer_status?: boolean
  machine_no?: boolean
}, ExtArgs["result"]["check_io"]>



export type check_ioSelectScalar = {
  check_io_id?: boolean
  user_id_machine?: boolean
  datetime?: boolean
  type?: boolean
  transfer_status?: boolean
  machine_no?: boolean
}

export type check_ioOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"check_io_id" | "user_id_machine" | "datetime" | "type" | "transfer_status" | "machine_no", ExtArgs["result"]["check_io"]>

export type $check_ioPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "check_io"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    check_io_id: string
    user_id_machine: string
    datetime: Date
    type: string
    transfer_status: boolean | null
    machine_no: number | null
  }, ExtArgs["result"]["check_io"]>
  composites: {}
}

export type check_ioGetPayload<S extends boolean | null | undefined | check_ioDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$check_ioPayload, S>

export type check_ioCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<check_ioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Check_ioCountAggregateInputType | true
  }

export interface check_ioDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['check_io'], meta: { name: 'check_io' } }
  /**
   * Find zero or one Check_io that matches the filter.
   * @param {check_ioFindUniqueArgs} args - Arguments to find a Check_io
   * @example
   * // Get one Check_io
   * const check_io = await prisma.check_io.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends check_ioFindUniqueArgs>(args: Prisma.SelectSubset<T, check_ioFindUniqueArgs<ExtArgs>>): Prisma.Prisma__check_ioClient<runtime.Types.Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Check_io that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {check_ioFindUniqueOrThrowArgs} args - Arguments to find a Check_io
   * @example
   * // Get one Check_io
   * const check_io = await prisma.check_io.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends check_ioFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, check_ioFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__check_ioClient<runtime.Types.Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Check_io that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {check_ioFindFirstArgs} args - Arguments to find a Check_io
   * @example
   * // Get one Check_io
   * const check_io = await prisma.check_io.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends check_ioFindFirstArgs>(args?: Prisma.SelectSubset<T, check_ioFindFirstArgs<ExtArgs>>): Prisma.Prisma__check_ioClient<runtime.Types.Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Check_io that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {check_ioFindFirstOrThrowArgs} args - Arguments to find a Check_io
   * @example
   * // Get one Check_io
   * const check_io = await prisma.check_io.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends check_ioFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, check_ioFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__check_ioClient<runtime.Types.Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Check_ios that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {check_ioFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Check_ios
   * const check_ios = await prisma.check_io.findMany()
   * 
   * // Get first 10 Check_ios
   * const check_ios = await prisma.check_io.findMany({ take: 10 })
   * 
   * // Only select the `check_io_id`
   * const check_ioWithCheck_io_idOnly = await prisma.check_io.findMany({ select: { check_io_id: true } })
   * 
   */
  findMany<T extends check_ioFindManyArgs>(args?: Prisma.SelectSubset<T, check_ioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Check_io.
   * @param {check_ioCreateArgs} args - Arguments to create a Check_io.
   * @example
   * // Create one Check_io
   * const Check_io = await prisma.check_io.create({
   *   data: {
   *     // ... data to create a Check_io
   *   }
   * })
   * 
   */
  create<T extends check_ioCreateArgs>(args: Prisma.SelectSubset<T, check_ioCreateArgs<ExtArgs>>): Prisma.Prisma__check_ioClient<runtime.Types.Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Check_ios.
   * @param {check_ioCreateManyArgs} args - Arguments to create many Check_ios.
   * @example
   * // Create many Check_ios
   * const check_io = await prisma.check_io.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends check_ioCreateManyArgs>(args?: Prisma.SelectSubset<T, check_ioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Check_io.
   * @param {check_ioDeleteArgs} args - Arguments to delete one Check_io.
   * @example
   * // Delete one Check_io
   * const Check_io = await prisma.check_io.delete({
   *   where: {
   *     // ... filter to delete one Check_io
   *   }
   * })
   * 
   */
  delete<T extends check_ioDeleteArgs>(args: Prisma.SelectSubset<T, check_ioDeleteArgs<ExtArgs>>): Prisma.Prisma__check_ioClient<runtime.Types.Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Check_io.
   * @param {check_ioUpdateArgs} args - Arguments to update one Check_io.
   * @example
   * // Update one Check_io
   * const check_io = await prisma.check_io.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends check_ioUpdateArgs>(args: Prisma.SelectSubset<T, check_ioUpdateArgs<ExtArgs>>): Prisma.Prisma__check_ioClient<runtime.Types.Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Check_ios.
   * @param {check_ioDeleteManyArgs} args - Arguments to filter Check_ios to delete.
   * @example
   * // Delete a few Check_ios
   * const { count } = await prisma.check_io.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends check_ioDeleteManyArgs>(args?: Prisma.SelectSubset<T, check_ioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Check_ios.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {check_ioUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Check_ios
   * const check_io = await prisma.check_io.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends check_ioUpdateManyArgs>(args: Prisma.SelectSubset<T, check_ioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Check_io.
   * @param {check_ioUpsertArgs} args - Arguments to update or create a Check_io.
   * @example
   * // Update or create a Check_io
   * const check_io = await prisma.check_io.upsert({
   *   create: {
   *     // ... data to create a Check_io
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Check_io we want to update
   *   }
   * })
   */
  upsert<T extends check_ioUpsertArgs>(args: Prisma.SelectSubset<T, check_ioUpsertArgs<ExtArgs>>): Prisma.Prisma__check_ioClient<runtime.Types.Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Check_ios.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {check_ioCountArgs} args - Arguments to filter Check_ios to count.
   * @example
   * // Count the number of Check_ios
   * const count = await prisma.check_io.count({
   *   where: {
   *     // ... the filter for the Check_ios we want to count
   *   }
   * })
  **/
  count<T extends check_ioCountArgs>(
    args?: Prisma.Subset<T, check_ioCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Check_ioCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Check_io.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Check_ioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Check_ioAggregateArgs>(args: Prisma.Subset<T, Check_ioAggregateArgs>): Prisma.PrismaPromise<GetCheck_ioAggregateType<T>>

  /**
   * Group by Check_io.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {check_ioGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends check_ioGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: check_ioGroupByArgs['orderBy'] }
      : { orderBy?: check_ioGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, check_ioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCheck_ioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the check_io model
 */
readonly fields: check_ioFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for check_io.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__check_ioClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the check_io model
 */
export interface check_ioFieldRefs {
  readonly check_io_id: Prisma.FieldRef<"check_io", 'String'>
  readonly user_id_machine: Prisma.FieldRef<"check_io", 'String'>
  readonly datetime: Prisma.FieldRef<"check_io", 'DateTime'>
  readonly type: Prisma.FieldRef<"check_io", 'String'>
  readonly transfer_status: Prisma.FieldRef<"check_io", 'Boolean'>
  readonly machine_no: Prisma.FieldRef<"check_io", 'Int'>
}
    

// Custom InputTypes
/**
 * check_io findUnique
 */
export type check_ioFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the check_io
   */
  select?: Prisma.check_ioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the check_io
   */
  omit?: Prisma.check_ioOmit<ExtArgs> | null
  /**
   * Filter, which check_io to fetch.
   */
  where: Prisma.check_ioWhereUniqueInput
}

/**
 * check_io findUniqueOrThrow
 */
export type check_ioFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the check_io
   */
  select?: Prisma.check_ioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the check_io
   */
  omit?: Prisma.check_ioOmit<ExtArgs> | null
  /**
   * Filter, which check_io to fetch.
   */
  where: Prisma.check_ioWhereUniqueInput
}

/**
 * check_io findFirst
 */
export type check_ioFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the check_io
   */
  select?: Prisma.check_ioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the check_io
   */
  omit?: Prisma.check_ioOmit<ExtArgs> | null
  /**
   * Filter, which check_io to fetch.
   */
  where?: Prisma.check_ioWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of check_ios to fetch.
   */
  orderBy?: Prisma.check_ioOrderByWithRelationInput | Prisma.check_ioOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for check_ios.
   */
  cursor?: Prisma.check_ioWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` check_ios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` check_ios.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of check_ios.
   */
  distinct?: Prisma.Check_ioScalarFieldEnum | Prisma.Check_ioScalarFieldEnum[]
}

/**
 * check_io findFirstOrThrow
 */
export type check_ioFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the check_io
   */
  select?: Prisma.check_ioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the check_io
   */
  omit?: Prisma.check_ioOmit<ExtArgs> | null
  /**
   * Filter, which check_io to fetch.
   */
  where?: Prisma.check_ioWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of check_ios to fetch.
   */
  orderBy?: Prisma.check_ioOrderByWithRelationInput | Prisma.check_ioOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for check_ios.
   */
  cursor?: Prisma.check_ioWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` check_ios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` check_ios.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of check_ios.
   */
  distinct?: Prisma.Check_ioScalarFieldEnum | Prisma.Check_ioScalarFieldEnum[]
}

/**
 * check_io findMany
 */
export type check_ioFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the check_io
   */
  select?: Prisma.check_ioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the check_io
   */
  omit?: Prisma.check_ioOmit<ExtArgs> | null
  /**
   * Filter, which check_ios to fetch.
   */
  where?: Prisma.check_ioWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of check_ios to fetch.
   */
  orderBy?: Prisma.check_ioOrderByWithRelationInput | Prisma.check_ioOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing check_ios.
   */
  cursor?: Prisma.check_ioWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` check_ios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` check_ios.
   */
  skip?: number
  distinct?: Prisma.Check_ioScalarFieldEnum | Prisma.Check_ioScalarFieldEnum[]
}

/**
 * check_io create
 */
export type check_ioCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the check_io
   */
  select?: Prisma.check_ioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the check_io
   */
  omit?: Prisma.check_ioOmit<ExtArgs> | null
  /**
   * The data needed to create a check_io.
   */
  data: Prisma.XOR<Prisma.check_ioCreateInput, Prisma.check_ioUncheckedCreateInput>
}

/**
 * check_io createMany
 */
export type check_ioCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many check_ios.
   */
  data: Prisma.check_ioCreateManyInput | Prisma.check_ioCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * check_io update
 */
export type check_ioUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the check_io
   */
  select?: Prisma.check_ioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the check_io
   */
  omit?: Prisma.check_ioOmit<ExtArgs> | null
  /**
   * The data needed to update a check_io.
   */
  data: Prisma.XOR<Prisma.check_ioUpdateInput, Prisma.check_ioUncheckedUpdateInput>
  /**
   * Choose, which check_io to update.
   */
  where: Prisma.check_ioWhereUniqueInput
}

/**
 * check_io updateMany
 */
export type check_ioUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update check_ios.
   */
  data: Prisma.XOR<Prisma.check_ioUpdateManyMutationInput, Prisma.check_ioUncheckedUpdateManyInput>
  /**
   * Filter which check_ios to update
   */
  where?: Prisma.check_ioWhereInput
  /**
   * Limit how many check_ios to update.
   */
  limit?: number
}

/**
 * check_io upsert
 */
export type check_ioUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the check_io
   */
  select?: Prisma.check_ioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the check_io
   */
  omit?: Prisma.check_ioOmit<ExtArgs> | null
  /**
   * The filter to search for the check_io to update in case it exists.
   */
  where: Prisma.check_ioWhereUniqueInput
  /**
   * In case the check_io found by the `where` argument doesn't exist, create a new check_io with this data.
   */
  create: Prisma.XOR<Prisma.check_ioCreateInput, Prisma.check_ioUncheckedCreateInput>
  /**
   * In case the check_io was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.check_ioUpdateInput, Prisma.check_ioUncheckedUpdateInput>
}

/**
 * check_io delete
 */
export type check_ioDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the check_io
   */
  select?: Prisma.check_ioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the check_io
   */
  omit?: Prisma.check_ioOmit<ExtArgs> | null
  /**
   * Filter which check_io to delete.
   */
  where: Prisma.check_ioWhereUniqueInput
}

/**
 * check_io deleteMany
 */
export type check_ioDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which check_ios to delete
   */
  where?: Prisma.check_ioWhereInput
  /**
   * Limit how many check_ios to delete.
   */
  limit?: number
}

/**
 * check_io without action
 */
export type check_ioDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the check_io
   */
  select?: Prisma.check_ioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the check_io
   */
  omit?: Prisma.check_ioOmit<ExtArgs> | null
}
