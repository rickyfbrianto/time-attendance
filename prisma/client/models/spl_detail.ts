
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `spl_detail` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model spl_detail
 * 
 */
export type spl_detailModel = runtime.Types.Result.DefaultSelection<Prisma.$spl_detailPayload>

export type AggregateSpl_detail = {
  _count: Spl_detailCountAggregateOutputType | null
  _avg: Spl_detailAvgAggregateOutputType | null
  _sum: Spl_detailSumAggregateOutputType | null
  _min: Spl_detailMinAggregateOutputType | null
  _max: Spl_detailMaxAggregateOutputType | null
}

export type Spl_detailAvgAggregateOutputType = {
  step: number | null
}

export type Spl_detailSumAggregateOutputType = {
  step: number | null
}

export type Spl_detailMinAggregateOutputType = {
  spl_detail_id: string | null
  step: number | null
  spl_id: string | null
  payroll: string | null
  description: string | null
}

export type Spl_detailMaxAggregateOutputType = {
  spl_detail_id: string | null
  step: number | null
  spl_id: string | null
  payroll: string | null
  description: string | null
}

export type Spl_detailCountAggregateOutputType = {
  spl_detail_id: number
  step: number
  spl_id: number
  payroll: number
  description: number
  _all: number
}


export type Spl_detailAvgAggregateInputType = {
  step?: true
}

export type Spl_detailSumAggregateInputType = {
  step?: true
}

export type Spl_detailMinAggregateInputType = {
  spl_detail_id?: true
  step?: true
  spl_id?: true
  payroll?: true
  description?: true
}

export type Spl_detailMaxAggregateInputType = {
  spl_detail_id?: true
  step?: true
  spl_id?: true
  payroll?: true
  description?: true
}

export type Spl_detailCountAggregateInputType = {
  spl_detail_id?: true
  step?: true
  spl_id?: true
  payroll?: true
  description?: true
  _all?: true
}

export type Spl_detailAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which spl_detail to aggregate.
   */
  where?: Prisma.spl_detailWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of spl_details to fetch.
   */
  orderBy?: Prisma.spl_detailOrderByWithRelationInput | Prisma.spl_detailOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.spl_detailWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` spl_details from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` spl_details.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned spl_details
  **/
  _count?: true | Spl_detailCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Spl_detailAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Spl_detailSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Spl_detailMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Spl_detailMaxAggregateInputType
}

export type GetSpl_detailAggregateType<T extends Spl_detailAggregateArgs> = {
      [P in keyof T & keyof AggregateSpl_detail]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateSpl_detail[P]>
    : Prisma.GetScalarType<T[P], AggregateSpl_detail[P]>
}




export type spl_detailGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.spl_detailWhereInput
  orderBy?: Prisma.spl_detailOrderByWithAggregationInput | Prisma.spl_detailOrderByWithAggregationInput[]
  by: Prisma.Spl_detailScalarFieldEnum[] | Prisma.Spl_detailScalarFieldEnum
  having?: Prisma.spl_detailScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Spl_detailCountAggregateInputType | true
  _avg?: Spl_detailAvgAggregateInputType
  _sum?: Spl_detailSumAggregateInputType
  _min?: Spl_detailMinAggregateInputType
  _max?: Spl_detailMaxAggregateInputType
}

export type Spl_detailGroupByOutputType = {
  spl_detail_id: string
  step: number
  spl_id: string
  payroll: string | null
  description: string
  _count: Spl_detailCountAggregateOutputType | null
  _avg: Spl_detailAvgAggregateOutputType | null
  _sum: Spl_detailSumAggregateOutputType | null
  _min: Spl_detailMinAggregateOutputType | null
  _max: Spl_detailMaxAggregateOutputType | null
}

type GetSpl_detailGroupByPayload<T extends spl_detailGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Spl_detailGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Spl_detailGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Spl_detailGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Spl_detailGroupByOutputType[P]>
      }
    >
  > 



export type spl_detailWhereInput = {
  AND?: Prisma.spl_detailWhereInput | Prisma.spl_detailWhereInput[]
  OR?: Prisma.spl_detailWhereInput[]
  NOT?: Prisma.spl_detailWhereInput | Prisma.spl_detailWhereInput[]
  spl_detail_id?: Prisma.StringFilter<"spl_detail"> | string
  step?: Prisma.IntFilter<"spl_detail"> | number
  spl_id?: Prisma.StringFilter<"spl_detail"> | string
  payroll?: Prisma.StringNullableFilter<"spl_detail"> | string | null
  description?: Prisma.StringFilter<"spl_detail"> | string
  employee?: Prisma.XOR<Prisma.EmployeeNullableScalarRelationFilter, Prisma.employeeWhereInput> | null
  spl?: Prisma.XOR<Prisma.SplScalarRelationFilter, Prisma.splWhereInput>
}

export type spl_detailOrderByWithRelationInput = {
  spl_detail_id?: Prisma.SortOrder
  step?: Prisma.SortOrder
  spl_id?: Prisma.SortOrder
  payroll?: Prisma.SortOrderInput | Prisma.SortOrder
  description?: Prisma.SortOrder
  employee?: Prisma.employeeOrderByWithRelationInput
  spl?: Prisma.splOrderByWithRelationInput
  _relevance?: Prisma.spl_detailOrderByRelevanceInput
}

export type spl_detailWhereUniqueInput = Prisma.AtLeast<{
  spl_detail_id?: string
  AND?: Prisma.spl_detailWhereInput | Prisma.spl_detailWhereInput[]
  OR?: Prisma.spl_detailWhereInput[]
  NOT?: Prisma.spl_detailWhereInput | Prisma.spl_detailWhereInput[]
  step?: Prisma.IntFilter<"spl_detail"> | number
  spl_id?: Prisma.StringFilter<"spl_detail"> | string
  payroll?: Prisma.StringNullableFilter<"spl_detail"> | string | null
  description?: Prisma.StringFilter<"spl_detail"> | string
  employee?: Prisma.XOR<Prisma.EmployeeNullableScalarRelationFilter, Prisma.employeeWhereInput> | null
  spl?: Prisma.XOR<Prisma.SplScalarRelationFilter, Prisma.splWhereInput>
}, "spl_detail_id">

export type spl_detailOrderByWithAggregationInput = {
  spl_detail_id?: Prisma.SortOrder
  step?: Prisma.SortOrder
  spl_id?: Prisma.SortOrder
  payroll?: Prisma.SortOrderInput | Prisma.SortOrder
  description?: Prisma.SortOrder
  _count?: Prisma.spl_detailCountOrderByAggregateInput
  _avg?: Prisma.spl_detailAvgOrderByAggregateInput
  _max?: Prisma.spl_detailMaxOrderByAggregateInput
  _min?: Prisma.spl_detailMinOrderByAggregateInput
  _sum?: Prisma.spl_detailSumOrderByAggregateInput
}

export type spl_detailScalarWhereWithAggregatesInput = {
  AND?: Prisma.spl_detailScalarWhereWithAggregatesInput | Prisma.spl_detailScalarWhereWithAggregatesInput[]
  OR?: Prisma.spl_detailScalarWhereWithAggregatesInput[]
  NOT?: Prisma.spl_detailScalarWhereWithAggregatesInput | Prisma.spl_detailScalarWhereWithAggregatesInput[]
  spl_detail_id?: Prisma.StringWithAggregatesFilter<"spl_detail"> | string
  step?: Prisma.IntWithAggregatesFilter<"spl_detail"> | number
  spl_id?: Prisma.StringWithAggregatesFilter<"spl_detail"> | string
  payroll?: Prisma.StringNullableWithAggregatesFilter<"spl_detail"> | string | null
  description?: Prisma.StringWithAggregatesFilter<"spl_detail"> | string
}

export type spl_detailCreateInput = {
  spl_detail_id: string
  step: number
  description: string
  employee?: Prisma.employeeCreateNestedOneWithoutSpl_detailInput
  spl: Prisma.splCreateNestedOneWithoutSpl_detailInput
}

export type spl_detailUncheckedCreateInput = {
  spl_detail_id: string
  step: number
  spl_id: string
  payroll?: string | null
  description: string
}

export type spl_detailUpdateInput = {
  spl_detail_id?: Prisma.StringFieldUpdateOperationsInput | string
  step?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.StringFieldUpdateOperationsInput | string
  employee?: Prisma.employeeUpdateOneWithoutSpl_detailNestedInput
  spl?: Prisma.splUpdateOneRequiredWithoutSpl_detailNestedInput
}

export type spl_detailUncheckedUpdateInput = {
  spl_detail_id?: Prisma.StringFieldUpdateOperationsInput | string
  step?: Prisma.IntFieldUpdateOperationsInput | number
  spl_id?: Prisma.StringFieldUpdateOperationsInput | string
  payroll?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
}

export type spl_detailCreateManyInput = {
  spl_detail_id: string
  step: number
  spl_id: string
  payroll?: string | null
  description: string
}

export type spl_detailUpdateManyMutationInput = {
  spl_detail_id?: Prisma.StringFieldUpdateOperationsInput | string
  step?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.StringFieldUpdateOperationsInput | string
}

export type spl_detailUncheckedUpdateManyInput = {
  spl_detail_id?: Prisma.StringFieldUpdateOperationsInput | string
  step?: Prisma.IntFieldUpdateOperationsInput | number
  spl_id?: Prisma.StringFieldUpdateOperationsInput | string
  payroll?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
}

export type Spl_detailListRelationFilter = {
  every?: Prisma.spl_detailWhereInput
  some?: Prisma.spl_detailWhereInput
  none?: Prisma.spl_detailWhereInput
}

export type spl_detailOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type spl_detailOrderByRelevanceInput = {
  fields: Prisma.spl_detailOrderByRelevanceFieldEnum | Prisma.spl_detailOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type spl_detailCountOrderByAggregateInput = {
  spl_detail_id?: Prisma.SortOrder
  step?: Prisma.SortOrder
  spl_id?: Prisma.SortOrder
  payroll?: Prisma.SortOrder
  description?: Prisma.SortOrder
}

export type spl_detailAvgOrderByAggregateInput = {
  step?: Prisma.SortOrder
}

export type spl_detailMaxOrderByAggregateInput = {
  spl_detail_id?: Prisma.SortOrder
  step?: Prisma.SortOrder
  spl_id?: Prisma.SortOrder
  payroll?: Prisma.SortOrder
  description?: Prisma.SortOrder
}

export type spl_detailMinOrderByAggregateInput = {
  spl_detail_id?: Prisma.SortOrder
  step?: Prisma.SortOrder
  spl_id?: Prisma.SortOrder
  payroll?: Prisma.SortOrder
  description?: Prisma.SortOrder
}

export type spl_detailSumOrderByAggregateInput = {
  step?: Prisma.SortOrder
}

export type spl_detailCreateNestedManyWithoutEmployeeInput = {
  create?: Prisma.XOR<Prisma.spl_detailCreateWithoutEmployeeInput, Prisma.spl_detailUncheckedCreateWithoutEmployeeInput> | Prisma.spl_detailCreateWithoutEmployeeInput[] | Prisma.spl_detailUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.spl_detailCreateOrConnectWithoutEmployeeInput | Prisma.spl_detailCreateOrConnectWithoutEmployeeInput[]
  createMany?: Prisma.spl_detailCreateManyEmployeeInputEnvelope
  connect?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
}

export type spl_detailUncheckedCreateNestedManyWithoutEmployeeInput = {
  create?: Prisma.XOR<Prisma.spl_detailCreateWithoutEmployeeInput, Prisma.spl_detailUncheckedCreateWithoutEmployeeInput> | Prisma.spl_detailCreateWithoutEmployeeInput[] | Prisma.spl_detailUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.spl_detailCreateOrConnectWithoutEmployeeInput | Prisma.spl_detailCreateOrConnectWithoutEmployeeInput[]
  createMany?: Prisma.spl_detailCreateManyEmployeeInputEnvelope
  connect?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
}

export type spl_detailUpdateManyWithoutEmployeeNestedInput = {
  create?: Prisma.XOR<Prisma.spl_detailCreateWithoutEmployeeInput, Prisma.spl_detailUncheckedCreateWithoutEmployeeInput> | Prisma.spl_detailCreateWithoutEmployeeInput[] | Prisma.spl_detailUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.spl_detailCreateOrConnectWithoutEmployeeInput | Prisma.spl_detailCreateOrConnectWithoutEmployeeInput[]
  upsert?: Prisma.spl_detailUpsertWithWhereUniqueWithoutEmployeeInput | Prisma.spl_detailUpsertWithWhereUniqueWithoutEmployeeInput[]
  createMany?: Prisma.spl_detailCreateManyEmployeeInputEnvelope
  set?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  disconnect?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  delete?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  connect?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  update?: Prisma.spl_detailUpdateWithWhereUniqueWithoutEmployeeInput | Prisma.spl_detailUpdateWithWhereUniqueWithoutEmployeeInput[]
  updateMany?: Prisma.spl_detailUpdateManyWithWhereWithoutEmployeeInput | Prisma.spl_detailUpdateManyWithWhereWithoutEmployeeInput[]
  deleteMany?: Prisma.spl_detailScalarWhereInput | Prisma.spl_detailScalarWhereInput[]
}

export type spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput = {
  create?: Prisma.XOR<Prisma.spl_detailCreateWithoutEmployeeInput, Prisma.spl_detailUncheckedCreateWithoutEmployeeInput> | Prisma.spl_detailCreateWithoutEmployeeInput[] | Prisma.spl_detailUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.spl_detailCreateOrConnectWithoutEmployeeInput | Prisma.spl_detailCreateOrConnectWithoutEmployeeInput[]
  upsert?: Prisma.spl_detailUpsertWithWhereUniqueWithoutEmployeeInput | Prisma.spl_detailUpsertWithWhereUniqueWithoutEmployeeInput[]
  createMany?: Prisma.spl_detailCreateManyEmployeeInputEnvelope
  set?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  disconnect?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  delete?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  connect?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  update?: Prisma.spl_detailUpdateWithWhereUniqueWithoutEmployeeInput | Prisma.spl_detailUpdateWithWhereUniqueWithoutEmployeeInput[]
  updateMany?: Prisma.spl_detailUpdateManyWithWhereWithoutEmployeeInput | Prisma.spl_detailUpdateManyWithWhereWithoutEmployeeInput[]
  deleteMany?: Prisma.spl_detailScalarWhereInput | Prisma.spl_detailScalarWhereInput[]
}

export type spl_detailCreateNestedManyWithoutSplInput = {
  create?: Prisma.XOR<Prisma.spl_detailCreateWithoutSplInput, Prisma.spl_detailUncheckedCreateWithoutSplInput> | Prisma.spl_detailCreateWithoutSplInput[] | Prisma.spl_detailUncheckedCreateWithoutSplInput[]
  connectOrCreate?: Prisma.spl_detailCreateOrConnectWithoutSplInput | Prisma.spl_detailCreateOrConnectWithoutSplInput[]
  createMany?: Prisma.spl_detailCreateManySplInputEnvelope
  connect?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
}

export type spl_detailUncheckedCreateNestedManyWithoutSplInput = {
  create?: Prisma.XOR<Prisma.spl_detailCreateWithoutSplInput, Prisma.spl_detailUncheckedCreateWithoutSplInput> | Prisma.spl_detailCreateWithoutSplInput[] | Prisma.spl_detailUncheckedCreateWithoutSplInput[]
  connectOrCreate?: Prisma.spl_detailCreateOrConnectWithoutSplInput | Prisma.spl_detailCreateOrConnectWithoutSplInput[]
  createMany?: Prisma.spl_detailCreateManySplInputEnvelope
  connect?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
}

export type spl_detailUpdateManyWithoutSplNestedInput = {
  create?: Prisma.XOR<Prisma.spl_detailCreateWithoutSplInput, Prisma.spl_detailUncheckedCreateWithoutSplInput> | Prisma.spl_detailCreateWithoutSplInput[] | Prisma.spl_detailUncheckedCreateWithoutSplInput[]
  connectOrCreate?: Prisma.spl_detailCreateOrConnectWithoutSplInput | Prisma.spl_detailCreateOrConnectWithoutSplInput[]
  upsert?: Prisma.spl_detailUpsertWithWhereUniqueWithoutSplInput | Prisma.spl_detailUpsertWithWhereUniqueWithoutSplInput[]
  createMany?: Prisma.spl_detailCreateManySplInputEnvelope
  set?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  disconnect?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  delete?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  connect?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  update?: Prisma.spl_detailUpdateWithWhereUniqueWithoutSplInput | Prisma.spl_detailUpdateWithWhereUniqueWithoutSplInput[]
  updateMany?: Prisma.spl_detailUpdateManyWithWhereWithoutSplInput | Prisma.spl_detailUpdateManyWithWhereWithoutSplInput[]
  deleteMany?: Prisma.spl_detailScalarWhereInput | Prisma.spl_detailScalarWhereInput[]
}

export type spl_detailUncheckedUpdateManyWithoutSplNestedInput = {
  create?: Prisma.XOR<Prisma.spl_detailCreateWithoutSplInput, Prisma.spl_detailUncheckedCreateWithoutSplInput> | Prisma.spl_detailCreateWithoutSplInput[] | Prisma.spl_detailUncheckedCreateWithoutSplInput[]
  connectOrCreate?: Prisma.spl_detailCreateOrConnectWithoutSplInput | Prisma.spl_detailCreateOrConnectWithoutSplInput[]
  upsert?: Prisma.spl_detailUpsertWithWhereUniqueWithoutSplInput | Prisma.spl_detailUpsertWithWhereUniqueWithoutSplInput[]
  createMany?: Prisma.spl_detailCreateManySplInputEnvelope
  set?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  disconnect?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  delete?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  connect?: Prisma.spl_detailWhereUniqueInput | Prisma.spl_detailWhereUniqueInput[]
  update?: Prisma.spl_detailUpdateWithWhereUniqueWithoutSplInput | Prisma.spl_detailUpdateWithWhereUniqueWithoutSplInput[]
  updateMany?: Prisma.spl_detailUpdateManyWithWhereWithoutSplInput | Prisma.spl_detailUpdateManyWithWhereWithoutSplInput[]
  deleteMany?: Prisma.spl_detailScalarWhereInput | Prisma.spl_detailScalarWhereInput[]
}

export type spl_detailCreateWithoutEmployeeInput = {
  spl_detail_id: string
  step: number
  description: string
  spl: Prisma.splCreateNestedOneWithoutSpl_detailInput
}

export type spl_detailUncheckedCreateWithoutEmployeeInput = {
  spl_detail_id: string
  step: number
  spl_id: string
  description: string
}

export type spl_detailCreateOrConnectWithoutEmployeeInput = {
  where: Prisma.spl_detailWhereUniqueInput
  create: Prisma.XOR<Prisma.spl_detailCreateWithoutEmployeeInput, Prisma.spl_detailUncheckedCreateWithoutEmployeeInput>
}

export type spl_detailCreateManyEmployeeInputEnvelope = {
  data: Prisma.spl_detailCreateManyEmployeeInput | Prisma.spl_detailCreateManyEmployeeInput[]
  skipDuplicates?: boolean
}

export type spl_detailUpsertWithWhereUniqueWithoutEmployeeInput = {
  where: Prisma.spl_detailWhereUniqueInput
  update: Prisma.XOR<Prisma.spl_detailUpdateWithoutEmployeeInput, Prisma.spl_detailUncheckedUpdateWithoutEmployeeInput>
  create: Prisma.XOR<Prisma.spl_detailCreateWithoutEmployeeInput, Prisma.spl_detailUncheckedCreateWithoutEmployeeInput>
}

export type spl_detailUpdateWithWhereUniqueWithoutEmployeeInput = {
  where: Prisma.spl_detailWhereUniqueInput
  data: Prisma.XOR<Prisma.spl_detailUpdateWithoutEmployeeInput, Prisma.spl_detailUncheckedUpdateWithoutEmployeeInput>
}

export type spl_detailUpdateManyWithWhereWithoutEmployeeInput = {
  where: Prisma.spl_detailScalarWhereInput
  data: Prisma.XOR<Prisma.spl_detailUpdateManyMutationInput, Prisma.spl_detailUncheckedUpdateManyWithoutEmployeeInput>
}

export type spl_detailScalarWhereInput = {
  AND?: Prisma.spl_detailScalarWhereInput | Prisma.spl_detailScalarWhereInput[]
  OR?: Prisma.spl_detailScalarWhereInput[]
  NOT?: Prisma.spl_detailScalarWhereInput | Prisma.spl_detailScalarWhereInput[]
  spl_detail_id?: Prisma.StringFilter<"spl_detail"> | string
  step?: Prisma.IntFilter<"spl_detail"> | number
  spl_id?: Prisma.StringFilter<"spl_detail"> | string
  payroll?: Prisma.StringNullableFilter<"spl_detail"> | string | null
  description?: Prisma.StringFilter<"spl_detail"> | string
}

export type spl_detailCreateWithoutSplInput = {
  spl_detail_id: string
  step: number
  description: string
  employee?: Prisma.employeeCreateNestedOneWithoutSpl_detailInput
}

export type spl_detailUncheckedCreateWithoutSplInput = {
  spl_detail_id: string
  step: number
  payroll?: string | null
  description: string
}

export type spl_detailCreateOrConnectWithoutSplInput = {
  where: Prisma.spl_detailWhereUniqueInput
  create: Prisma.XOR<Prisma.spl_detailCreateWithoutSplInput, Prisma.spl_detailUncheckedCreateWithoutSplInput>
}

export type spl_detailCreateManySplInputEnvelope = {
  data: Prisma.spl_detailCreateManySplInput | Prisma.spl_detailCreateManySplInput[]
  skipDuplicates?: boolean
}

export type spl_detailUpsertWithWhereUniqueWithoutSplInput = {
  where: Prisma.spl_detailWhereUniqueInput
  update: Prisma.XOR<Prisma.spl_detailUpdateWithoutSplInput, Prisma.spl_detailUncheckedUpdateWithoutSplInput>
  create: Prisma.XOR<Prisma.spl_detailCreateWithoutSplInput, Prisma.spl_detailUncheckedCreateWithoutSplInput>
}

export type spl_detailUpdateWithWhereUniqueWithoutSplInput = {
  where: Prisma.spl_detailWhereUniqueInput
  data: Prisma.XOR<Prisma.spl_detailUpdateWithoutSplInput, Prisma.spl_detailUncheckedUpdateWithoutSplInput>
}

export type spl_detailUpdateManyWithWhereWithoutSplInput = {
  where: Prisma.spl_detailScalarWhereInput
  data: Prisma.XOR<Prisma.spl_detailUpdateManyMutationInput, Prisma.spl_detailUncheckedUpdateManyWithoutSplInput>
}

export type spl_detailCreateManyEmployeeInput = {
  spl_detail_id: string
  step: number
  spl_id: string
  description: string
}

export type spl_detailUpdateWithoutEmployeeInput = {
  spl_detail_id?: Prisma.StringFieldUpdateOperationsInput | string
  step?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.StringFieldUpdateOperationsInput | string
  spl?: Prisma.splUpdateOneRequiredWithoutSpl_detailNestedInput
}

export type spl_detailUncheckedUpdateWithoutEmployeeInput = {
  spl_detail_id?: Prisma.StringFieldUpdateOperationsInput | string
  step?: Prisma.IntFieldUpdateOperationsInput | number
  spl_id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
}

export type spl_detailUncheckedUpdateManyWithoutEmployeeInput = {
  spl_detail_id?: Prisma.StringFieldUpdateOperationsInput | string
  step?: Prisma.IntFieldUpdateOperationsInput | number
  spl_id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
}

export type spl_detailCreateManySplInput = {
  spl_detail_id: string
  step: number
  payroll?: string | null
  description: string
}

export type spl_detailUpdateWithoutSplInput = {
  spl_detail_id?: Prisma.StringFieldUpdateOperationsInput | string
  step?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.StringFieldUpdateOperationsInput | string
  employee?: Prisma.employeeUpdateOneWithoutSpl_detailNestedInput
}

export type spl_detailUncheckedUpdateWithoutSplInput = {
  spl_detail_id?: Prisma.StringFieldUpdateOperationsInput | string
  step?: Prisma.IntFieldUpdateOperationsInput | number
  payroll?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
}

export type spl_detailUncheckedUpdateManyWithoutSplInput = {
  spl_detail_id?: Prisma.StringFieldUpdateOperationsInput | string
  step?: Prisma.IntFieldUpdateOperationsInput | number
  payroll?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.StringFieldUpdateOperationsInput | string
}



export type spl_detailSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  spl_detail_id?: boolean
  step?: boolean
  spl_id?: boolean
  payroll?: boolean
  description?: boolean
  employee?: boolean | Prisma.spl_detail$employeeArgs<ExtArgs>
  spl?: boolean | Prisma.splDefaultArgs<ExtArgs>
}, ExtArgs["result"]["spl_detail"]>



export type spl_detailSelectScalar = {
  spl_detail_id?: boolean
  step?: boolean
  spl_id?: boolean
  payroll?: boolean
  description?: boolean
}

export type spl_detailOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"spl_detail_id" | "step" | "spl_id" | "payroll" | "description", ExtArgs["result"]["spl_detail"]>
export type spl_detailInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  employee?: boolean | Prisma.spl_detail$employeeArgs<ExtArgs>
  spl?: boolean | Prisma.splDefaultArgs<ExtArgs>
}

export type $spl_detailPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "spl_detail"
  objects: {
    employee: Prisma.$employeePayload<ExtArgs> | null
    spl: Prisma.$splPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    spl_detail_id: string
    step: number
    spl_id: string
    payroll: string | null
    description: string
  }, ExtArgs["result"]["spl_detail"]>
  composites: {}
}

export type spl_detailGetPayload<S extends boolean | null | undefined | spl_detailDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$spl_detailPayload, S>

export type spl_detailCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<spl_detailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Spl_detailCountAggregateInputType | true
  }

export interface spl_detailDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['spl_detail'], meta: { name: 'spl_detail' } }
  /**
   * Find zero or one Spl_detail that matches the filter.
   * @param {spl_detailFindUniqueArgs} args - Arguments to find a Spl_detail
   * @example
   * // Get one Spl_detail
   * const spl_detail = await prisma.spl_detail.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends spl_detailFindUniqueArgs>(args: Prisma.SelectSubset<T, spl_detailFindUniqueArgs<ExtArgs>>): Prisma.Prisma__spl_detailClient<runtime.Types.Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Spl_detail that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {spl_detailFindUniqueOrThrowArgs} args - Arguments to find a Spl_detail
   * @example
   * // Get one Spl_detail
   * const spl_detail = await prisma.spl_detail.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends spl_detailFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, spl_detailFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__spl_detailClient<runtime.Types.Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Spl_detail that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {spl_detailFindFirstArgs} args - Arguments to find a Spl_detail
   * @example
   * // Get one Spl_detail
   * const spl_detail = await prisma.spl_detail.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends spl_detailFindFirstArgs>(args?: Prisma.SelectSubset<T, spl_detailFindFirstArgs<ExtArgs>>): Prisma.Prisma__spl_detailClient<runtime.Types.Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Spl_detail that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {spl_detailFindFirstOrThrowArgs} args - Arguments to find a Spl_detail
   * @example
   * // Get one Spl_detail
   * const spl_detail = await prisma.spl_detail.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends spl_detailFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, spl_detailFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__spl_detailClient<runtime.Types.Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Spl_details that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {spl_detailFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Spl_details
   * const spl_details = await prisma.spl_detail.findMany()
   * 
   * // Get first 10 Spl_details
   * const spl_details = await prisma.spl_detail.findMany({ take: 10 })
   * 
   * // Only select the `spl_detail_id`
   * const spl_detailWithSpl_detail_idOnly = await prisma.spl_detail.findMany({ select: { spl_detail_id: true } })
   * 
   */
  findMany<T extends spl_detailFindManyArgs>(args?: Prisma.SelectSubset<T, spl_detailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Spl_detail.
   * @param {spl_detailCreateArgs} args - Arguments to create a Spl_detail.
   * @example
   * // Create one Spl_detail
   * const Spl_detail = await prisma.spl_detail.create({
   *   data: {
   *     // ... data to create a Spl_detail
   *   }
   * })
   * 
   */
  create<T extends spl_detailCreateArgs>(args: Prisma.SelectSubset<T, spl_detailCreateArgs<ExtArgs>>): Prisma.Prisma__spl_detailClient<runtime.Types.Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Spl_details.
   * @param {spl_detailCreateManyArgs} args - Arguments to create many Spl_details.
   * @example
   * // Create many Spl_details
   * const spl_detail = await prisma.spl_detail.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends spl_detailCreateManyArgs>(args?: Prisma.SelectSubset<T, spl_detailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Spl_detail.
   * @param {spl_detailDeleteArgs} args - Arguments to delete one Spl_detail.
   * @example
   * // Delete one Spl_detail
   * const Spl_detail = await prisma.spl_detail.delete({
   *   where: {
   *     // ... filter to delete one Spl_detail
   *   }
   * })
   * 
   */
  delete<T extends spl_detailDeleteArgs>(args: Prisma.SelectSubset<T, spl_detailDeleteArgs<ExtArgs>>): Prisma.Prisma__spl_detailClient<runtime.Types.Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Spl_detail.
   * @param {spl_detailUpdateArgs} args - Arguments to update one Spl_detail.
   * @example
   * // Update one Spl_detail
   * const spl_detail = await prisma.spl_detail.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends spl_detailUpdateArgs>(args: Prisma.SelectSubset<T, spl_detailUpdateArgs<ExtArgs>>): Prisma.Prisma__spl_detailClient<runtime.Types.Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Spl_details.
   * @param {spl_detailDeleteManyArgs} args - Arguments to filter Spl_details to delete.
   * @example
   * // Delete a few Spl_details
   * const { count } = await prisma.spl_detail.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends spl_detailDeleteManyArgs>(args?: Prisma.SelectSubset<T, spl_detailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Spl_details.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {spl_detailUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Spl_details
   * const spl_detail = await prisma.spl_detail.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends spl_detailUpdateManyArgs>(args: Prisma.SelectSubset<T, spl_detailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Spl_detail.
   * @param {spl_detailUpsertArgs} args - Arguments to update or create a Spl_detail.
   * @example
   * // Update or create a Spl_detail
   * const spl_detail = await prisma.spl_detail.upsert({
   *   create: {
   *     // ... data to create a Spl_detail
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Spl_detail we want to update
   *   }
   * })
   */
  upsert<T extends spl_detailUpsertArgs>(args: Prisma.SelectSubset<T, spl_detailUpsertArgs<ExtArgs>>): Prisma.Prisma__spl_detailClient<runtime.Types.Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Spl_details.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {spl_detailCountArgs} args - Arguments to filter Spl_details to count.
   * @example
   * // Count the number of Spl_details
   * const count = await prisma.spl_detail.count({
   *   where: {
   *     // ... the filter for the Spl_details we want to count
   *   }
   * })
  **/
  count<T extends spl_detailCountArgs>(
    args?: Prisma.Subset<T, spl_detailCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Spl_detailCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Spl_detail.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Spl_detailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Spl_detailAggregateArgs>(args: Prisma.Subset<T, Spl_detailAggregateArgs>): Prisma.PrismaPromise<GetSpl_detailAggregateType<T>>

  /**
   * Group by Spl_detail.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {spl_detailGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends spl_detailGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: spl_detailGroupByArgs['orderBy'] }
      : { orderBy?: spl_detailGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, spl_detailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSpl_detailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the spl_detail model
 */
readonly fields: spl_detailFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for spl_detail.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__spl_detailClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  employee<T extends Prisma.spl_detail$employeeArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.spl_detail$employeeArgs<ExtArgs>>): Prisma.Prisma__employeeClient<runtime.Types.Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  spl<T extends Prisma.splDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.splDefaultArgs<ExtArgs>>): Prisma.Prisma__splClient<runtime.Types.Result.GetResult<Prisma.$splPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the spl_detail model
 */
export interface spl_detailFieldRefs {
  readonly spl_detail_id: Prisma.FieldRef<"spl_detail", 'String'>
  readonly step: Prisma.FieldRef<"spl_detail", 'Int'>
  readonly spl_id: Prisma.FieldRef<"spl_detail", 'String'>
  readonly payroll: Prisma.FieldRef<"spl_detail", 'String'>
  readonly description: Prisma.FieldRef<"spl_detail", 'String'>
}
    

// Custom InputTypes
/**
 * spl_detail findUnique
 */
export type spl_detailFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the spl_detail
   */
  select?: Prisma.spl_detailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the spl_detail
   */
  omit?: Prisma.spl_detailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.spl_detailInclude<ExtArgs> | null
  /**
   * Filter, which spl_detail to fetch.
   */
  where: Prisma.spl_detailWhereUniqueInput
}

/**
 * spl_detail findUniqueOrThrow
 */
export type spl_detailFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the spl_detail
   */
  select?: Prisma.spl_detailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the spl_detail
   */
  omit?: Prisma.spl_detailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.spl_detailInclude<ExtArgs> | null
  /**
   * Filter, which spl_detail to fetch.
   */
  where: Prisma.spl_detailWhereUniqueInput
}

/**
 * spl_detail findFirst
 */
export type spl_detailFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the spl_detail
   */
  select?: Prisma.spl_detailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the spl_detail
   */
  omit?: Prisma.spl_detailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.spl_detailInclude<ExtArgs> | null
  /**
   * Filter, which spl_detail to fetch.
   */
  where?: Prisma.spl_detailWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of spl_details to fetch.
   */
  orderBy?: Prisma.spl_detailOrderByWithRelationInput | Prisma.spl_detailOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for spl_details.
   */
  cursor?: Prisma.spl_detailWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` spl_details from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` spl_details.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of spl_details.
   */
  distinct?: Prisma.Spl_detailScalarFieldEnum | Prisma.Spl_detailScalarFieldEnum[]
}

/**
 * spl_detail findFirstOrThrow
 */
export type spl_detailFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the spl_detail
   */
  select?: Prisma.spl_detailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the spl_detail
   */
  omit?: Prisma.spl_detailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.spl_detailInclude<ExtArgs> | null
  /**
   * Filter, which spl_detail to fetch.
   */
  where?: Prisma.spl_detailWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of spl_details to fetch.
   */
  orderBy?: Prisma.spl_detailOrderByWithRelationInput | Prisma.spl_detailOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for spl_details.
   */
  cursor?: Prisma.spl_detailWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` spl_details from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` spl_details.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of spl_details.
   */
  distinct?: Prisma.Spl_detailScalarFieldEnum | Prisma.Spl_detailScalarFieldEnum[]
}

/**
 * spl_detail findMany
 */
export type spl_detailFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the spl_detail
   */
  select?: Prisma.spl_detailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the spl_detail
   */
  omit?: Prisma.spl_detailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.spl_detailInclude<ExtArgs> | null
  /**
   * Filter, which spl_details to fetch.
   */
  where?: Prisma.spl_detailWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of spl_details to fetch.
   */
  orderBy?: Prisma.spl_detailOrderByWithRelationInput | Prisma.spl_detailOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing spl_details.
   */
  cursor?: Prisma.spl_detailWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` spl_details from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` spl_details.
   */
  skip?: number
  distinct?: Prisma.Spl_detailScalarFieldEnum | Prisma.Spl_detailScalarFieldEnum[]
}

/**
 * spl_detail create
 */
export type spl_detailCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the spl_detail
   */
  select?: Prisma.spl_detailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the spl_detail
   */
  omit?: Prisma.spl_detailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.spl_detailInclude<ExtArgs> | null
  /**
   * The data needed to create a spl_detail.
   */
  data: Prisma.XOR<Prisma.spl_detailCreateInput, Prisma.spl_detailUncheckedCreateInput>
}

/**
 * spl_detail createMany
 */
export type spl_detailCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many spl_details.
   */
  data: Prisma.spl_detailCreateManyInput | Prisma.spl_detailCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * spl_detail update
 */
export type spl_detailUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the spl_detail
   */
  select?: Prisma.spl_detailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the spl_detail
   */
  omit?: Prisma.spl_detailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.spl_detailInclude<ExtArgs> | null
  /**
   * The data needed to update a spl_detail.
   */
  data: Prisma.XOR<Prisma.spl_detailUpdateInput, Prisma.spl_detailUncheckedUpdateInput>
  /**
   * Choose, which spl_detail to update.
   */
  where: Prisma.spl_detailWhereUniqueInput
}

/**
 * spl_detail updateMany
 */
export type spl_detailUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update spl_details.
   */
  data: Prisma.XOR<Prisma.spl_detailUpdateManyMutationInput, Prisma.spl_detailUncheckedUpdateManyInput>
  /**
   * Filter which spl_details to update
   */
  where?: Prisma.spl_detailWhereInput
  /**
   * Limit how many spl_details to update.
   */
  limit?: number
}

/**
 * spl_detail upsert
 */
export type spl_detailUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the spl_detail
   */
  select?: Prisma.spl_detailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the spl_detail
   */
  omit?: Prisma.spl_detailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.spl_detailInclude<ExtArgs> | null
  /**
   * The filter to search for the spl_detail to update in case it exists.
   */
  where: Prisma.spl_detailWhereUniqueInput
  /**
   * In case the spl_detail found by the `where` argument doesn't exist, create a new spl_detail with this data.
   */
  create: Prisma.XOR<Prisma.spl_detailCreateInput, Prisma.spl_detailUncheckedCreateInput>
  /**
   * In case the spl_detail was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.spl_detailUpdateInput, Prisma.spl_detailUncheckedUpdateInput>
}

/**
 * spl_detail delete
 */
export type spl_detailDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the spl_detail
   */
  select?: Prisma.spl_detailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the spl_detail
   */
  omit?: Prisma.spl_detailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.spl_detailInclude<ExtArgs> | null
  /**
   * Filter which spl_detail to delete.
   */
  where: Prisma.spl_detailWhereUniqueInput
}

/**
 * spl_detail deleteMany
 */
export type spl_detailDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which spl_details to delete
   */
  where?: Prisma.spl_detailWhereInput
  /**
   * Limit how many spl_details to delete.
   */
  limit?: number
}

/**
 * spl_detail.employee
 */
export type spl_detail$employeeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the employee
   */
  select?: Prisma.employeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the employee
   */
  omit?: Prisma.employeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.employeeInclude<ExtArgs> | null
  where?: Prisma.employeeWhereInput
}

/**
 * spl_detail without action
 */
export type spl_detailDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the spl_detail
   */
  select?: Prisma.spl_detailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the spl_detail
   */
  omit?: Prisma.spl_detailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.spl_detailInclude<ExtArgs> | null
}
