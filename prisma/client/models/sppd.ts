
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `sppd` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model sppd
 * 
 */
export type sppdModel = runtime.Types.Result.DefaultSelection<Prisma.$sppdPayload>

export type AggregateSppd = {
  _count: SppdCountAggregateOutputType | null
  _avg: SppdAvgAggregateOutputType | null
  _sum: SppdSumAggregateOutputType | null
  _min: SppdMinAggregateOutputType | null
  _max: SppdMaxAggregateOutputType | null
}

export type SppdAvgAggregateOutputType = {
  duration: number | null
}

export type SppdSumAggregateOutputType = {
  duration: number | null
}

export type SppdMinAggregateOutputType = {
  sppd_id: string | null
  purpose: string | null
  location: string | null
  dept: string | null
  start_date: Date | null
  end_date: Date | null
  duration: number | null
  createdBy: string | null
  createdAt: Date | null
}

export type SppdMaxAggregateOutputType = {
  sppd_id: string | null
  purpose: string | null
  location: string | null
  dept: string | null
  start_date: Date | null
  end_date: Date | null
  duration: number | null
  createdBy: string | null
  createdAt: Date | null
}

export type SppdCountAggregateOutputType = {
  sppd_id: number
  purpose: number
  location: number
  dept: number
  start_date: number
  end_date: number
  duration: number
  createdBy: number
  createdAt: number
  _all: number
}


export type SppdAvgAggregateInputType = {
  duration?: true
}

export type SppdSumAggregateInputType = {
  duration?: true
}

export type SppdMinAggregateInputType = {
  sppd_id?: true
  purpose?: true
  location?: true
  dept?: true
  start_date?: true
  end_date?: true
  duration?: true
  createdBy?: true
  createdAt?: true
}

export type SppdMaxAggregateInputType = {
  sppd_id?: true
  purpose?: true
  location?: true
  dept?: true
  start_date?: true
  end_date?: true
  duration?: true
  createdBy?: true
  createdAt?: true
}

export type SppdCountAggregateInputType = {
  sppd_id?: true
  purpose?: true
  location?: true
  dept?: true
  start_date?: true
  end_date?: true
  duration?: true
  createdBy?: true
  createdAt?: true
  _all?: true
}

export type SppdAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which sppd to aggregate.
   */
  where?: Prisma.sppdWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of sppds to fetch.
   */
  orderBy?: Prisma.sppdOrderByWithRelationInput | Prisma.sppdOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.sppdWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` sppds from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` sppds.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned sppds
  **/
  _count?: true | SppdCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: SppdAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: SppdSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: SppdMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: SppdMaxAggregateInputType
}

export type GetSppdAggregateType<T extends SppdAggregateArgs> = {
      [P in keyof T & keyof AggregateSppd]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateSppd[P]>
    : Prisma.GetScalarType<T[P], AggregateSppd[P]>
}




export type sppdGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.sppdWhereInput
  orderBy?: Prisma.sppdOrderByWithAggregationInput | Prisma.sppdOrderByWithAggregationInput[]
  by: Prisma.SppdScalarFieldEnum[] | Prisma.SppdScalarFieldEnum
  having?: Prisma.sppdScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: SppdCountAggregateInputType | true
  _avg?: SppdAvgAggregateInputType
  _sum?: SppdSumAggregateInputType
  _min?: SppdMinAggregateInputType
  _max?: SppdMaxAggregateInputType
}

export type SppdGroupByOutputType = {
  sppd_id: string
  purpose: string
  location: string
  dept: string | null
  start_date: Date
  end_date: Date
  duration: number
  createdBy: string | null
  createdAt: Date
  _count: SppdCountAggregateOutputType | null
  _avg: SppdAvgAggregateOutputType | null
  _sum: SppdSumAggregateOutputType | null
  _min: SppdMinAggregateOutputType | null
  _max: SppdMaxAggregateOutputType | null
}

type GetSppdGroupByPayload<T extends sppdGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<SppdGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof SppdGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], SppdGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], SppdGroupByOutputType[P]>
      }
    >
  > 



export type sppdWhereInput = {
  AND?: Prisma.sppdWhereInput | Prisma.sppdWhereInput[]
  OR?: Prisma.sppdWhereInput[]
  NOT?: Prisma.sppdWhereInput | Prisma.sppdWhereInput[]
  sppd_id?: Prisma.StringFilter<"sppd"> | string
  purpose?: Prisma.StringFilter<"sppd"> | string
  location?: Prisma.StringFilter<"sppd"> | string
  dept?: Prisma.StringNullableFilter<"sppd"> | string | null
  start_date?: Prisma.DateTimeFilter<"sppd"> | Date | string
  end_date?: Prisma.DateTimeFilter<"sppd"> | Date | string
  duration?: Prisma.IntFilter<"sppd"> | number
  createdBy?: Prisma.StringNullableFilter<"sppd"> | string | null
  createdAt?: Prisma.DateTimeFilter<"sppd"> | Date | string
  skpd?: Prisma.SkpdListRelationFilter
  employee?: Prisma.XOR<Prisma.EmployeeNullableScalarRelationFilter, Prisma.employeeWhereInput> | null
  dept_sppd_deptTodept?: Prisma.XOR<Prisma.DeptNullableScalarRelationFilter, Prisma.deptWhereInput> | null
  sppd_detail?: Prisma.Sppd_detailListRelationFilter
}

export type sppdOrderByWithRelationInput = {
  sppd_id?: Prisma.SortOrder
  purpose?: Prisma.SortOrder
  location?: Prisma.SortOrder
  dept?: Prisma.SortOrderInput | Prisma.SortOrder
  start_date?: Prisma.SortOrder
  end_date?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  skpd?: Prisma.skpdOrderByRelationAggregateInput
  employee?: Prisma.employeeOrderByWithRelationInput
  dept_sppd_deptTodept?: Prisma.deptOrderByWithRelationInput
  sppd_detail?: Prisma.sppd_detailOrderByRelationAggregateInput
  _relevance?: Prisma.sppdOrderByRelevanceInput
}

export type sppdWhereUniqueInput = Prisma.AtLeast<{
  sppd_id?: string
  AND?: Prisma.sppdWhereInput | Prisma.sppdWhereInput[]
  OR?: Prisma.sppdWhereInput[]
  NOT?: Prisma.sppdWhereInput | Prisma.sppdWhereInput[]
  purpose?: Prisma.StringFilter<"sppd"> | string
  location?: Prisma.StringFilter<"sppd"> | string
  dept?: Prisma.StringNullableFilter<"sppd"> | string | null
  start_date?: Prisma.DateTimeFilter<"sppd"> | Date | string
  end_date?: Prisma.DateTimeFilter<"sppd"> | Date | string
  duration?: Prisma.IntFilter<"sppd"> | number
  createdBy?: Prisma.StringNullableFilter<"sppd"> | string | null
  createdAt?: Prisma.DateTimeFilter<"sppd"> | Date | string
  skpd?: Prisma.SkpdListRelationFilter
  employee?: Prisma.XOR<Prisma.EmployeeNullableScalarRelationFilter, Prisma.employeeWhereInput> | null
  dept_sppd_deptTodept?: Prisma.XOR<Prisma.DeptNullableScalarRelationFilter, Prisma.deptWhereInput> | null
  sppd_detail?: Prisma.Sppd_detailListRelationFilter
}, "sppd_id">

export type sppdOrderByWithAggregationInput = {
  sppd_id?: Prisma.SortOrder
  purpose?: Prisma.SortOrder
  location?: Prisma.SortOrder
  dept?: Prisma.SortOrderInput | Prisma.SortOrder
  start_date?: Prisma.SortOrder
  end_date?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.sppdCountOrderByAggregateInput
  _avg?: Prisma.sppdAvgOrderByAggregateInput
  _max?: Prisma.sppdMaxOrderByAggregateInput
  _min?: Prisma.sppdMinOrderByAggregateInput
  _sum?: Prisma.sppdSumOrderByAggregateInput
}

export type sppdScalarWhereWithAggregatesInput = {
  AND?: Prisma.sppdScalarWhereWithAggregatesInput | Prisma.sppdScalarWhereWithAggregatesInput[]
  OR?: Prisma.sppdScalarWhereWithAggregatesInput[]
  NOT?: Prisma.sppdScalarWhereWithAggregatesInput | Prisma.sppdScalarWhereWithAggregatesInput[]
  sppd_id?: Prisma.StringWithAggregatesFilter<"sppd"> | string
  purpose?: Prisma.StringWithAggregatesFilter<"sppd"> | string
  location?: Prisma.StringWithAggregatesFilter<"sppd"> | string
  dept?: Prisma.StringNullableWithAggregatesFilter<"sppd"> | string | null
  start_date?: Prisma.DateTimeWithAggregatesFilter<"sppd"> | Date | string
  end_date?: Prisma.DateTimeWithAggregatesFilter<"sppd"> | Date | string
  duration?: Prisma.IntWithAggregatesFilter<"sppd"> | number
  createdBy?: Prisma.StringNullableWithAggregatesFilter<"sppd"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"sppd"> | Date | string
}

export type sppdCreateInput = {
  sppd_id: string
  purpose: string
  location: string
  start_date: Date | string
  end_date: Date | string
  duration: number
  createdAt: Date | string
  skpd?: Prisma.skpdCreateNestedManyWithoutSppdInput
  employee?: Prisma.employeeCreateNestedOneWithoutSppdInput
  dept_sppd_deptTodept?: Prisma.deptCreateNestedOneWithoutSppd_sppd_deptTodeptInput
  sppd_detail?: Prisma.sppd_detailCreateNestedManyWithoutSppdInput
}

export type sppdUncheckedCreateInput = {
  sppd_id: string
  purpose: string
  location: string
  dept?: string | null
  start_date: Date | string
  end_date: Date | string
  duration: number
  createdBy?: string | null
  createdAt: Date | string
  skpd?: Prisma.skpdUncheckedCreateNestedManyWithoutSppdInput
  sppd_detail?: Prisma.sppd_detailUncheckedCreateNestedManyWithoutSppdInput
}

export type sppdUpdateInput = {
  sppd_id?: Prisma.StringFieldUpdateOperationsInput | string
  purpose?: Prisma.StringFieldUpdateOperationsInput | string
  location?: Prisma.StringFieldUpdateOperationsInput | string
  start_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  skpd?: Prisma.skpdUpdateManyWithoutSppdNestedInput
  employee?: Prisma.employeeUpdateOneWithoutSppdNestedInput
  dept_sppd_deptTodept?: Prisma.deptUpdateOneWithoutSppd_sppd_deptTodeptNestedInput
  sppd_detail?: Prisma.sppd_detailUpdateManyWithoutSppdNestedInput
}

export type sppdUncheckedUpdateInput = {
  sppd_id?: Prisma.StringFieldUpdateOperationsInput | string
  purpose?: Prisma.StringFieldUpdateOperationsInput | string
  location?: Prisma.StringFieldUpdateOperationsInput | string
  dept?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  start_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  skpd?: Prisma.skpdUncheckedUpdateManyWithoutSppdNestedInput
  sppd_detail?: Prisma.sppd_detailUncheckedUpdateManyWithoutSppdNestedInput
}

export type sppdCreateManyInput = {
  sppd_id: string
  purpose: string
  location: string
  dept?: string | null
  start_date: Date | string
  end_date: Date | string
  duration: number
  createdBy?: string | null
  createdAt: Date | string
}

export type sppdUpdateManyMutationInput = {
  sppd_id?: Prisma.StringFieldUpdateOperationsInput | string
  purpose?: Prisma.StringFieldUpdateOperationsInput | string
  location?: Prisma.StringFieldUpdateOperationsInput | string
  start_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type sppdUncheckedUpdateManyInput = {
  sppd_id?: Prisma.StringFieldUpdateOperationsInput | string
  purpose?: Prisma.StringFieldUpdateOperationsInput | string
  location?: Prisma.StringFieldUpdateOperationsInput | string
  dept?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  start_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type SppdListRelationFilter = {
  every?: Prisma.sppdWhereInput
  some?: Prisma.sppdWhereInput
  none?: Prisma.sppdWhereInput
}

export type sppdOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type sppdOrderByRelevanceInput = {
  fields: Prisma.sppdOrderByRelevanceFieldEnum | Prisma.sppdOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type sppdCountOrderByAggregateInput = {
  sppd_id?: Prisma.SortOrder
  purpose?: Prisma.SortOrder
  location?: Prisma.SortOrder
  dept?: Prisma.SortOrder
  start_date?: Prisma.SortOrder
  end_date?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type sppdAvgOrderByAggregateInput = {
  duration?: Prisma.SortOrder
}

export type sppdMaxOrderByAggregateInput = {
  sppd_id?: Prisma.SortOrder
  purpose?: Prisma.SortOrder
  location?: Prisma.SortOrder
  dept?: Prisma.SortOrder
  start_date?: Prisma.SortOrder
  end_date?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type sppdMinOrderByAggregateInput = {
  sppd_id?: Prisma.SortOrder
  purpose?: Prisma.SortOrder
  location?: Prisma.SortOrder
  dept?: Prisma.SortOrder
  start_date?: Prisma.SortOrder
  end_date?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type sppdSumOrderByAggregateInput = {
  duration?: Prisma.SortOrder
}

export type SppdNullableScalarRelationFilter = {
  is?: Prisma.sppdWhereInput | null
  isNot?: Prisma.sppdWhereInput | null
}

export type sppdCreateNestedManyWithoutEmployeeInput = {
  create?: Prisma.XOR<Prisma.sppdCreateWithoutEmployeeInput, Prisma.sppdUncheckedCreateWithoutEmployeeInput> | Prisma.sppdCreateWithoutEmployeeInput[] | Prisma.sppdUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.sppdCreateOrConnectWithoutEmployeeInput | Prisma.sppdCreateOrConnectWithoutEmployeeInput[]
  createMany?: Prisma.sppdCreateManyEmployeeInputEnvelope
  connect?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
}

export type sppdUncheckedCreateNestedManyWithoutEmployeeInput = {
  create?: Prisma.XOR<Prisma.sppdCreateWithoutEmployeeInput, Prisma.sppdUncheckedCreateWithoutEmployeeInput> | Prisma.sppdCreateWithoutEmployeeInput[] | Prisma.sppdUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.sppdCreateOrConnectWithoutEmployeeInput | Prisma.sppdCreateOrConnectWithoutEmployeeInput[]
  createMany?: Prisma.sppdCreateManyEmployeeInputEnvelope
  connect?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
}

export type sppdUpdateManyWithoutEmployeeNestedInput = {
  create?: Prisma.XOR<Prisma.sppdCreateWithoutEmployeeInput, Prisma.sppdUncheckedCreateWithoutEmployeeInput> | Prisma.sppdCreateWithoutEmployeeInput[] | Prisma.sppdUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.sppdCreateOrConnectWithoutEmployeeInput | Prisma.sppdCreateOrConnectWithoutEmployeeInput[]
  upsert?: Prisma.sppdUpsertWithWhereUniqueWithoutEmployeeInput | Prisma.sppdUpsertWithWhereUniqueWithoutEmployeeInput[]
  createMany?: Prisma.sppdCreateManyEmployeeInputEnvelope
  set?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  disconnect?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  delete?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  connect?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  update?: Prisma.sppdUpdateWithWhereUniqueWithoutEmployeeInput | Prisma.sppdUpdateWithWhereUniqueWithoutEmployeeInput[]
  updateMany?: Prisma.sppdUpdateManyWithWhereWithoutEmployeeInput | Prisma.sppdUpdateManyWithWhereWithoutEmployeeInput[]
  deleteMany?: Prisma.sppdScalarWhereInput | Prisma.sppdScalarWhereInput[]
}

export type sppdUncheckedUpdateManyWithoutEmployeeNestedInput = {
  create?: Prisma.XOR<Prisma.sppdCreateWithoutEmployeeInput, Prisma.sppdUncheckedCreateWithoutEmployeeInput> | Prisma.sppdCreateWithoutEmployeeInput[] | Prisma.sppdUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.sppdCreateOrConnectWithoutEmployeeInput | Prisma.sppdCreateOrConnectWithoutEmployeeInput[]
  upsert?: Prisma.sppdUpsertWithWhereUniqueWithoutEmployeeInput | Prisma.sppdUpsertWithWhereUniqueWithoutEmployeeInput[]
  createMany?: Prisma.sppdCreateManyEmployeeInputEnvelope
  set?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  disconnect?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  delete?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  connect?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  update?: Prisma.sppdUpdateWithWhereUniqueWithoutEmployeeInput | Prisma.sppdUpdateWithWhereUniqueWithoutEmployeeInput[]
  updateMany?: Prisma.sppdUpdateManyWithWhereWithoutEmployeeInput | Prisma.sppdUpdateManyWithWhereWithoutEmployeeInput[]
  deleteMany?: Prisma.sppdScalarWhereInput | Prisma.sppdScalarWhereInput[]
}

export type sppdCreateNestedManyWithoutDept_sppd_deptTodeptInput = {
  create?: Prisma.XOR<Prisma.sppdCreateWithoutDept_sppd_deptTodeptInput, Prisma.sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput> | Prisma.sppdCreateWithoutDept_sppd_deptTodeptInput[] | Prisma.sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput[]
  connectOrCreate?: Prisma.sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput | Prisma.sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput[]
  createMany?: Prisma.sppdCreateManyDept_sppd_deptTodeptInputEnvelope
  connect?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
}

export type sppdUncheckedCreateNestedManyWithoutDept_sppd_deptTodeptInput = {
  create?: Prisma.XOR<Prisma.sppdCreateWithoutDept_sppd_deptTodeptInput, Prisma.sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput> | Prisma.sppdCreateWithoutDept_sppd_deptTodeptInput[] | Prisma.sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput[]
  connectOrCreate?: Prisma.sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput | Prisma.sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput[]
  createMany?: Prisma.sppdCreateManyDept_sppd_deptTodeptInputEnvelope
  connect?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
}

export type sppdUpdateManyWithoutDept_sppd_deptTodeptNestedInput = {
  create?: Prisma.XOR<Prisma.sppdCreateWithoutDept_sppd_deptTodeptInput, Prisma.sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput> | Prisma.sppdCreateWithoutDept_sppd_deptTodeptInput[] | Prisma.sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput[]
  connectOrCreate?: Prisma.sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput | Prisma.sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput[]
  upsert?: Prisma.sppdUpsertWithWhereUniqueWithoutDept_sppd_deptTodeptInput | Prisma.sppdUpsertWithWhereUniqueWithoutDept_sppd_deptTodeptInput[]
  createMany?: Prisma.sppdCreateManyDept_sppd_deptTodeptInputEnvelope
  set?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  disconnect?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  delete?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  connect?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  update?: Prisma.sppdUpdateWithWhereUniqueWithoutDept_sppd_deptTodeptInput | Prisma.sppdUpdateWithWhereUniqueWithoutDept_sppd_deptTodeptInput[]
  updateMany?: Prisma.sppdUpdateManyWithWhereWithoutDept_sppd_deptTodeptInput | Prisma.sppdUpdateManyWithWhereWithoutDept_sppd_deptTodeptInput[]
  deleteMany?: Prisma.sppdScalarWhereInput | Prisma.sppdScalarWhereInput[]
}

export type sppdUncheckedUpdateManyWithoutDept_sppd_deptTodeptNestedInput = {
  create?: Prisma.XOR<Prisma.sppdCreateWithoutDept_sppd_deptTodeptInput, Prisma.sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput> | Prisma.sppdCreateWithoutDept_sppd_deptTodeptInput[] | Prisma.sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput[]
  connectOrCreate?: Prisma.sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput | Prisma.sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput[]
  upsert?: Prisma.sppdUpsertWithWhereUniqueWithoutDept_sppd_deptTodeptInput | Prisma.sppdUpsertWithWhereUniqueWithoutDept_sppd_deptTodeptInput[]
  createMany?: Prisma.sppdCreateManyDept_sppd_deptTodeptInputEnvelope
  set?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  disconnect?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  delete?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  connect?: Prisma.sppdWhereUniqueInput | Prisma.sppdWhereUniqueInput[]
  update?: Prisma.sppdUpdateWithWhereUniqueWithoutDept_sppd_deptTodeptInput | Prisma.sppdUpdateWithWhereUniqueWithoutDept_sppd_deptTodeptInput[]
  updateMany?: Prisma.sppdUpdateManyWithWhereWithoutDept_sppd_deptTodeptInput | Prisma.sppdUpdateManyWithWhereWithoutDept_sppd_deptTodeptInput[]
  deleteMany?: Prisma.sppdScalarWhereInput | Prisma.sppdScalarWhereInput[]
}

export type sppdCreateNestedOneWithoutSppd_detailInput = {
  create?: Prisma.XOR<Prisma.sppdCreateWithoutSppd_detailInput, Prisma.sppdUncheckedCreateWithoutSppd_detailInput>
  connectOrCreate?: Prisma.sppdCreateOrConnectWithoutSppd_detailInput
  connect?: Prisma.sppdWhereUniqueInput
}

export type sppdUpdateOneWithoutSppd_detailNestedInput = {
  create?: Prisma.XOR<Prisma.sppdCreateWithoutSppd_detailInput, Prisma.sppdUncheckedCreateWithoutSppd_detailInput>
  connectOrCreate?: Prisma.sppdCreateOrConnectWithoutSppd_detailInput
  upsert?: Prisma.sppdUpsertWithoutSppd_detailInput
  disconnect?: Prisma.sppdWhereInput | boolean
  delete?: Prisma.sppdWhereInput | boolean
  connect?: Prisma.sppdWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.sppdUpdateToOneWithWhereWithoutSppd_detailInput, Prisma.sppdUpdateWithoutSppd_detailInput>, Prisma.sppdUncheckedUpdateWithoutSppd_detailInput>
}

export type sppdCreateNestedOneWithoutSkpdInput = {
  create?: Prisma.XOR<Prisma.sppdCreateWithoutSkpdInput, Prisma.sppdUncheckedCreateWithoutSkpdInput>
  connectOrCreate?: Prisma.sppdCreateOrConnectWithoutSkpdInput
  connect?: Prisma.sppdWhereUniqueInput
}

export type sppdUpdateOneWithoutSkpdNestedInput = {
  create?: Prisma.XOR<Prisma.sppdCreateWithoutSkpdInput, Prisma.sppdUncheckedCreateWithoutSkpdInput>
  connectOrCreate?: Prisma.sppdCreateOrConnectWithoutSkpdInput
  upsert?: Prisma.sppdUpsertWithoutSkpdInput
  disconnect?: Prisma.sppdWhereInput | boolean
  delete?: Prisma.sppdWhereInput | boolean
  connect?: Prisma.sppdWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.sppdUpdateToOneWithWhereWithoutSkpdInput, Prisma.sppdUpdateWithoutSkpdInput>, Prisma.sppdUncheckedUpdateWithoutSkpdInput>
}

export type sppdCreateWithoutEmployeeInput = {
  sppd_id: string
  purpose: string
  location: string
  start_date: Date | string
  end_date: Date | string
  duration: number
  createdAt: Date | string
  skpd?: Prisma.skpdCreateNestedManyWithoutSppdInput
  dept_sppd_deptTodept?: Prisma.deptCreateNestedOneWithoutSppd_sppd_deptTodeptInput
  sppd_detail?: Prisma.sppd_detailCreateNestedManyWithoutSppdInput
}

export type sppdUncheckedCreateWithoutEmployeeInput = {
  sppd_id: string
  purpose: string
  location: string
  dept?: string | null
  start_date: Date | string
  end_date: Date | string
  duration: number
  createdAt: Date | string
  skpd?: Prisma.skpdUncheckedCreateNestedManyWithoutSppdInput
  sppd_detail?: Prisma.sppd_detailUncheckedCreateNestedManyWithoutSppdInput
}

export type sppdCreateOrConnectWithoutEmployeeInput = {
  where: Prisma.sppdWhereUniqueInput
  create: Prisma.XOR<Prisma.sppdCreateWithoutEmployeeInput, Prisma.sppdUncheckedCreateWithoutEmployeeInput>
}

export type sppdCreateManyEmployeeInputEnvelope = {
  data: Prisma.sppdCreateManyEmployeeInput | Prisma.sppdCreateManyEmployeeInput[]
  skipDuplicates?: boolean
}

export type sppdUpsertWithWhereUniqueWithoutEmployeeInput = {
  where: Prisma.sppdWhereUniqueInput
  update: Prisma.XOR<Prisma.sppdUpdateWithoutEmployeeInput, Prisma.sppdUncheckedUpdateWithoutEmployeeInput>
  create: Prisma.XOR<Prisma.sppdCreateWithoutEmployeeInput, Prisma.sppdUncheckedCreateWithoutEmployeeInput>
}

export type sppdUpdateWithWhereUniqueWithoutEmployeeInput = {
  where: Prisma.sppdWhereUniqueInput
  data: Prisma.XOR<Prisma.sppdUpdateWithoutEmployeeInput, Prisma.sppdUncheckedUpdateWithoutEmployeeInput>
}

export type sppdUpdateManyWithWhereWithoutEmployeeInput = {
  where: Prisma.sppdScalarWhereInput
  data: Prisma.XOR<Prisma.sppdUpdateManyMutationInput, Prisma.sppdUncheckedUpdateManyWithoutEmployeeInput>
}

export type sppdScalarWhereInput = {
  AND?: Prisma.sppdScalarWhereInput | Prisma.sppdScalarWhereInput[]
  OR?: Prisma.sppdScalarWhereInput[]
  NOT?: Prisma.sppdScalarWhereInput | Prisma.sppdScalarWhereInput[]
  sppd_id?: Prisma.StringFilter<"sppd"> | string
  purpose?: Prisma.StringFilter<"sppd"> | string
  location?: Prisma.StringFilter<"sppd"> | string
  dept?: Prisma.StringNullableFilter<"sppd"> | string | null
  start_date?: Prisma.DateTimeFilter<"sppd"> | Date | string
  end_date?: Prisma.DateTimeFilter<"sppd"> | Date | string
  duration?: Prisma.IntFilter<"sppd"> | number
  createdBy?: Prisma.StringNullableFilter<"sppd"> | string | null
  createdAt?: Prisma.DateTimeFilter<"sppd"> | Date | string
}

export type sppdCreateWithoutDept_sppd_deptTodeptInput = {
  sppd_id: string
  purpose: string
  location: string
  start_date: Date | string
  end_date: Date | string
  duration: number
  createdAt: Date | string
  skpd?: Prisma.skpdCreateNestedManyWithoutSppdInput
  employee?: Prisma.employeeCreateNestedOneWithoutSppdInput
  sppd_detail?: Prisma.sppd_detailCreateNestedManyWithoutSppdInput
}

export type sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput = {
  sppd_id: string
  purpose: string
  location: string
  start_date: Date | string
  end_date: Date | string
  duration: number
  createdBy?: string | null
  createdAt: Date | string
  skpd?: Prisma.skpdUncheckedCreateNestedManyWithoutSppdInput
  sppd_detail?: Prisma.sppd_detailUncheckedCreateNestedManyWithoutSppdInput
}

export type sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput = {
  where: Prisma.sppdWhereUniqueInput
  create: Prisma.XOR<Prisma.sppdCreateWithoutDept_sppd_deptTodeptInput, Prisma.sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput>
}

export type sppdCreateManyDept_sppd_deptTodeptInputEnvelope = {
  data: Prisma.sppdCreateManyDept_sppd_deptTodeptInput | Prisma.sppdCreateManyDept_sppd_deptTodeptInput[]
  skipDuplicates?: boolean
}

export type sppdUpsertWithWhereUniqueWithoutDept_sppd_deptTodeptInput = {
  where: Prisma.sppdWhereUniqueInput
  update: Prisma.XOR<Prisma.sppdUpdateWithoutDept_sppd_deptTodeptInput, Prisma.sppdUncheckedUpdateWithoutDept_sppd_deptTodeptInput>
  create: Prisma.XOR<Prisma.sppdCreateWithoutDept_sppd_deptTodeptInput, Prisma.sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput>
}

export type sppdUpdateWithWhereUniqueWithoutDept_sppd_deptTodeptInput = {
  where: Prisma.sppdWhereUniqueInput
  data: Prisma.XOR<Prisma.sppdUpdateWithoutDept_sppd_deptTodeptInput, Prisma.sppdUncheckedUpdateWithoutDept_sppd_deptTodeptInput>
}

export type sppdUpdateManyWithWhereWithoutDept_sppd_deptTodeptInput = {
  where: Prisma.sppdScalarWhereInput
  data: Prisma.XOR<Prisma.sppdUpdateManyMutationInput, Prisma.sppdUncheckedUpdateManyWithoutDept_sppd_deptTodeptInput>
}

export type sppdCreateWithoutSppd_detailInput = {
  sppd_id: string
  purpose: string
  location: string
  start_date: Date | string
  end_date: Date | string
  duration: number
  createdAt: Date | string
  skpd?: Prisma.skpdCreateNestedManyWithoutSppdInput
  employee?: Prisma.employeeCreateNestedOneWithoutSppdInput
  dept_sppd_deptTodept?: Prisma.deptCreateNestedOneWithoutSppd_sppd_deptTodeptInput
}

export type sppdUncheckedCreateWithoutSppd_detailInput = {
  sppd_id: string
  purpose: string
  location: string
  dept?: string | null
  start_date: Date | string
  end_date: Date | string
  duration: number
  createdBy?: string | null
  createdAt: Date | string
  skpd?: Prisma.skpdUncheckedCreateNestedManyWithoutSppdInput
}

export type sppdCreateOrConnectWithoutSppd_detailInput = {
  where: Prisma.sppdWhereUniqueInput
  create: Prisma.XOR<Prisma.sppdCreateWithoutSppd_detailInput, Prisma.sppdUncheckedCreateWithoutSppd_detailInput>
}

export type sppdUpsertWithoutSppd_detailInput = {
  update: Prisma.XOR<Prisma.sppdUpdateWithoutSppd_detailInput, Prisma.sppdUncheckedUpdateWithoutSppd_detailInput>
  create: Prisma.XOR<Prisma.sppdCreateWithoutSppd_detailInput, Prisma.sppdUncheckedCreateWithoutSppd_detailInput>
  where?: Prisma.sppdWhereInput
}

export type sppdUpdateToOneWithWhereWithoutSppd_detailInput = {
  where?: Prisma.sppdWhereInput
  data: Prisma.XOR<Prisma.sppdUpdateWithoutSppd_detailInput, Prisma.sppdUncheckedUpdateWithoutSppd_detailInput>
}

export type sppdUpdateWithoutSppd_detailInput = {
  sppd_id?: Prisma.StringFieldUpdateOperationsInput | string
  purpose?: Prisma.StringFieldUpdateOperationsInput | string
  location?: Prisma.StringFieldUpdateOperationsInput | string
  start_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  skpd?: Prisma.skpdUpdateManyWithoutSppdNestedInput
  employee?: Prisma.employeeUpdateOneWithoutSppdNestedInput
  dept_sppd_deptTodept?: Prisma.deptUpdateOneWithoutSppd_sppd_deptTodeptNestedInput
}

export type sppdUncheckedUpdateWithoutSppd_detailInput = {
  sppd_id?: Prisma.StringFieldUpdateOperationsInput | string
  purpose?: Prisma.StringFieldUpdateOperationsInput | string
  location?: Prisma.StringFieldUpdateOperationsInput | string
  dept?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  start_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  skpd?: Prisma.skpdUncheckedUpdateManyWithoutSppdNestedInput
}

export type sppdCreateWithoutSkpdInput = {
  sppd_id: string
  purpose: string
  location: string
  start_date: Date | string
  end_date: Date | string
  duration: number
  createdAt: Date | string
  employee?: Prisma.employeeCreateNestedOneWithoutSppdInput
  dept_sppd_deptTodept?: Prisma.deptCreateNestedOneWithoutSppd_sppd_deptTodeptInput
  sppd_detail?: Prisma.sppd_detailCreateNestedManyWithoutSppdInput
}

export type sppdUncheckedCreateWithoutSkpdInput = {
  sppd_id: string
  purpose: string
  location: string
  dept?: string | null
  start_date: Date | string
  end_date: Date | string
  duration: number
  createdBy?: string | null
  createdAt: Date | string
  sppd_detail?: Prisma.sppd_detailUncheckedCreateNestedManyWithoutSppdInput
}

export type sppdCreateOrConnectWithoutSkpdInput = {
  where: Prisma.sppdWhereUniqueInput
  create: Prisma.XOR<Prisma.sppdCreateWithoutSkpdInput, Prisma.sppdUncheckedCreateWithoutSkpdInput>
}

export type sppdUpsertWithoutSkpdInput = {
  update: Prisma.XOR<Prisma.sppdUpdateWithoutSkpdInput, Prisma.sppdUncheckedUpdateWithoutSkpdInput>
  create: Prisma.XOR<Prisma.sppdCreateWithoutSkpdInput, Prisma.sppdUncheckedCreateWithoutSkpdInput>
  where?: Prisma.sppdWhereInput
}

export type sppdUpdateToOneWithWhereWithoutSkpdInput = {
  where?: Prisma.sppdWhereInput
  data: Prisma.XOR<Prisma.sppdUpdateWithoutSkpdInput, Prisma.sppdUncheckedUpdateWithoutSkpdInput>
}

export type sppdUpdateWithoutSkpdInput = {
  sppd_id?: Prisma.StringFieldUpdateOperationsInput | string
  purpose?: Prisma.StringFieldUpdateOperationsInput | string
  location?: Prisma.StringFieldUpdateOperationsInput | string
  start_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  employee?: Prisma.employeeUpdateOneWithoutSppdNestedInput
  dept_sppd_deptTodept?: Prisma.deptUpdateOneWithoutSppd_sppd_deptTodeptNestedInput
  sppd_detail?: Prisma.sppd_detailUpdateManyWithoutSppdNestedInput
}

export type sppdUncheckedUpdateWithoutSkpdInput = {
  sppd_id?: Prisma.StringFieldUpdateOperationsInput | string
  purpose?: Prisma.StringFieldUpdateOperationsInput | string
  location?: Prisma.StringFieldUpdateOperationsInput | string
  dept?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  start_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sppd_detail?: Prisma.sppd_detailUncheckedUpdateManyWithoutSppdNestedInput
}

export type sppdCreateManyEmployeeInput = {
  sppd_id: string
  purpose: string
  location: string
  dept?: string | null
  start_date: Date | string
  end_date: Date | string
  duration: number
  createdAt: Date | string
}

export type sppdUpdateWithoutEmployeeInput = {
  sppd_id?: Prisma.StringFieldUpdateOperationsInput | string
  purpose?: Prisma.StringFieldUpdateOperationsInput | string
  location?: Prisma.StringFieldUpdateOperationsInput | string
  start_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  skpd?: Prisma.skpdUpdateManyWithoutSppdNestedInput
  dept_sppd_deptTodept?: Prisma.deptUpdateOneWithoutSppd_sppd_deptTodeptNestedInput
  sppd_detail?: Prisma.sppd_detailUpdateManyWithoutSppdNestedInput
}

export type sppdUncheckedUpdateWithoutEmployeeInput = {
  sppd_id?: Prisma.StringFieldUpdateOperationsInput | string
  purpose?: Prisma.StringFieldUpdateOperationsInput | string
  location?: Prisma.StringFieldUpdateOperationsInput | string
  dept?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  start_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  skpd?: Prisma.skpdUncheckedUpdateManyWithoutSppdNestedInput
  sppd_detail?: Prisma.sppd_detailUncheckedUpdateManyWithoutSppdNestedInput
}

export type sppdUncheckedUpdateManyWithoutEmployeeInput = {
  sppd_id?: Prisma.StringFieldUpdateOperationsInput | string
  purpose?: Prisma.StringFieldUpdateOperationsInput | string
  location?: Prisma.StringFieldUpdateOperationsInput | string
  dept?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  start_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type sppdCreateManyDept_sppd_deptTodeptInput = {
  sppd_id: string
  purpose: string
  location: string
  start_date: Date | string
  end_date: Date | string
  duration: number
  createdBy?: string | null
  createdAt: Date | string
}

export type sppdUpdateWithoutDept_sppd_deptTodeptInput = {
  sppd_id?: Prisma.StringFieldUpdateOperationsInput | string
  purpose?: Prisma.StringFieldUpdateOperationsInput | string
  location?: Prisma.StringFieldUpdateOperationsInput | string
  start_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  skpd?: Prisma.skpdUpdateManyWithoutSppdNestedInput
  employee?: Prisma.employeeUpdateOneWithoutSppdNestedInput
  sppd_detail?: Prisma.sppd_detailUpdateManyWithoutSppdNestedInput
}

export type sppdUncheckedUpdateWithoutDept_sppd_deptTodeptInput = {
  sppd_id?: Prisma.StringFieldUpdateOperationsInput | string
  purpose?: Prisma.StringFieldUpdateOperationsInput | string
  location?: Prisma.StringFieldUpdateOperationsInput | string
  start_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  skpd?: Prisma.skpdUncheckedUpdateManyWithoutSppdNestedInput
  sppd_detail?: Prisma.sppd_detailUncheckedUpdateManyWithoutSppdNestedInput
}

export type sppdUncheckedUpdateManyWithoutDept_sppd_deptTodeptInput = {
  sppd_id?: Prisma.StringFieldUpdateOperationsInput | string
  purpose?: Prisma.StringFieldUpdateOperationsInput | string
  location?: Prisma.StringFieldUpdateOperationsInput | string
  start_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type SppdCountOutputType
 */

export type SppdCountOutputType = {
  skpd: number
  sppd_detail: number
}

export type SppdCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  skpd?: boolean | SppdCountOutputTypeCountSkpdArgs
  sppd_detail?: boolean | SppdCountOutputTypeCountSppd_detailArgs
}

/**
 * SppdCountOutputType without action
 */
export type SppdCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SppdCountOutputType
   */
  select?: Prisma.SppdCountOutputTypeSelect<ExtArgs> | null
}

/**
 * SppdCountOutputType without action
 */
export type SppdCountOutputTypeCountSkpdArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.skpdWhereInput
}

/**
 * SppdCountOutputType without action
 */
export type SppdCountOutputTypeCountSppd_detailArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.sppd_detailWhereInput
}


export type sppdSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  sppd_id?: boolean
  purpose?: boolean
  location?: boolean
  dept?: boolean
  start_date?: boolean
  end_date?: boolean
  duration?: boolean
  createdBy?: boolean
  createdAt?: boolean
  skpd?: boolean | Prisma.sppd$skpdArgs<ExtArgs>
  employee?: boolean | Prisma.sppd$employeeArgs<ExtArgs>
  dept_sppd_deptTodept?: boolean | Prisma.sppd$dept_sppd_deptTodeptArgs<ExtArgs>
  sppd_detail?: boolean | Prisma.sppd$sppd_detailArgs<ExtArgs>
  _count?: boolean | Prisma.SppdCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["sppd"]>



export type sppdSelectScalar = {
  sppd_id?: boolean
  purpose?: boolean
  location?: boolean
  dept?: boolean
  start_date?: boolean
  end_date?: boolean
  duration?: boolean
  createdBy?: boolean
  createdAt?: boolean
}

export type sppdOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"sppd_id" | "purpose" | "location" | "dept" | "start_date" | "end_date" | "duration" | "createdBy" | "createdAt", ExtArgs["result"]["sppd"]>
export type sppdInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  skpd?: boolean | Prisma.sppd$skpdArgs<ExtArgs>
  employee?: boolean | Prisma.sppd$employeeArgs<ExtArgs>
  dept_sppd_deptTodept?: boolean | Prisma.sppd$dept_sppd_deptTodeptArgs<ExtArgs>
  sppd_detail?: boolean | Prisma.sppd$sppd_detailArgs<ExtArgs>
  _count?: boolean | Prisma.SppdCountOutputTypeDefaultArgs<ExtArgs>
}

export type $sppdPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "sppd"
  objects: {
    skpd: Prisma.$skpdPayload<ExtArgs>[]
    employee: Prisma.$employeePayload<ExtArgs> | null
    dept_sppd_deptTodept: Prisma.$deptPayload<ExtArgs> | null
    sppd_detail: Prisma.$sppd_detailPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    sppd_id: string
    purpose: string
    location: string
    dept: string | null
    start_date: Date
    end_date: Date
    duration: number
    createdBy: string | null
    createdAt: Date
  }, ExtArgs["result"]["sppd"]>
  composites: {}
}

export type sppdGetPayload<S extends boolean | null | undefined | sppdDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$sppdPayload, S>

export type sppdCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<sppdFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: SppdCountAggregateInputType | true
  }

export interface sppdDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sppd'], meta: { name: 'sppd' } }
  /**
   * Find zero or one Sppd that matches the filter.
   * @param {sppdFindUniqueArgs} args - Arguments to find a Sppd
   * @example
   * // Get one Sppd
   * const sppd = await prisma.sppd.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends sppdFindUniqueArgs>(args: Prisma.SelectSubset<T, sppdFindUniqueArgs<ExtArgs>>): Prisma.Prisma__sppdClient<runtime.Types.Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Sppd that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {sppdFindUniqueOrThrowArgs} args - Arguments to find a Sppd
   * @example
   * // Get one Sppd
   * const sppd = await prisma.sppd.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends sppdFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, sppdFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__sppdClient<runtime.Types.Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Sppd that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {sppdFindFirstArgs} args - Arguments to find a Sppd
   * @example
   * // Get one Sppd
   * const sppd = await prisma.sppd.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends sppdFindFirstArgs>(args?: Prisma.SelectSubset<T, sppdFindFirstArgs<ExtArgs>>): Prisma.Prisma__sppdClient<runtime.Types.Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Sppd that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {sppdFindFirstOrThrowArgs} args - Arguments to find a Sppd
   * @example
   * // Get one Sppd
   * const sppd = await prisma.sppd.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends sppdFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, sppdFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__sppdClient<runtime.Types.Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Sppds that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {sppdFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Sppds
   * const sppds = await prisma.sppd.findMany()
   * 
   * // Get first 10 Sppds
   * const sppds = await prisma.sppd.findMany({ take: 10 })
   * 
   * // Only select the `sppd_id`
   * const sppdWithSppd_idOnly = await prisma.sppd.findMany({ select: { sppd_id: true } })
   * 
   */
  findMany<T extends sppdFindManyArgs>(args?: Prisma.SelectSubset<T, sppdFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Sppd.
   * @param {sppdCreateArgs} args - Arguments to create a Sppd.
   * @example
   * // Create one Sppd
   * const Sppd = await prisma.sppd.create({
   *   data: {
   *     // ... data to create a Sppd
   *   }
   * })
   * 
   */
  create<T extends sppdCreateArgs>(args: Prisma.SelectSubset<T, sppdCreateArgs<ExtArgs>>): Prisma.Prisma__sppdClient<runtime.Types.Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Sppds.
   * @param {sppdCreateManyArgs} args - Arguments to create many Sppds.
   * @example
   * // Create many Sppds
   * const sppd = await prisma.sppd.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends sppdCreateManyArgs>(args?: Prisma.SelectSubset<T, sppdCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Sppd.
   * @param {sppdDeleteArgs} args - Arguments to delete one Sppd.
   * @example
   * // Delete one Sppd
   * const Sppd = await prisma.sppd.delete({
   *   where: {
   *     // ... filter to delete one Sppd
   *   }
   * })
   * 
   */
  delete<T extends sppdDeleteArgs>(args: Prisma.SelectSubset<T, sppdDeleteArgs<ExtArgs>>): Prisma.Prisma__sppdClient<runtime.Types.Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Sppd.
   * @param {sppdUpdateArgs} args - Arguments to update one Sppd.
   * @example
   * // Update one Sppd
   * const sppd = await prisma.sppd.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends sppdUpdateArgs>(args: Prisma.SelectSubset<T, sppdUpdateArgs<ExtArgs>>): Prisma.Prisma__sppdClient<runtime.Types.Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Sppds.
   * @param {sppdDeleteManyArgs} args - Arguments to filter Sppds to delete.
   * @example
   * // Delete a few Sppds
   * const { count } = await prisma.sppd.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends sppdDeleteManyArgs>(args?: Prisma.SelectSubset<T, sppdDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Sppds.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {sppdUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Sppds
   * const sppd = await prisma.sppd.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends sppdUpdateManyArgs>(args: Prisma.SelectSubset<T, sppdUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Sppd.
   * @param {sppdUpsertArgs} args - Arguments to update or create a Sppd.
   * @example
   * // Update or create a Sppd
   * const sppd = await prisma.sppd.upsert({
   *   create: {
   *     // ... data to create a Sppd
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Sppd we want to update
   *   }
   * })
   */
  upsert<T extends sppdUpsertArgs>(args: Prisma.SelectSubset<T, sppdUpsertArgs<ExtArgs>>): Prisma.Prisma__sppdClient<runtime.Types.Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Sppds.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {sppdCountArgs} args - Arguments to filter Sppds to count.
   * @example
   * // Count the number of Sppds
   * const count = await prisma.sppd.count({
   *   where: {
   *     // ... the filter for the Sppds we want to count
   *   }
   * })
  **/
  count<T extends sppdCountArgs>(
    args?: Prisma.Subset<T, sppdCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], SppdCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Sppd.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SppdAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends SppdAggregateArgs>(args: Prisma.Subset<T, SppdAggregateArgs>): Prisma.PrismaPromise<GetSppdAggregateType<T>>

  /**
   * Group by Sppd.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {sppdGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends sppdGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: sppdGroupByArgs['orderBy'] }
      : { orderBy?: sppdGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, sppdGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSppdGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the sppd model
 */
readonly fields: sppdFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for sppd.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__sppdClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  skpd<T extends Prisma.sppd$skpdArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.sppd$skpdArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$skpdPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  employee<T extends Prisma.sppd$employeeArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.sppd$employeeArgs<ExtArgs>>): Prisma.Prisma__employeeClient<runtime.Types.Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  dept_sppd_deptTodept<T extends Prisma.sppd$dept_sppd_deptTodeptArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.sppd$dept_sppd_deptTodeptArgs<ExtArgs>>): Prisma.Prisma__deptClient<runtime.Types.Result.GetResult<Prisma.$deptPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  sppd_detail<T extends Prisma.sppd$sppd_detailArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.sppd$sppd_detailArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$sppd_detailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the sppd model
 */
export interface sppdFieldRefs {
  readonly sppd_id: Prisma.FieldRef<"sppd", 'String'>
  readonly purpose: Prisma.FieldRef<"sppd", 'String'>
  readonly location: Prisma.FieldRef<"sppd", 'String'>
  readonly dept: Prisma.FieldRef<"sppd", 'String'>
  readonly start_date: Prisma.FieldRef<"sppd", 'DateTime'>
  readonly end_date: Prisma.FieldRef<"sppd", 'DateTime'>
  readonly duration: Prisma.FieldRef<"sppd", 'Int'>
  readonly createdBy: Prisma.FieldRef<"sppd", 'String'>
  readonly createdAt: Prisma.FieldRef<"sppd", 'DateTime'>
}
    

// Custom InputTypes
/**
 * sppd findUnique
 */
export type sppdFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sppd
   */
  select?: Prisma.sppdSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sppd
   */
  omit?: Prisma.sppdOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.sppdInclude<ExtArgs> | null
  /**
   * Filter, which sppd to fetch.
   */
  where: Prisma.sppdWhereUniqueInput
}

/**
 * sppd findUniqueOrThrow
 */
export type sppdFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sppd
   */
  select?: Prisma.sppdSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sppd
   */
  omit?: Prisma.sppdOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.sppdInclude<ExtArgs> | null
  /**
   * Filter, which sppd to fetch.
   */
  where: Prisma.sppdWhereUniqueInput
}

/**
 * sppd findFirst
 */
export type sppdFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sppd
   */
  select?: Prisma.sppdSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sppd
   */
  omit?: Prisma.sppdOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.sppdInclude<ExtArgs> | null
  /**
   * Filter, which sppd to fetch.
   */
  where?: Prisma.sppdWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of sppds to fetch.
   */
  orderBy?: Prisma.sppdOrderByWithRelationInput | Prisma.sppdOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for sppds.
   */
  cursor?: Prisma.sppdWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` sppds from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` sppds.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of sppds.
   */
  distinct?: Prisma.SppdScalarFieldEnum | Prisma.SppdScalarFieldEnum[]
}

/**
 * sppd findFirstOrThrow
 */
export type sppdFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sppd
   */
  select?: Prisma.sppdSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sppd
   */
  omit?: Prisma.sppdOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.sppdInclude<ExtArgs> | null
  /**
   * Filter, which sppd to fetch.
   */
  where?: Prisma.sppdWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of sppds to fetch.
   */
  orderBy?: Prisma.sppdOrderByWithRelationInput | Prisma.sppdOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for sppds.
   */
  cursor?: Prisma.sppdWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` sppds from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` sppds.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of sppds.
   */
  distinct?: Prisma.SppdScalarFieldEnum | Prisma.SppdScalarFieldEnum[]
}

/**
 * sppd findMany
 */
export type sppdFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sppd
   */
  select?: Prisma.sppdSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sppd
   */
  omit?: Prisma.sppdOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.sppdInclude<ExtArgs> | null
  /**
   * Filter, which sppds to fetch.
   */
  where?: Prisma.sppdWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of sppds to fetch.
   */
  orderBy?: Prisma.sppdOrderByWithRelationInput | Prisma.sppdOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing sppds.
   */
  cursor?: Prisma.sppdWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` sppds from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` sppds.
   */
  skip?: number
  distinct?: Prisma.SppdScalarFieldEnum | Prisma.SppdScalarFieldEnum[]
}

/**
 * sppd create
 */
export type sppdCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sppd
   */
  select?: Prisma.sppdSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sppd
   */
  omit?: Prisma.sppdOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.sppdInclude<ExtArgs> | null
  /**
   * The data needed to create a sppd.
   */
  data: Prisma.XOR<Prisma.sppdCreateInput, Prisma.sppdUncheckedCreateInput>
}

/**
 * sppd createMany
 */
export type sppdCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many sppds.
   */
  data: Prisma.sppdCreateManyInput | Prisma.sppdCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * sppd update
 */
export type sppdUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sppd
   */
  select?: Prisma.sppdSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sppd
   */
  omit?: Prisma.sppdOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.sppdInclude<ExtArgs> | null
  /**
   * The data needed to update a sppd.
   */
  data: Prisma.XOR<Prisma.sppdUpdateInput, Prisma.sppdUncheckedUpdateInput>
  /**
   * Choose, which sppd to update.
   */
  where: Prisma.sppdWhereUniqueInput
}

/**
 * sppd updateMany
 */
export type sppdUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update sppds.
   */
  data: Prisma.XOR<Prisma.sppdUpdateManyMutationInput, Prisma.sppdUncheckedUpdateManyInput>
  /**
   * Filter which sppds to update
   */
  where?: Prisma.sppdWhereInput
  /**
   * Limit how many sppds to update.
   */
  limit?: number
}

/**
 * sppd upsert
 */
export type sppdUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sppd
   */
  select?: Prisma.sppdSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sppd
   */
  omit?: Prisma.sppdOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.sppdInclude<ExtArgs> | null
  /**
   * The filter to search for the sppd to update in case it exists.
   */
  where: Prisma.sppdWhereUniqueInput
  /**
   * In case the sppd found by the `where` argument doesn't exist, create a new sppd with this data.
   */
  create: Prisma.XOR<Prisma.sppdCreateInput, Prisma.sppdUncheckedCreateInput>
  /**
   * In case the sppd was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.sppdUpdateInput, Prisma.sppdUncheckedUpdateInput>
}

/**
 * sppd delete
 */
export type sppdDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sppd
   */
  select?: Prisma.sppdSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sppd
   */
  omit?: Prisma.sppdOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.sppdInclude<ExtArgs> | null
  /**
   * Filter which sppd to delete.
   */
  where: Prisma.sppdWhereUniqueInput
}

/**
 * sppd deleteMany
 */
export type sppdDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which sppds to delete
   */
  where?: Prisma.sppdWhereInput
  /**
   * Limit how many sppds to delete.
   */
  limit?: number
}

/**
 * sppd.skpd
 */
export type sppd$skpdArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the skpd
   */
  select?: Prisma.skpdSelect<ExtArgs> | null
  /**
   * Omit specific fields from the skpd
   */
  omit?: Prisma.skpdOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.skpdInclude<ExtArgs> | null
  where?: Prisma.skpdWhereInput
  orderBy?: Prisma.skpdOrderByWithRelationInput | Prisma.skpdOrderByWithRelationInput[]
  cursor?: Prisma.skpdWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SkpdScalarFieldEnum | Prisma.SkpdScalarFieldEnum[]
}

/**
 * sppd.employee
 */
export type sppd$employeeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the employee
   */
  select?: Prisma.employeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the employee
   */
  omit?: Prisma.employeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.employeeInclude<ExtArgs> | null
  where?: Prisma.employeeWhereInput
}

/**
 * sppd.dept_sppd_deptTodept
 */
export type sppd$dept_sppd_deptTodeptArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the dept
   */
  select?: Prisma.deptSelect<ExtArgs> | null
  /**
   * Omit specific fields from the dept
   */
  omit?: Prisma.deptOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.deptInclude<ExtArgs> | null
  where?: Prisma.deptWhereInput
}

/**
 * sppd.sppd_detail
 */
export type sppd$sppd_detailArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sppd_detail
   */
  select?: Prisma.sppd_detailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sppd_detail
   */
  omit?: Prisma.sppd_detailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.sppd_detailInclude<ExtArgs> | null
  where?: Prisma.sppd_detailWhereInput
  orderBy?: Prisma.sppd_detailOrderByWithRelationInput | Prisma.sppd_detailOrderByWithRelationInput[]
  cursor?: Prisma.sppd_detailWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Sppd_detailScalarFieldEnum | Prisma.Sppd_detailScalarFieldEnum[]
}

/**
 * sppd without action
 */
export type sppdDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sppd
   */
  select?: Prisma.sppdSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sppd
   */
  omit?: Prisma.sppdOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.sppdInclude<ExtArgs> | null
}
