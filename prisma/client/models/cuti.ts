
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `cuti` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model cuti
 * 
 */
export type cutiModel = runtime.Types.Result.DefaultSelection<Prisma.$cutiPayload>

export type AggregateCuti = {
  _count: CutiCountAggregateOutputType | null
  _avg: CutiAvgAggregateOutputType | null
  _sum: CutiSumAggregateOutputType | null
  _min: CutiMinAggregateOutputType | null
  _max: CutiMaxAggregateOutputType | null
}

export type CutiAvgAggregateOutputType = {
  year: number | null
}

export type CutiSumAggregateOutputType = {
  year: number | null
}

export type CutiMinAggregateOutputType = {
  cuti_id: string | null
  cuti_group_id: string | null
  payroll: string | null
  type: string | null
  description: string | null
  date: Date | null
  year: number | null
  status: $Enums.cuti_status | null
  approval: string | null
  is_delegate: boolean | null
  createdAt: Date | null
}

export type CutiMaxAggregateOutputType = {
  cuti_id: string | null
  cuti_group_id: string | null
  payroll: string | null
  type: string | null
  description: string | null
  date: Date | null
  year: number | null
  status: $Enums.cuti_status | null
  approval: string | null
  is_delegate: boolean | null
  createdAt: Date | null
}

export type CutiCountAggregateOutputType = {
  cuti_id: number
  cuti_group_id: number
  payroll: number
  type: number
  description: number
  date: number
  year: number
  status: number
  approval: number
  is_delegate: number
  createdAt: number
  _all: number
}


export type CutiAvgAggregateInputType = {
  year?: true
}

export type CutiSumAggregateInputType = {
  year?: true
}

export type CutiMinAggregateInputType = {
  cuti_id?: true
  cuti_group_id?: true
  payroll?: true
  type?: true
  description?: true
  date?: true
  year?: true
  status?: true
  approval?: true
  is_delegate?: true
  createdAt?: true
}

export type CutiMaxAggregateInputType = {
  cuti_id?: true
  cuti_group_id?: true
  payroll?: true
  type?: true
  description?: true
  date?: true
  year?: true
  status?: true
  approval?: true
  is_delegate?: true
  createdAt?: true
}

export type CutiCountAggregateInputType = {
  cuti_id?: true
  cuti_group_id?: true
  payroll?: true
  type?: true
  description?: true
  date?: true
  year?: true
  status?: true
  approval?: true
  is_delegate?: true
  createdAt?: true
  _all?: true
}

export type CutiAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which cuti to aggregate.
   */
  where?: Prisma.cutiWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cutis to fetch.
   */
  orderBy?: Prisma.cutiOrderByWithRelationInput | Prisma.cutiOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.cutiWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cutis from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cutis.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned cutis
  **/
  _count?: true | CutiCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: CutiAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: CutiSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: CutiMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: CutiMaxAggregateInputType
}

export type GetCutiAggregateType<T extends CutiAggregateArgs> = {
      [P in keyof T & keyof AggregateCuti]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateCuti[P]>
    : Prisma.GetScalarType<T[P], AggregateCuti[P]>
}




export type cutiGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.cutiWhereInput
  orderBy?: Prisma.cutiOrderByWithAggregationInput | Prisma.cutiOrderByWithAggregationInput[]
  by: Prisma.CutiScalarFieldEnum[] | Prisma.CutiScalarFieldEnum
  having?: Prisma.cutiScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: CutiCountAggregateInputType | true
  _avg?: CutiAvgAggregateInputType
  _sum?: CutiSumAggregateInputType
  _min?: CutiMinAggregateInputType
  _max?: CutiMaxAggregateInputType
}

export type CutiGroupByOutputType = {
  cuti_id: string
  cuti_group_id: string
  payroll: string | null
  type: string
  description: string
  date: Date
  year: number
  status: $Enums.cuti_status
  approval: string | null
  is_delegate: boolean
  createdAt: Date
  _count: CutiCountAggregateOutputType | null
  _avg: CutiAvgAggregateOutputType | null
  _sum: CutiSumAggregateOutputType | null
  _min: CutiMinAggregateOutputType | null
  _max: CutiMaxAggregateOutputType | null
}

type GetCutiGroupByPayload<T extends cutiGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<CutiGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof CutiGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], CutiGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], CutiGroupByOutputType[P]>
      }
    >
  > 



export type cutiWhereInput = {
  AND?: Prisma.cutiWhereInput | Prisma.cutiWhereInput[]
  OR?: Prisma.cutiWhereInput[]
  NOT?: Prisma.cutiWhereInput | Prisma.cutiWhereInput[]
  cuti_id?: Prisma.StringFilter<"cuti"> | string
  cuti_group_id?: Prisma.StringFilter<"cuti"> | string
  payroll?: Prisma.StringNullableFilter<"cuti"> | string | null
  type?: Prisma.StringFilter<"cuti"> | string
  description?: Prisma.StringFilter<"cuti"> | string
  date?: Prisma.DateTimeFilter<"cuti"> | Date | string
  year?: Prisma.IntFilter<"cuti"> | number
  status?: Prisma.Enumcuti_statusFilter<"cuti"> | $Enums.cuti_status
  approval?: Prisma.StringNullableFilter<"cuti"> | string | null
  is_delegate?: Prisma.BoolFilter<"cuti"> | boolean
  createdAt?: Prisma.DateTimeFilter<"cuti"> | Date | string
  employee_cuti_approvalToemployee?: Prisma.XOR<Prisma.EmployeeNullableScalarRelationFilter, Prisma.employeeWhereInput> | null
  employee?: Prisma.XOR<Prisma.EmployeeNullableScalarRelationFilter, Prisma.employeeWhereInput> | null
}

export type cutiOrderByWithRelationInput = {
  cuti_id?: Prisma.SortOrder
  cuti_group_id?: Prisma.SortOrder
  payroll?: Prisma.SortOrderInput | Prisma.SortOrder
  type?: Prisma.SortOrder
  description?: Prisma.SortOrder
  date?: Prisma.SortOrder
  year?: Prisma.SortOrder
  status?: Prisma.SortOrder
  approval?: Prisma.SortOrderInput | Prisma.SortOrder
  is_delegate?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  employee_cuti_approvalToemployee?: Prisma.employeeOrderByWithRelationInput
  employee?: Prisma.employeeOrderByWithRelationInput
  _relevance?: Prisma.cutiOrderByRelevanceInput
}

export type cutiWhereUniqueInput = Prisma.AtLeast<{
  cuti_id?: string
  AND?: Prisma.cutiWhereInput | Prisma.cutiWhereInput[]
  OR?: Prisma.cutiWhereInput[]
  NOT?: Prisma.cutiWhereInput | Prisma.cutiWhereInput[]
  cuti_group_id?: Prisma.StringFilter<"cuti"> | string
  payroll?: Prisma.StringNullableFilter<"cuti"> | string | null
  type?: Prisma.StringFilter<"cuti"> | string
  description?: Prisma.StringFilter<"cuti"> | string
  date?: Prisma.DateTimeFilter<"cuti"> | Date | string
  year?: Prisma.IntFilter<"cuti"> | number
  status?: Prisma.Enumcuti_statusFilter<"cuti"> | $Enums.cuti_status
  approval?: Prisma.StringNullableFilter<"cuti"> | string | null
  is_delegate?: Prisma.BoolFilter<"cuti"> | boolean
  createdAt?: Prisma.DateTimeFilter<"cuti"> | Date | string
  employee_cuti_approvalToemployee?: Prisma.XOR<Prisma.EmployeeNullableScalarRelationFilter, Prisma.employeeWhereInput> | null
  employee?: Prisma.XOR<Prisma.EmployeeNullableScalarRelationFilter, Prisma.employeeWhereInput> | null
}, "cuti_id">

export type cutiOrderByWithAggregationInput = {
  cuti_id?: Prisma.SortOrder
  cuti_group_id?: Prisma.SortOrder
  payroll?: Prisma.SortOrderInput | Prisma.SortOrder
  type?: Prisma.SortOrder
  description?: Prisma.SortOrder
  date?: Prisma.SortOrder
  year?: Prisma.SortOrder
  status?: Prisma.SortOrder
  approval?: Prisma.SortOrderInput | Prisma.SortOrder
  is_delegate?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.cutiCountOrderByAggregateInput
  _avg?: Prisma.cutiAvgOrderByAggregateInput
  _max?: Prisma.cutiMaxOrderByAggregateInput
  _min?: Prisma.cutiMinOrderByAggregateInput
  _sum?: Prisma.cutiSumOrderByAggregateInput
}

export type cutiScalarWhereWithAggregatesInput = {
  AND?: Prisma.cutiScalarWhereWithAggregatesInput | Prisma.cutiScalarWhereWithAggregatesInput[]
  OR?: Prisma.cutiScalarWhereWithAggregatesInput[]
  NOT?: Prisma.cutiScalarWhereWithAggregatesInput | Prisma.cutiScalarWhereWithAggregatesInput[]
  cuti_id?: Prisma.StringWithAggregatesFilter<"cuti"> | string
  cuti_group_id?: Prisma.StringWithAggregatesFilter<"cuti"> | string
  payroll?: Prisma.StringNullableWithAggregatesFilter<"cuti"> | string | null
  type?: Prisma.StringWithAggregatesFilter<"cuti"> | string
  description?: Prisma.StringWithAggregatesFilter<"cuti"> | string
  date?: Prisma.DateTimeWithAggregatesFilter<"cuti"> | Date | string
  year?: Prisma.IntWithAggregatesFilter<"cuti"> | number
  status?: Prisma.Enumcuti_statusWithAggregatesFilter<"cuti"> | $Enums.cuti_status
  approval?: Prisma.StringNullableWithAggregatesFilter<"cuti"> | string | null
  is_delegate?: Prisma.BoolWithAggregatesFilter<"cuti"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"cuti"> | Date | string
}

export type cutiCreateInput = {
  cuti_id: string
  cuti_group_id: string
  type: string
  description: string
  date: Date | string
  year: number
  status: $Enums.cuti_status
  is_delegate: boolean
  createdAt: Date | string
  employee_cuti_approvalToemployee?: Prisma.employeeCreateNestedOneWithoutCuti_cuti_approvalToemployeeInput
  employee?: Prisma.employeeCreateNestedOneWithoutCutiInput
}

export type cutiUncheckedCreateInput = {
  cuti_id: string
  cuti_group_id: string
  payroll?: string | null
  type: string
  description: string
  date: Date | string
  year: number
  status: $Enums.cuti_status
  approval?: string | null
  is_delegate: boolean
  createdAt: Date | string
}

export type cutiUpdateInput = {
  cuti_id?: Prisma.StringFieldUpdateOperationsInput | string
  cuti_group_id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
  is_delegate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  employee_cuti_approvalToemployee?: Prisma.employeeUpdateOneWithoutCuti_cuti_approvalToemployeeNestedInput
  employee?: Prisma.employeeUpdateOneWithoutCutiNestedInput
}

export type cutiUncheckedUpdateInput = {
  cuti_id?: Prisma.StringFieldUpdateOperationsInput | string
  cuti_group_id?: Prisma.StringFieldUpdateOperationsInput | string
  payroll?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
  approval?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_delegate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type cutiCreateManyInput = {
  cuti_id: string
  cuti_group_id: string
  payroll?: string | null
  type: string
  description: string
  date: Date | string
  year: number
  status: $Enums.cuti_status
  approval?: string | null
  is_delegate: boolean
  createdAt: Date | string
}

export type cutiUpdateManyMutationInput = {
  cuti_id?: Prisma.StringFieldUpdateOperationsInput | string
  cuti_group_id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
  is_delegate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type cutiUncheckedUpdateManyInput = {
  cuti_id?: Prisma.StringFieldUpdateOperationsInput | string
  cuti_group_id?: Prisma.StringFieldUpdateOperationsInput | string
  payroll?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
  approval?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_delegate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type CutiListRelationFilter = {
  every?: Prisma.cutiWhereInput
  some?: Prisma.cutiWhereInput
  none?: Prisma.cutiWhereInput
}

export type cutiOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type cutiOrderByRelevanceInput = {
  fields: Prisma.cutiOrderByRelevanceFieldEnum | Prisma.cutiOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type cutiCountOrderByAggregateInput = {
  cuti_id?: Prisma.SortOrder
  cuti_group_id?: Prisma.SortOrder
  payroll?: Prisma.SortOrder
  type?: Prisma.SortOrder
  description?: Prisma.SortOrder
  date?: Prisma.SortOrder
  year?: Prisma.SortOrder
  status?: Prisma.SortOrder
  approval?: Prisma.SortOrder
  is_delegate?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type cutiAvgOrderByAggregateInput = {
  year?: Prisma.SortOrder
}

export type cutiMaxOrderByAggregateInput = {
  cuti_id?: Prisma.SortOrder
  cuti_group_id?: Prisma.SortOrder
  payroll?: Prisma.SortOrder
  type?: Prisma.SortOrder
  description?: Prisma.SortOrder
  date?: Prisma.SortOrder
  year?: Prisma.SortOrder
  status?: Prisma.SortOrder
  approval?: Prisma.SortOrder
  is_delegate?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type cutiMinOrderByAggregateInput = {
  cuti_id?: Prisma.SortOrder
  cuti_group_id?: Prisma.SortOrder
  payroll?: Prisma.SortOrder
  type?: Prisma.SortOrder
  description?: Prisma.SortOrder
  date?: Prisma.SortOrder
  year?: Prisma.SortOrder
  status?: Prisma.SortOrder
  approval?: Prisma.SortOrder
  is_delegate?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type cutiSumOrderByAggregateInput = {
  year?: Prisma.SortOrder
}

export type cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput = {
  create?: Prisma.XOR<Prisma.cutiCreateWithoutEmployee_cuti_approvalToemployeeInput, Prisma.cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput> | Prisma.cutiCreateWithoutEmployee_cuti_approvalToemployeeInput[] | Prisma.cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput[]
  connectOrCreate?: Prisma.cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput | Prisma.cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput[]
  createMany?: Prisma.cutiCreateManyEmployee_cuti_approvalToemployeeInputEnvelope
  connect?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
}

export type cutiCreateNestedManyWithoutEmployeeInput = {
  create?: Prisma.XOR<Prisma.cutiCreateWithoutEmployeeInput, Prisma.cutiUncheckedCreateWithoutEmployeeInput> | Prisma.cutiCreateWithoutEmployeeInput[] | Prisma.cutiUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.cutiCreateOrConnectWithoutEmployeeInput | Prisma.cutiCreateOrConnectWithoutEmployeeInput[]
  createMany?: Prisma.cutiCreateManyEmployeeInputEnvelope
  connect?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
}

export type cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput = {
  create?: Prisma.XOR<Prisma.cutiCreateWithoutEmployee_cuti_approvalToemployeeInput, Prisma.cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput> | Prisma.cutiCreateWithoutEmployee_cuti_approvalToemployeeInput[] | Prisma.cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput[]
  connectOrCreate?: Prisma.cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput | Prisma.cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput[]
  createMany?: Prisma.cutiCreateManyEmployee_cuti_approvalToemployeeInputEnvelope
  connect?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
}

export type cutiUncheckedCreateNestedManyWithoutEmployeeInput = {
  create?: Prisma.XOR<Prisma.cutiCreateWithoutEmployeeInput, Prisma.cutiUncheckedCreateWithoutEmployeeInput> | Prisma.cutiCreateWithoutEmployeeInput[] | Prisma.cutiUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.cutiCreateOrConnectWithoutEmployeeInput | Prisma.cutiCreateOrConnectWithoutEmployeeInput[]
  createMany?: Prisma.cutiCreateManyEmployeeInputEnvelope
  connect?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
}

export type cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput = {
  create?: Prisma.XOR<Prisma.cutiCreateWithoutEmployee_cuti_approvalToemployeeInput, Prisma.cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput> | Prisma.cutiCreateWithoutEmployee_cuti_approvalToemployeeInput[] | Prisma.cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput[]
  connectOrCreate?: Prisma.cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput | Prisma.cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput[]
  upsert?: Prisma.cutiUpsertWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput | Prisma.cutiUpsertWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput[]
  createMany?: Prisma.cutiCreateManyEmployee_cuti_approvalToemployeeInputEnvelope
  set?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  disconnect?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  delete?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  connect?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  update?: Prisma.cutiUpdateWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput | Prisma.cutiUpdateWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput[]
  updateMany?: Prisma.cutiUpdateManyWithWhereWithoutEmployee_cuti_approvalToemployeeInput | Prisma.cutiUpdateManyWithWhereWithoutEmployee_cuti_approvalToemployeeInput[]
  deleteMany?: Prisma.cutiScalarWhereInput | Prisma.cutiScalarWhereInput[]
}

export type cutiUpdateManyWithoutEmployeeNestedInput = {
  create?: Prisma.XOR<Prisma.cutiCreateWithoutEmployeeInput, Prisma.cutiUncheckedCreateWithoutEmployeeInput> | Prisma.cutiCreateWithoutEmployeeInput[] | Prisma.cutiUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.cutiCreateOrConnectWithoutEmployeeInput | Prisma.cutiCreateOrConnectWithoutEmployeeInput[]
  upsert?: Prisma.cutiUpsertWithWhereUniqueWithoutEmployeeInput | Prisma.cutiUpsertWithWhereUniqueWithoutEmployeeInput[]
  createMany?: Prisma.cutiCreateManyEmployeeInputEnvelope
  set?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  disconnect?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  delete?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  connect?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  update?: Prisma.cutiUpdateWithWhereUniqueWithoutEmployeeInput | Prisma.cutiUpdateWithWhereUniqueWithoutEmployeeInput[]
  updateMany?: Prisma.cutiUpdateManyWithWhereWithoutEmployeeInput | Prisma.cutiUpdateManyWithWhereWithoutEmployeeInput[]
  deleteMany?: Prisma.cutiScalarWhereInput | Prisma.cutiScalarWhereInput[]
}

export type cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput = {
  create?: Prisma.XOR<Prisma.cutiCreateWithoutEmployee_cuti_approvalToemployeeInput, Prisma.cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput> | Prisma.cutiCreateWithoutEmployee_cuti_approvalToemployeeInput[] | Prisma.cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput[]
  connectOrCreate?: Prisma.cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput | Prisma.cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput[]
  upsert?: Prisma.cutiUpsertWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput | Prisma.cutiUpsertWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput[]
  createMany?: Prisma.cutiCreateManyEmployee_cuti_approvalToemployeeInputEnvelope
  set?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  disconnect?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  delete?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  connect?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  update?: Prisma.cutiUpdateWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput | Prisma.cutiUpdateWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput[]
  updateMany?: Prisma.cutiUpdateManyWithWhereWithoutEmployee_cuti_approvalToemployeeInput | Prisma.cutiUpdateManyWithWhereWithoutEmployee_cuti_approvalToemployeeInput[]
  deleteMany?: Prisma.cutiScalarWhereInput | Prisma.cutiScalarWhereInput[]
}

export type cutiUncheckedUpdateManyWithoutEmployeeNestedInput = {
  create?: Prisma.XOR<Prisma.cutiCreateWithoutEmployeeInput, Prisma.cutiUncheckedCreateWithoutEmployeeInput> | Prisma.cutiCreateWithoutEmployeeInput[] | Prisma.cutiUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.cutiCreateOrConnectWithoutEmployeeInput | Prisma.cutiCreateOrConnectWithoutEmployeeInput[]
  upsert?: Prisma.cutiUpsertWithWhereUniqueWithoutEmployeeInput | Prisma.cutiUpsertWithWhereUniqueWithoutEmployeeInput[]
  createMany?: Prisma.cutiCreateManyEmployeeInputEnvelope
  set?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  disconnect?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  delete?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  connect?: Prisma.cutiWhereUniqueInput | Prisma.cutiWhereUniqueInput[]
  update?: Prisma.cutiUpdateWithWhereUniqueWithoutEmployeeInput | Prisma.cutiUpdateWithWhereUniqueWithoutEmployeeInput[]
  updateMany?: Prisma.cutiUpdateManyWithWhereWithoutEmployeeInput | Prisma.cutiUpdateManyWithWhereWithoutEmployeeInput[]
  deleteMany?: Prisma.cutiScalarWhereInput | Prisma.cutiScalarWhereInput[]
}

export type Enumcuti_statusFieldUpdateOperationsInput = {
  set?: $Enums.cuti_status
}

export type cutiCreateWithoutEmployee_cuti_approvalToemployeeInput = {
  cuti_id: string
  cuti_group_id: string
  type: string
  description: string
  date: Date | string
  year: number
  status: $Enums.cuti_status
  is_delegate: boolean
  createdAt: Date | string
  employee?: Prisma.employeeCreateNestedOneWithoutCutiInput
}

export type cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput = {
  cuti_id: string
  cuti_group_id: string
  payroll?: string | null
  type: string
  description: string
  date: Date | string
  year: number
  status: $Enums.cuti_status
  is_delegate: boolean
  createdAt: Date | string
}

export type cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput = {
  where: Prisma.cutiWhereUniqueInput
  create: Prisma.XOR<Prisma.cutiCreateWithoutEmployee_cuti_approvalToemployeeInput, Prisma.cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput>
}

export type cutiCreateManyEmployee_cuti_approvalToemployeeInputEnvelope = {
  data: Prisma.cutiCreateManyEmployee_cuti_approvalToemployeeInput | Prisma.cutiCreateManyEmployee_cuti_approvalToemployeeInput[]
  skipDuplicates?: boolean
}

export type cutiCreateWithoutEmployeeInput = {
  cuti_id: string
  cuti_group_id: string
  type: string
  description: string
  date: Date | string
  year: number
  status: $Enums.cuti_status
  is_delegate: boolean
  createdAt: Date | string
  employee_cuti_approvalToemployee?: Prisma.employeeCreateNestedOneWithoutCuti_cuti_approvalToemployeeInput
}

export type cutiUncheckedCreateWithoutEmployeeInput = {
  cuti_id: string
  cuti_group_id: string
  type: string
  description: string
  date: Date | string
  year: number
  status: $Enums.cuti_status
  approval?: string | null
  is_delegate: boolean
  createdAt: Date | string
}

export type cutiCreateOrConnectWithoutEmployeeInput = {
  where: Prisma.cutiWhereUniqueInput
  create: Prisma.XOR<Prisma.cutiCreateWithoutEmployeeInput, Prisma.cutiUncheckedCreateWithoutEmployeeInput>
}

export type cutiCreateManyEmployeeInputEnvelope = {
  data: Prisma.cutiCreateManyEmployeeInput | Prisma.cutiCreateManyEmployeeInput[]
  skipDuplicates?: boolean
}

export type cutiUpsertWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput = {
  where: Prisma.cutiWhereUniqueInput
  update: Prisma.XOR<Prisma.cutiUpdateWithoutEmployee_cuti_approvalToemployeeInput, Prisma.cutiUncheckedUpdateWithoutEmployee_cuti_approvalToemployeeInput>
  create: Prisma.XOR<Prisma.cutiCreateWithoutEmployee_cuti_approvalToemployeeInput, Prisma.cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput>
}

export type cutiUpdateWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput = {
  where: Prisma.cutiWhereUniqueInput
  data: Prisma.XOR<Prisma.cutiUpdateWithoutEmployee_cuti_approvalToemployeeInput, Prisma.cutiUncheckedUpdateWithoutEmployee_cuti_approvalToemployeeInput>
}

export type cutiUpdateManyWithWhereWithoutEmployee_cuti_approvalToemployeeInput = {
  where: Prisma.cutiScalarWhereInput
  data: Prisma.XOR<Prisma.cutiUpdateManyMutationInput, Prisma.cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeInput>
}

export type cutiScalarWhereInput = {
  AND?: Prisma.cutiScalarWhereInput | Prisma.cutiScalarWhereInput[]
  OR?: Prisma.cutiScalarWhereInput[]
  NOT?: Prisma.cutiScalarWhereInput | Prisma.cutiScalarWhereInput[]
  cuti_id?: Prisma.StringFilter<"cuti"> | string
  cuti_group_id?: Prisma.StringFilter<"cuti"> | string
  payroll?: Prisma.StringNullableFilter<"cuti"> | string | null
  type?: Prisma.StringFilter<"cuti"> | string
  description?: Prisma.StringFilter<"cuti"> | string
  date?: Prisma.DateTimeFilter<"cuti"> | Date | string
  year?: Prisma.IntFilter<"cuti"> | number
  status?: Prisma.Enumcuti_statusFilter<"cuti"> | $Enums.cuti_status
  approval?: Prisma.StringNullableFilter<"cuti"> | string | null
  is_delegate?: Prisma.BoolFilter<"cuti"> | boolean
  createdAt?: Prisma.DateTimeFilter<"cuti"> | Date | string
}

export type cutiUpsertWithWhereUniqueWithoutEmployeeInput = {
  where: Prisma.cutiWhereUniqueInput
  update: Prisma.XOR<Prisma.cutiUpdateWithoutEmployeeInput, Prisma.cutiUncheckedUpdateWithoutEmployeeInput>
  create: Prisma.XOR<Prisma.cutiCreateWithoutEmployeeInput, Prisma.cutiUncheckedCreateWithoutEmployeeInput>
}

export type cutiUpdateWithWhereUniqueWithoutEmployeeInput = {
  where: Prisma.cutiWhereUniqueInput
  data: Prisma.XOR<Prisma.cutiUpdateWithoutEmployeeInput, Prisma.cutiUncheckedUpdateWithoutEmployeeInput>
}

export type cutiUpdateManyWithWhereWithoutEmployeeInput = {
  where: Prisma.cutiScalarWhereInput
  data: Prisma.XOR<Prisma.cutiUpdateManyMutationInput, Prisma.cutiUncheckedUpdateManyWithoutEmployeeInput>
}

export type cutiCreateManyEmployee_cuti_approvalToemployeeInput = {
  cuti_id: string
  cuti_group_id: string
  payroll?: string | null
  type: string
  description: string
  date: Date | string
  year: number
  status: $Enums.cuti_status
  is_delegate: boolean
  createdAt: Date | string
}

export type cutiCreateManyEmployeeInput = {
  cuti_id: string
  cuti_group_id: string
  type: string
  description: string
  date: Date | string
  year: number
  status: $Enums.cuti_status
  approval?: string | null
  is_delegate: boolean
  createdAt: Date | string
}

export type cutiUpdateWithoutEmployee_cuti_approvalToemployeeInput = {
  cuti_id?: Prisma.StringFieldUpdateOperationsInput | string
  cuti_group_id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
  is_delegate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  employee?: Prisma.employeeUpdateOneWithoutCutiNestedInput
}

export type cutiUncheckedUpdateWithoutEmployee_cuti_approvalToemployeeInput = {
  cuti_id?: Prisma.StringFieldUpdateOperationsInput | string
  cuti_group_id?: Prisma.StringFieldUpdateOperationsInput | string
  payroll?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
  is_delegate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeInput = {
  cuti_id?: Prisma.StringFieldUpdateOperationsInput | string
  cuti_group_id?: Prisma.StringFieldUpdateOperationsInput | string
  payroll?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
  is_delegate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type cutiUpdateWithoutEmployeeInput = {
  cuti_id?: Prisma.StringFieldUpdateOperationsInput | string
  cuti_group_id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
  is_delegate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  employee_cuti_approvalToemployee?: Prisma.employeeUpdateOneWithoutCuti_cuti_approvalToemployeeNestedInput
}

export type cutiUncheckedUpdateWithoutEmployeeInput = {
  cuti_id?: Prisma.StringFieldUpdateOperationsInput | string
  cuti_group_id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
  approval?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_delegate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type cutiUncheckedUpdateManyWithoutEmployeeInput = {
  cuti_id?: Prisma.StringFieldUpdateOperationsInput | string
  cuti_group_id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  year?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
  approval?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_delegate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type cutiSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  cuti_id?: boolean
  cuti_group_id?: boolean
  payroll?: boolean
  type?: boolean
  description?: boolean
  date?: boolean
  year?: boolean
  status?: boolean
  approval?: boolean
  is_delegate?: boolean
  createdAt?: boolean
  employee_cuti_approvalToemployee?: boolean | Prisma.cuti$employee_cuti_approvalToemployeeArgs<ExtArgs>
  employee?: boolean | Prisma.cuti$employeeArgs<ExtArgs>
}, ExtArgs["result"]["cuti"]>



export type cutiSelectScalar = {
  cuti_id?: boolean
  cuti_group_id?: boolean
  payroll?: boolean
  type?: boolean
  description?: boolean
  date?: boolean
  year?: boolean
  status?: boolean
  approval?: boolean
  is_delegate?: boolean
  createdAt?: boolean
}

export type cutiOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"cuti_id" | "cuti_group_id" | "payroll" | "type" | "description" | "date" | "year" | "status" | "approval" | "is_delegate" | "createdAt", ExtArgs["result"]["cuti"]>
export type cutiInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  employee_cuti_approvalToemployee?: boolean | Prisma.cuti$employee_cuti_approvalToemployeeArgs<ExtArgs>
  employee?: boolean | Prisma.cuti$employeeArgs<ExtArgs>
}

export type $cutiPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "cuti"
  objects: {
    employee_cuti_approvalToemployee: Prisma.$employeePayload<ExtArgs> | null
    employee: Prisma.$employeePayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    cuti_id: string
    cuti_group_id: string
    payroll: string | null
    type: string
    description: string
    date: Date
    year: number
    status: $Enums.cuti_status
    approval: string | null
    is_delegate: boolean
    createdAt: Date
  }, ExtArgs["result"]["cuti"]>
  composites: {}
}

export type cutiGetPayload<S extends boolean | null | undefined | cutiDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$cutiPayload, S>

export type cutiCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<cutiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: CutiCountAggregateInputType | true
  }

export interface cutiDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cuti'], meta: { name: 'cuti' } }
  /**
   * Find zero or one Cuti that matches the filter.
   * @param {cutiFindUniqueArgs} args - Arguments to find a Cuti
   * @example
   * // Get one Cuti
   * const cuti = await prisma.cuti.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends cutiFindUniqueArgs>(args: Prisma.SelectSubset<T, cutiFindUniqueArgs<ExtArgs>>): Prisma.Prisma__cutiClient<runtime.Types.Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Cuti that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {cutiFindUniqueOrThrowArgs} args - Arguments to find a Cuti
   * @example
   * // Get one Cuti
   * const cuti = await prisma.cuti.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends cutiFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, cutiFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__cutiClient<runtime.Types.Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Cuti that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cutiFindFirstArgs} args - Arguments to find a Cuti
   * @example
   * // Get one Cuti
   * const cuti = await prisma.cuti.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends cutiFindFirstArgs>(args?: Prisma.SelectSubset<T, cutiFindFirstArgs<ExtArgs>>): Prisma.Prisma__cutiClient<runtime.Types.Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Cuti that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cutiFindFirstOrThrowArgs} args - Arguments to find a Cuti
   * @example
   * // Get one Cuti
   * const cuti = await prisma.cuti.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends cutiFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, cutiFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__cutiClient<runtime.Types.Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Cutis that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cutiFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Cutis
   * const cutis = await prisma.cuti.findMany()
   * 
   * // Get first 10 Cutis
   * const cutis = await prisma.cuti.findMany({ take: 10 })
   * 
   * // Only select the `cuti_id`
   * const cutiWithCuti_idOnly = await prisma.cuti.findMany({ select: { cuti_id: true } })
   * 
   */
  findMany<T extends cutiFindManyArgs>(args?: Prisma.SelectSubset<T, cutiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Cuti.
   * @param {cutiCreateArgs} args - Arguments to create a Cuti.
   * @example
   * // Create one Cuti
   * const Cuti = await prisma.cuti.create({
   *   data: {
   *     // ... data to create a Cuti
   *   }
   * })
   * 
   */
  create<T extends cutiCreateArgs>(args: Prisma.SelectSubset<T, cutiCreateArgs<ExtArgs>>): Prisma.Prisma__cutiClient<runtime.Types.Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Cutis.
   * @param {cutiCreateManyArgs} args - Arguments to create many Cutis.
   * @example
   * // Create many Cutis
   * const cuti = await prisma.cuti.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends cutiCreateManyArgs>(args?: Prisma.SelectSubset<T, cutiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Cuti.
   * @param {cutiDeleteArgs} args - Arguments to delete one Cuti.
   * @example
   * // Delete one Cuti
   * const Cuti = await prisma.cuti.delete({
   *   where: {
   *     // ... filter to delete one Cuti
   *   }
   * })
   * 
   */
  delete<T extends cutiDeleteArgs>(args: Prisma.SelectSubset<T, cutiDeleteArgs<ExtArgs>>): Prisma.Prisma__cutiClient<runtime.Types.Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Cuti.
   * @param {cutiUpdateArgs} args - Arguments to update one Cuti.
   * @example
   * // Update one Cuti
   * const cuti = await prisma.cuti.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends cutiUpdateArgs>(args: Prisma.SelectSubset<T, cutiUpdateArgs<ExtArgs>>): Prisma.Prisma__cutiClient<runtime.Types.Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Cutis.
   * @param {cutiDeleteManyArgs} args - Arguments to filter Cutis to delete.
   * @example
   * // Delete a few Cutis
   * const { count } = await prisma.cuti.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends cutiDeleteManyArgs>(args?: Prisma.SelectSubset<T, cutiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Cutis.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cutiUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Cutis
   * const cuti = await prisma.cuti.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends cutiUpdateManyArgs>(args: Prisma.SelectSubset<T, cutiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Cuti.
   * @param {cutiUpsertArgs} args - Arguments to update or create a Cuti.
   * @example
   * // Update or create a Cuti
   * const cuti = await prisma.cuti.upsert({
   *   create: {
   *     // ... data to create a Cuti
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Cuti we want to update
   *   }
   * })
   */
  upsert<T extends cutiUpsertArgs>(args: Prisma.SelectSubset<T, cutiUpsertArgs<ExtArgs>>): Prisma.Prisma__cutiClient<runtime.Types.Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Cutis.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cutiCountArgs} args - Arguments to filter Cutis to count.
   * @example
   * // Count the number of Cutis
   * const count = await prisma.cuti.count({
   *   where: {
   *     // ... the filter for the Cutis we want to count
   *   }
   * })
  **/
  count<T extends cutiCountArgs>(
    args?: Prisma.Subset<T, cutiCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], CutiCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Cuti.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CutiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends CutiAggregateArgs>(args: Prisma.Subset<T, CutiAggregateArgs>): Prisma.PrismaPromise<GetCutiAggregateType<T>>

  /**
   * Group by Cuti.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cutiGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends cutiGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: cutiGroupByArgs['orderBy'] }
      : { orderBy?: cutiGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, cutiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCutiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the cuti model
 */
readonly fields: cutiFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for cuti.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__cutiClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  employee_cuti_approvalToemployee<T extends Prisma.cuti$employee_cuti_approvalToemployeeArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.cuti$employee_cuti_approvalToemployeeArgs<ExtArgs>>): Prisma.Prisma__employeeClient<runtime.Types.Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  employee<T extends Prisma.cuti$employeeArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.cuti$employeeArgs<ExtArgs>>): Prisma.Prisma__employeeClient<runtime.Types.Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the cuti model
 */
export interface cutiFieldRefs {
  readonly cuti_id: Prisma.FieldRef<"cuti", 'String'>
  readonly cuti_group_id: Prisma.FieldRef<"cuti", 'String'>
  readonly payroll: Prisma.FieldRef<"cuti", 'String'>
  readonly type: Prisma.FieldRef<"cuti", 'String'>
  readonly description: Prisma.FieldRef<"cuti", 'String'>
  readonly date: Prisma.FieldRef<"cuti", 'DateTime'>
  readonly year: Prisma.FieldRef<"cuti", 'Int'>
  readonly status: Prisma.FieldRef<"cuti", 'cuti_status'>
  readonly approval: Prisma.FieldRef<"cuti", 'String'>
  readonly is_delegate: Prisma.FieldRef<"cuti", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"cuti", 'DateTime'>
}
    

// Custom InputTypes
/**
 * cuti findUnique
 */
export type cutiFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuti
   */
  select?: Prisma.cutiSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuti
   */
  omit?: Prisma.cutiOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cutiInclude<ExtArgs> | null
  /**
   * Filter, which cuti to fetch.
   */
  where: Prisma.cutiWhereUniqueInput
}

/**
 * cuti findUniqueOrThrow
 */
export type cutiFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuti
   */
  select?: Prisma.cutiSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuti
   */
  omit?: Prisma.cutiOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cutiInclude<ExtArgs> | null
  /**
   * Filter, which cuti to fetch.
   */
  where: Prisma.cutiWhereUniqueInput
}

/**
 * cuti findFirst
 */
export type cutiFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuti
   */
  select?: Prisma.cutiSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuti
   */
  omit?: Prisma.cutiOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cutiInclude<ExtArgs> | null
  /**
   * Filter, which cuti to fetch.
   */
  where?: Prisma.cutiWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cutis to fetch.
   */
  orderBy?: Prisma.cutiOrderByWithRelationInput | Prisma.cutiOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for cutis.
   */
  cursor?: Prisma.cutiWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cutis from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cutis.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of cutis.
   */
  distinct?: Prisma.CutiScalarFieldEnum | Prisma.CutiScalarFieldEnum[]
}

/**
 * cuti findFirstOrThrow
 */
export type cutiFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuti
   */
  select?: Prisma.cutiSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuti
   */
  omit?: Prisma.cutiOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cutiInclude<ExtArgs> | null
  /**
   * Filter, which cuti to fetch.
   */
  where?: Prisma.cutiWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cutis to fetch.
   */
  orderBy?: Prisma.cutiOrderByWithRelationInput | Prisma.cutiOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for cutis.
   */
  cursor?: Prisma.cutiWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cutis from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cutis.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of cutis.
   */
  distinct?: Prisma.CutiScalarFieldEnum | Prisma.CutiScalarFieldEnum[]
}

/**
 * cuti findMany
 */
export type cutiFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuti
   */
  select?: Prisma.cutiSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuti
   */
  omit?: Prisma.cutiOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cutiInclude<ExtArgs> | null
  /**
   * Filter, which cutis to fetch.
   */
  where?: Prisma.cutiWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cutis to fetch.
   */
  orderBy?: Prisma.cutiOrderByWithRelationInput | Prisma.cutiOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing cutis.
   */
  cursor?: Prisma.cutiWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cutis from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cutis.
   */
  skip?: number
  distinct?: Prisma.CutiScalarFieldEnum | Prisma.CutiScalarFieldEnum[]
}

/**
 * cuti create
 */
export type cutiCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuti
   */
  select?: Prisma.cutiSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuti
   */
  omit?: Prisma.cutiOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cutiInclude<ExtArgs> | null
  /**
   * The data needed to create a cuti.
   */
  data: Prisma.XOR<Prisma.cutiCreateInput, Prisma.cutiUncheckedCreateInput>
}

/**
 * cuti createMany
 */
export type cutiCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many cutis.
   */
  data: Prisma.cutiCreateManyInput | Prisma.cutiCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * cuti update
 */
export type cutiUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuti
   */
  select?: Prisma.cutiSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuti
   */
  omit?: Prisma.cutiOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cutiInclude<ExtArgs> | null
  /**
   * The data needed to update a cuti.
   */
  data: Prisma.XOR<Prisma.cutiUpdateInput, Prisma.cutiUncheckedUpdateInput>
  /**
   * Choose, which cuti to update.
   */
  where: Prisma.cutiWhereUniqueInput
}

/**
 * cuti updateMany
 */
export type cutiUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update cutis.
   */
  data: Prisma.XOR<Prisma.cutiUpdateManyMutationInput, Prisma.cutiUncheckedUpdateManyInput>
  /**
   * Filter which cutis to update
   */
  where?: Prisma.cutiWhereInput
  /**
   * Limit how many cutis to update.
   */
  limit?: number
}

/**
 * cuti upsert
 */
export type cutiUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuti
   */
  select?: Prisma.cutiSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuti
   */
  omit?: Prisma.cutiOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cutiInclude<ExtArgs> | null
  /**
   * The filter to search for the cuti to update in case it exists.
   */
  where: Prisma.cutiWhereUniqueInput
  /**
   * In case the cuti found by the `where` argument doesn't exist, create a new cuti with this data.
   */
  create: Prisma.XOR<Prisma.cutiCreateInput, Prisma.cutiUncheckedCreateInput>
  /**
   * In case the cuti was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.cutiUpdateInput, Prisma.cutiUncheckedUpdateInput>
}

/**
 * cuti delete
 */
export type cutiDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuti
   */
  select?: Prisma.cutiSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuti
   */
  omit?: Prisma.cutiOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cutiInclude<ExtArgs> | null
  /**
   * Filter which cuti to delete.
   */
  where: Prisma.cutiWhereUniqueInput
}

/**
 * cuti deleteMany
 */
export type cutiDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which cutis to delete
   */
  where?: Prisma.cutiWhereInput
  /**
   * Limit how many cutis to delete.
   */
  limit?: number
}

/**
 * cuti.employee_cuti_approvalToemployee
 */
export type cuti$employee_cuti_approvalToemployeeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the employee
   */
  select?: Prisma.employeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the employee
   */
  omit?: Prisma.employeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.employeeInclude<ExtArgs> | null
  where?: Prisma.employeeWhereInput
}

/**
 * cuti.employee
 */
export type cuti$employeeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the employee
   */
  select?: Prisma.employeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the employee
   */
  omit?: Prisma.employeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.employeeInclude<ExtArgs> | null
  where?: Prisma.employeeWhereInput
}

/**
 * cuti without action
 */
export type cutiDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuti
   */
  select?: Prisma.cutiSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuti
   */
  omit?: Prisma.cutiOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cutiInclude<ExtArgs> | null
}
