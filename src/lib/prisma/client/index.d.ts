
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model employee
 * 
 */
export type employee = $Result.DefaultSelection<Prisma.$employeePayload>
/**
 * Model profile
 * 
 */
export type profile = $Result.DefaultSelection<Prisma.$profilePayload>
/**
 * Model check_io
 * 
 */
export type check_io = $Result.DefaultSelection<Prisma.$check_ioPayload>
/**
 * Model attendance
 * 
 */
export type attendance = $Result.DefaultSelection<Prisma.$attendancePayload>
/**
 * Model temp_check_io
 * 
 */
export type temp_check_io = $Result.DefaultSelection<Prisma.$temp_check_ioPayload>
/**
 * Model calendar
 * 
 */
export type calendar = $Result.DefaultSelection<Prisma.$calendarPayload>
/**
 * Model setting
 * 
 */
export type setting = $Result.DefaultSelection<Prisma.$settingPayload>
/**
 * Model spl
 * 
 */
export type spl = $Result.DefaultSelection<Prisma.$splPayload>
/**
 * Model spl_detail
 * 
 */
export type spl_detail = $Result.DefaultSelection<Prisma.$spl_detailPayload>
/**
 * Model dept
 * 
 */
export type dept = $Result.DefaultSelection<Prisma.$deptPayload>
/**
 * Model srl
 * 
 */
export type srl = $Result.DefaultSelection<Prisma.$srlPayload>
/**
 * Model srl_detail
 * 
 */
export type srl_detail = $Result.DefaultSelection<Prisma.$srl_detailPayload>
/**
 * Model cuti
 * 
 */
export type cuti = $Result.DefaultSelection<Prisma.$cutiPayload>
/**
 * Model sppd
 * 
 */
export type sppd = $Result.DefaultSelection<Prisma.$sppdPayload>
/**
 * Model sppd_detail
 * 
 */
export type sppd_detail = $Result.DefaultSelection<Prisma.$sppd_detailPayload>
/**
 * Model skpd
 * 
 */
export type skpd = $Result.DefaultSelection<Prisma.$skpdPayload>
/**
 * Model ijin
 * 
 */
export type ijin = $Result.DefaultSelection<Prisma.$ijinPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const calendar_type: {
  Hari_Libur: 'Hari_Libur',
  Cuti_Bersama: 'Cuti_Bersama',
  Event_Kantor: 'Event_Kantor'
};

export type calendar_type = (typeof calendar_type)[keyof typeof calendar_type]


export const dept_status: {
  Aktif: 'Aktif',
  Nonaktif: 'Nonaktif'
};

export type dept_status = (typeof dept_status)[keyof typeof dept_status]


export const skpd_status: {
  OPEN: 'OPEN',
  CLOSE: 'CLOSE'
};

export type skpd_status = (typeof skpd_status)[keyof typeof skpd_status]


export const ijin_status: {
  Waiting: 'Waiting',
  Reject: 'Reject',
  Approved: 'Approved',
  Cancelled: 'Cancelled'
};

export type ijin_status = (typeof ijin_status)[keyof typeof ijin_status]


export const cuti_status: {
  Waiting: 'Waiting',
  Reject: 'Reject',
  Approved: 'Approved',
  Cancelled: 'Cancelled'
};

export type cuti_status = (typeof cuti_status)[keyof typeof cuti_status]


export const srl_status1: {
  Waiting: 'Waiting',
  Reject: 'Reject',
  Approved: 'Approved',
  Cancelled: 'Cancelled'
};

export type srl_status1 = (typeof srl_status1)[keyof typeof srl_status1]


export const srl_status2: {
  Waiting: 'Waiting',
  Reject: 'Reject',
  Approved: 'Approved',
  Cancelled: 'Cancelled'
};

export type srl_status2 = (typeof srl_status2)[keyof typeof srl_status2]


export const spl_status1: {
  Waiting: 'Waiting',
  Reject: 'Reject',
  Approved: 'Approved',
  Cancelled: 'Cancelled'
};

export type spl_status1 = (typeof spl_status1)[keyof typeof spl_status1]


export const spl_status2: {
  Waiting: 'Waiting',
  Reject: 'Reject',
  Approved: 'Approved',
  Cancelled: 'Cancelled'
};

export type spl_status2 = (typeof spl_status2)[keyof typeof spl_status2]


export const employee_status: {
  Aktif: 'Aktif',
  Nonaktif: 'Nonaktif'
};

export type employee_status = (typeof employee_status)[keyof typeof employee_status]

}

export type calendar_type = $Enums.calendar_type

export const calendar_type: typeof $Enums.calendar_type

export type dept_status = $Enums.dept_status

export const dept_status: typeof $Enums.dept_status

export type skpd_status = $Enums.skpd_status

export const skpd_status: typeof $Enums.skpd_status

export type ijin_status = $Enums.ijin_status

export const ijin_status: typeof $Enums.ijin_status

export type cuti_status = $Enums.cuti_status

export const cuti_status: typeof $Enums.cuti_status

export type srl_status1 = $Enums.srl_status1

export const srl_status1: typeof $Enums.srl_status1

export type srl_status2 = $Enums.srl_status2

export const srl_status2: typeof $Enums.srl_status2

export type spl_status1 = $Enums.spl_status1

export const spl_status1: typeof $Enums.spl_status1

export type spl_status2 = $Enums.spl_status2

export const spl_status2: typeof $Enums.spl_status2

export type employee_status = $Enums.employee_status

export const employee_status: typeof $Enums.employee_status

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Employees
 * const employees = await prisma.employee.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Employees
   * const employees = await prisma.employee.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.employee`: Exposes CRUD operations for the **employee** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Employees
    * const employees = await prisma.employee.findMany()
    * ```
    */
  get employee(): Prisma.employeeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.profile`: Exposes CRUD operations for the **profile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Profiles
    * const profiles = await prisma.profile.findMany()
    * ```
    */
  get profile(): Prisma.profileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.check_io`: Exposes CRUD operations for the **check_io** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Check_ios
    * const check_ios = await prisma.check_io.findMany()
    * ```
    */
  get check_io(): Prisma.check_ioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.attendance`: Exposes CRUD operations for the **attendance** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Attendances
    * const attendances = await prisma.attendance.findMany()
    * ```
    */
  get attendance(): Prisma.attendanceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.temp_check_io`: Exposes CRUD operations for the **temp_check_io** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Temp_check_ios
    * const temp_check_ios = await prisma.temp_check_io.findMany()
    * ```
    */
  get temp_check_io(): Prisma.temp_check_ioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.calendar`: Exposes CRUD operations for the **calendar** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Calendars
    * const calendars = await prisma.calendar.findMany()
    * ```
    */
  get calendar(): Prisma.calendarDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.setting`: Exposes CRUD operations for the **setting** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Settings
    * const settings = await prisma.setting.findMany()
    * ```
    */
  get setting(): Prisma.settingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.spl`: Exposes CRUD operations for the **spl** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Spls
    * const spls = await prisma.spl.findMany()
    * ```
    */
  get spl(): Prisma.splDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.spl_detail`: Exposes CRUD operations for the **spl_detail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Spl_details
    * const spl_details = await prisma.spl_detail.findMany()
    * ```
    */
  get spl_detail(): Prisma.spl_detailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.dept`: Exposes CRUD operations for the **dept** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Depts
    * const depts = await prisma.dept.findMany()
    * ```
    */
  get dept(): Prisma.deptDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.srl`: Exposes CRUD operations for the **srl** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Srls
    * const srls = await prisma.srl.findMany()
    * ```
    */
  get srl(): Prisma.srlDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.srl_detail`: Exposes CRUD operations for the **srl_detail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Srl_details
    * const srl_details = await prisma.srl_detail.findMany()
    * ```
    */
  get srl_detail(): Prisma.srl_detailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cuti`: Exposes CRUD operations for the **cuti** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cutis
    * const cutis = await prisma.cuti.findMany()
    * ```
    */
  get cuti(): Prisma.cutiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sppd`: Exposes CRUD operations for the **sppd** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sppds
    * const sppds = await prisma.sppd.findMany()
    * ```
    */
  get sppd(): Prisma.sppdDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sppd_detail`: Exposes CRUD operations for the **sppd_detail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sppd_details
    * const sppd_details = await prisma.sppd_detail.findMany()
    * ```
    */
  get sppd_detail(): Prisma.sppd_detailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.skpd`: Exposes CRUD operations for the **skpd** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Skpds
    * const skpds = await prisma.skpd.findMany()
    * ```
    */
  get skpd(): Prisma.skpdDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ijin`: Exposes CRUD operations for the **ijin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ijins
    * const ijins = await prisma.ijin.findMany()
    * ```
    */
  get ijin(): Prisma.ijinDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    employee: 'employee',
    profile: 'profile',
    check_io: 'check_io',
    attendance: 'attendance',
    temp_check_io: 'temp_check_io',
    calendar: 'calendar',
    setting: 'setting',
    spl: 'spl',
    spl_detail: 'spl_detail',
    dept: 'dept',
    srl: 'srl',
    srl_detail: 'srl_detail',
    cuti: 'cuti',
    sppd: 'sppd',
    sppd_detail: 'sppd_detail',
    skpd: 'skpd',
    ijin: 'ijin'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "employee" | "profile" | "check_io" | "attendance" | "temp_check_io" | "calendar" | "setting" | "spl" | "spl_detail" | "dept" | "srl" | "srl_detail" | "cuti" | "sppd" | "sppd_detail" | "skpd" | "ijin"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      employee: {
        payload: Prisma.$employeePayload<ExtArgs>
        fields: Prisma.employeeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.employeeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.employeeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeePayload>
          }
          findFirst: {
            args: Prisma.employeeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.employeeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeePayload>
          }
          findMany: {
            args: Prisma.employeeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeePayload>[]
          }
          create: {
            args: Prisma.employeeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeePayload>
          }
          createMany: {
            args: Prisma.employeeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.employeeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeePayload>
          }
          update: {
            args: Prisma.employeeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeePayload>
          }
          deleteMany: {
            args: Prisma.employeeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.employeeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.employeeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeePayload>
          }
          aggregate: {
            args: Prisma.EmployeeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmployee>
          }
          groupBy: {
            args: Prisma.employeeGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmployeeGroupByOutputType>[]
          }
          count: {
            args: Prisma.employeeCountArgs<ExtArgs>
            result: $Utils.Optional<EmployeeCountAggregateOutputType> | number
          }
        }
      }
      profile: {
        payload: Prisma.$profilePayload<ExtArgs>
        fields: Prisma.profileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.profileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.profileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          findFirst: {
            args: Prisma.profileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.profileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          findMany: {
            args: Prisma.profileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>[]
          }
          create: {
            args: Prisma.profileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          createMany: {
            args: Prisma.profileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.profileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          update: {
            args: Prisma.profileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          deleteMany: {
            args: Prisma.profileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.profileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.profileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          aggregate: {
            args: Prisma.ProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfile>
          }
          groupBy: {
            args: Prisma.profileGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.profileCountArgs<ExtArgs>
            result: $Utils.Optional<ProfileCountAggregateOutputType> | number
          }
        }
      }
      check_io: {
        payload: Prisma.$check_ioPayload<ExtArgs>
        fields: Prisma.check_ioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.check_ioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$check_ioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.check_ioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$check_ioPayload>
          }
          findFirst: {
            args: Prisma.check_ioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$check_ioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.check_ioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$check_ioPayload>
          }
          findMany: {
            args: Prisma.check_ioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$check_ioPayload>[]
          }
          create: {
            args: Prisma.check_ioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$check_ioPayload>
          }
          createMany: {
            args: Prisma.check_ioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.check_ioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$check_ioPayload>
          }
          update: {
            args: Prisma.check_ioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$check_ioPayload>
          }
          deleteMany: {
            args: Prisma.check_ioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.check_ioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.check_ioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$check_ioPayload>
          }
          aggregate: {
            args: Prisma.Check_ioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCheck_io>
          }
          groupBy: {
            args: Prisma.check_ioGroupByArgs<ExtArgs>
            result: $Utils.Optional<Check_ioGroupByOutputType>[]
          }
          count: {
            args: Prisma.check_ioCountArgs<ExtArgs>
            result: $Utils.Optional<Check_ioCountAggregateOutputType> | number
          }
        }
      }
      attendance: {
        payload: Prisma.$attendancePayload<ExtArgs>
        fields: Prisma.attendanceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.attendanceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.attendanceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          findFirst: {
            args: Prisma.attendanceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.attendanceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          findMany: {
            args: Prisma.attendanceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>[]
          }
          create: {
            args: Prisma.attendanceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          createMany: {
            args: Prisma.attendanceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.attendanceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          update: {
            args: Prisma.attendanceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          deleteMany: {
            args: Prisma.attendanceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.attendanceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.attendanceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attendancePayload>
          }
          aggregate: {
            args: Prisma.AttendanceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAttendance>
          }
          groupBy: {
            args: Prisma.attendanceGroupByArgs<ExtArgs>
            result: $Utils.Optional<AttendanceGroupByOutputType>[]
          }
          count: {
            args: Prisma.attendanceCountArgs<ExtArgs>
            result: $Utils.Optional<AttendanceCountAggregateOutputType> | number
          }
        }
      }
      temp_check_io: {
        payload: Prisma.$temp_check_ioPayload<ExtArgs>
        fields: Prisma.temp_check_ioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.temp_check_ioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$temp_check_ioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.temp_check_ioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$temp_check_ioPayload>
          }
          findFirst: {
            args: Prisma.temp_check_ioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$temp_check_ioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.temp_check_ioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$temp_check_ioPayload>
          }
          findMany: {
            args: Prisma.temp_check_ioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$temp_check_ioPayload>[]
          }
          create: {
            args: Prisma.temp_check_ioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$temp_check_ioPayload>
          }
          createMany: {
            args: Prisma.temp_check_ioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.temp_check_ioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$temp_check_ioPayload>
          }
          update: {
            args: Prisma.temp_check_ioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$temp_check_ioPayload>
          }
          deleteMany: {
            args: Prisma.temp_check_ioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.temp_check_ioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.temp_check_ioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$temp_check_ioPayload>
          }
          aggregate: {
            args: Prisma.Temp_check_ioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTemp_check_io>
          }
          groupBy: {
            args: Prisma.temp_check_ioGroupByArgs<ExtArgs>
            result: $Utils.Optional<Temp_check_ioGroupByOutputType>[]
          }
          count: {
            args: Prisma.temp_check_ioCountArgs<ExtArgs>
            result: $Utils.Optional<Temp_check_ioCountAggregateOutputType> | number
          }
        }
      }
      calendar: {
        payload: Prisma.$calendarPayload<ExtArgs>
        fields: Prisma.calendarFieldRefs
        operations: {
          findUnique: {
            args: Prisma.calendarFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$calendarPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.calendarFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$calendarPayload>
          }
          findFirst: {
            args: Prisma.calendarFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$calendarPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.calendarFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$calendarPayload>
          }
          findMany: {
            args: Prisma.calendarFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$calendarPayload>[]
          }
          create: {
            args: Prisma.calendarCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$calendarPayload>
          }
          createMany: {
            args: Prisma.calendarCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.calendarDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$calendarPayload>
          }
          update: {
            args: Prisma.calendarUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$calendarPayload>
          }
          deleteMany: {
            args: Prisma.calendarDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.calendarUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.calendarUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$calendarPayload>
          }
          aggregate: {
            args: Prisma.CalendarAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCalendar>
          }
          groupBy: {
            args: Prisma.calendarGroupByArgs<ExtArgs>
            result: $Utils.Optional<CalendarGroupByOutputType>[]
          }
          count: {
            args: Prisma.calendarCountArgs<ExtArgs>
            result: $Utils.Optional<CalendarCountAggregateOutputType> | number
          }
        }
      }
      setting: {
        payload: Prisma.$settingPayload<ExtArgs>
        fields: Prisma.settingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.settingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.settingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingPayload>
          }
          findFirst: {
            args: Prisma.settingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.settingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingPayload>
          }
          findMany: {
            args: Prisma.settingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingPayload>[]
          }
          create: {
            args: Prisma.settingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingPayload>
          }
          createMany: {
            args: Prisma.settingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.settingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingPayload>
          }
          update: {
            args: Prisma.settingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingPayload>
          }
          deleteMany: {
            args: Prisma.settingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.settingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.settingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingPayload>
          }
          aggregate: {
            args: Prisma.SettingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSetting>
          }
          groupBy: {
            args: Prisma.settingGroupByArgs<ExtArgs>
            result: $Utils.Optional<SettingGroupByOutputType>[]
          }
          count: {
            args: Prisma.settingCountArgs<ExtArgs>
            result: $Utils.Optional<SettingCountAggregateOutputType> | number
          }
        }
      }
      spl: {
        payload: Prisma.$splPayload<ExtArgs>
        fields: Prisma.splFieldRefs
        operations: {
          findUnique: {
            args: Prisma.splFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$splPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.splFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$splPayload>
          }
          findFirst: {
            args: Prisma.splFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$splPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.splFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$splPayload>
          }
          findMany: {
            args: Prisma.splFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$splPayload>[]
          }
          create: {
            args: Prisma.splCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$splPayload>
          }
          createMany: {
            args: Prisma.splCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.splDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$splPayload>
          }
          update: {
            args: Prisma.splUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$splPayload>
          }
          deleteMany: {
            args: Prisma.splDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.splUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.splUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$splPayload>
          }
          aggregate: {
            args: Prisma.SplAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSpl>
          }
          groupBy: {
            args: Prisma.splGroupByArgs<ExtArgs>
            result: $Utils.Optional<SplGroupByOutputType>[]
          }
          count: {
            args: Prisma.splCountArgs<ExtArgs>
            result: $Utils.Optional<SplCountAggregateOutputType> | number
          }
        }
      }
      spl_detail: {
        payload: Prisma.$spl_detailPayload<ExtArgs>
        fields: Prisma.spl_detailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.spl_detailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spl_detailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.spl_detailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spl_detailPayload>
          }
          findFirst: {
            args: Prisma.spl_detailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spl_detailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.spl_detailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spl_detailPayload>
          }
          findMany: {
            args: Prisma.spl_detailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spl_detailPayload>[]
          }
          create: {
            args: Prisma.spl_detailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spl_detailPayload>
          }
          createMany: {
            args: Prisma.spl_detailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.spl_detailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spl_detailPayload>
          }
          update: {
            args: Prisma.spl_detailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spl_detailPayload>
          }
          deleteMany: {
            args: Prisma.spl_detailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.spl_detailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.spl_detailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spl_detailPayload>
          }
          aggregate: {
            args: Prisma.Spl_detailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSpl_detail>
          }
          groupBy: {
            args: Prisma.spl_detailGroupByArgs<ExtArgs>
            result: $Utils.Optional<Spl_detailGroupByOutputType>[]
          }
          count: {
            args: Prisma.spl_detailCountArgs<ExtArgs>
            result: $Utils.Optional<Spl_detailCountAggregateOutputType> | number
          }
        }
      }
      dept: {
        payload: Prisma.$deptPayload<ExtArgs>
        fields: Prisma.deptFieldRefs
        operations: {
          findUnique: {
            args: Prisma.deptFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deptPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.deptFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deptPayload>
          }
          findFirst: {
            args: Prisma.deptFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deptPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.deptFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deptPayload>
          }
          findMany: {
            args: Prisma.deptFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deptPayload>[]
          }
          create: {
            args: Prisma.deptCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deptPayload>
          }
          createMany: {
            args: Prisma.deptCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.deptDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deptPayload>
          }
          update: {
            args: Prisma.deptUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deptPayload>
          }
          deleteMany: {
            args: Prisma.deptDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.deptUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.deptUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deptPayload>
          }
          aggregate: {
            args: Prisma.DeptAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDept>
          }
          groupBy: {
            args: Prisma.deptGroupByArgs<ExtArgs>
            result: $Utils.Optional<DeptGroupByOutputType>[]
          }
          count: {
            args: Prisma.deptCountArgs<ExtArgs>
            result: $Utils.Optional<DeptCountAggregateOutputType> | number
          }
        }
      }
      srl: {
        payload: Prisma.$srlPayload<ExtArgs>
        fields: Prisma.srlFieldRefs
        operations: {
          findUnique: {
            args: Prisma.srlFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srlPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.srlFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srlPayload>
          }
          findFirst: {
            args: Prisma.srlFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srlPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.srlFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srlPayload>
          }
          findMany: {
            args: Prisma.srlFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srlPayload>[]
          }
          create: {
            args: Prisma.srlCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srlPayload>
          }
          createMany: {
            args: Prisma.srlCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.srlDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srlPayload>
          }
          update: {
            args: Prisma.srlUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srlPayload>
          }
          deleteMany: {
            args: Prisma.srlDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.srlUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.srlUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srlPayload>
          }
          aggregate: {
            args: Prisma.SrlAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSrl>
          }
          groupBy: {
            args: Prisma.srlGroupByArgs<ExtArgs>
            result: $Utils.Optional<SrlGroupByOutputType>[]
          }
          count: {
            args: Prisma.srlCountArgs<ExtArgs>
            result: $Utils.Optional<SrlCountAggregateOutputType> | number
          }
        }
      }
      srl_detail: {
        payload: Prisma.$srl_detailPayload<ExtArgs>
        fields: Prisma.srl_detailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.srl_detailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srl_detailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.srl_detailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srl_detailPayload>
          }
          findFirst: {
            args: Prisma.srl_detailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srl_detailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.srl_detailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srl_detailPayload>
          }
          findMany: {
            args: Prisma.srl_detailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srl_detailPayload>[]
          }
          create: {
            args: Prisma.srl_detailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srl_detailPayload>
          }
          createMany: {
            args: Prisma.srl_detailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.srl_detailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srl_detailPayload>
          }
          update: {
            args: Prisma.srl_detailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srl_detailPayload>
          }
          deleteMany: {
            args: Prisma.srl_detailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.srl_detailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.srl_detailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$srl_detailPayload>
          }
          aggregate: {
            args: Prisma.Srl_detailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSrl_detail>
          }
          groupBy: {
            args: Prisma.srl_detailGroupByArgs<ExtArgs>
            result: $Utils.Optional<Srl_detailGroupByOutputType>[]
          }
          count: {
            args: Prisma.srl_detailCountArgs<ExtArgs>
            result: $Utils.Optional<Srl_detailCountAggregateOutputType> | number
          }
        }
      }
      cuti: {
        payload: Prisma.$cutiPayload<ExtArgs>
        fields: Prisma.cutiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cutiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cutiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cutiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cutiPayload>
          }
          findFirst: {
            args: Prisma.cutiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cutiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cutiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cutiPayload>
          }
          findMany: {
            args: Prisma.cutiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cutiPayload>[]
          }
          create: {
            args: Prisma.cutiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cutiPayload>
          }
          createMany: {
            args: Prisma.cutiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.cutiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cutiPayload>
          }
          update: {
            args: Prisma.cutiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cutiPayload>
          }
          deleteMany: {
            args: Prisma.cutiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cutiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.cutiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cutiPayload>
          }
          aggregate: {
            args: Prisma.CutiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCuti>
          }
          groupBy: {
            args: Prisma.cutiGroupByArgs<ExtArgs>
            result: $Utils.Optional<CutiGroupByOutputType>[]
          }
          count: {
            args: Prisma.cutiCountArgs<ExtArgs>
            result: $Utils.Optional<CutiCountAggregateOutputType> | number
          }
        }
      }
      sppd: {
        payload: Prisma.$sppdPayload<ExtArgs>
        fields: Prisma.sppdFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sppdFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppdPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sppdFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppdPayload>
          }
          findFirst: {
            args: Prisma.sppdFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppdPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sppdFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppdPayload>
          }
          findMany: {
            args: Prisma.sppdFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppdPayload>[]
          }
          create: {
            args: Prisma.sppdCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppdPayload>
          }
          createMany: {
            args: Prisma.sppdCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sppdDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppdPayload>
          }
          update: {
            args: Prisma.sppdUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppdPayload>
          }
          deleteMany: {
            args: Prisma.sppdDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sppdUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sppdUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppdPayload>
          }
          aggregate: {
            args: Prisma.SppdAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSppd>
          }
          groupBy: {
            args: Prisma.sppdGroupByArgs<ExtArgs>
            result: $Utils.Optional<SppdGroupByOutputType>[]
          }
          count: {
            args: Prisma.sppdCountArgs<ExtArgs>
            result: $Utils.Optional<SppdCountAggregateOutputType> | number
          }
        }
      }
      sppd_detail: {
        payload: Prisma.$sppd_detailPayload<ExtArgs>
        fields: Prisma.sppd_detailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sppd_detailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppd_detailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sppd_detailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppd_detailPayload>
          }
          findFirst: {
            args: Prisma.sppd_detailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppd_detailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sppd_detailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppd_detailPayload>
          }
          findMany: {
            args: Prisma.sppd_detailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppd_detailPayload>[]
          }
          create: {
            args: Prisma.sppd_detailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppd_detailPayload>
          }
          createMany: {
            args: Prisma.sppd_detailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sppd_detailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppd_detailPayload>
          }
          update: {
            args: Prisma.sppd_detailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppd_detailPayload>
          }
          deleteMany: {
            args: Prisma.sppd_detailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sppd_detailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sppd_detailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sppd_detailPayload>
          }
          aggregate: {
            args: Prisma.Sppd_detailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSppd_detail>
          }
          groupBy: {
            args: Prisma.sppd_detailGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sppd_detailGroupByOutputType>[]
          }
          count: {
            args: Prisma.sppd_detailCountArgs<ExtArgs>
            result: $Utils.Optional<Sppd_detailCountAggregateOutputType> | number
          }
        }
      }
      skpd: {
        payload: Prisma.$skpdPayload<ExtArgs>
        fields: Prisma.skpdFieldRefs
        operations: {
          findUnique: {
            args: Prisma.skpdFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skpdPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.skpdFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skpdPayload>
          }
          findFirst: {
            args: Prisma.skpdFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skpdPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.skpdFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skpdPayload>
          }
          findMany: {
            args: Prisma.skpdFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skpdPayload>[]
          }
          create: {
            args: Prisma.skpdCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skpdPayload>
          }
          createMany: {
            args: Prisma.skpdCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.skpdDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skpdPayload>
          }
          update: {
            args: Prisma.skpdUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skpdPayload>
          }
          deleteMany: {
            args: Prisma.skpdDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.skpdUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.skpdUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$skpdPayload>
          }
          aggregate: {
            args: Prisma.SkpdAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSkpd>
          }
          groupBy: {
            args: Prisma.skpdGroupByArgs<ExtArgs>
            result: $Utils.Optional<SkpdGroupByOutputType>[]
          }
          count: {
            args: Prisma.skpdCountArgs<ExtArgs>
            result: $Utils.Optional<SkpdCountAggregateOutputType> | number
          }
        }
      }
      ijin: {
        payload: Prisma.$ijinPayload<ExtArgs>
        fields: Prisma.ijinFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ijinFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ijinPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ijinFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ijinPayload>
          }
          findFirst: {
            args: Prisma.ijinFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ijinPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ijinFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ijinPayload>
          }
          findMany: {
            args: Prisma.ijinFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ijinPayload>[]
          }
          create: {
            args: Prisma.ijinCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ijinPayload>
          }
          createMany: {
            args: Prisma.ijinCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ijinDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ijinPayload>
          }
          update: {
            args: Prisma.ijinUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ijinPayload>
          }
          deleteMany: {
            args: Prisma.ijinDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ijinUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ijinUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ijinPayload>
          }
          aggregate: {
            args: Prisma.IjinAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIjin>
          }
          groupBy: {
            args: Prisma.ijinGroupByArgs<ExtArgs>
            result: $Utils.Optional<IjinGroupByOutputType>[]
          }
          count: {
            args: Prisma.ijinCountArgs<ExtArgs>
            result: $Utils.Optional<IjinCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    employee?: employeeOmit
    profile?: profileOmit
    check_io?: check_ioOmit
    attendance?: attendanceOmit
    temp_check_io?: temp_check_ioOmit
    calendar?: calendarOmit
    setting?: settingOmit
    spl?: splOmit
    spl_detail?: spl_detailOmit
    dept?: deptOmit
    srl?: srlOmit
    srl_detail?: srl_detailOmit
    cuti?: cutiOmit
    sppd?: sppdOmit
    sppd_detail?: sppd_detailOmit
    skpd?: skpdOmit
    ijin?: ijinOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type EmployeeCountOutputType
   */

  export type EmployeeCountOutputType = {
    attendance_attendance_createdByToemployee: number
    attendance_attendance_user_id_machineToemployee: number
    check_io: number
    cuti_cuti_approvalToemployee: number
    cuti: number
    other_employee_employee_approverToemployee: number
    other_employee_employee_substituteToemployee: number
    ijin_ijin_approvalToemployee: number
    ijin: number
    skpd_skpd_createdByToemployee: number
    skpd_skpd_payrollToemployee: number
    spl_spl_approval1Toemployee: number
    spl_spl_approval2Toemployee: number
    spl_detail: number
    sppd: number
    sppd_detail: number
    srl_srl_approval1Toemployee: number
    srl_srl_approval2Toemployee: number
    srl: number
  }

  export type EmployeeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    attendance_attendance_createdByToemployee?: boolean | EmployeeCountOutputTypeCountAttendance_attendance_createdByToemployeeArgs
    attendance_attendance_user_id_machineToemployee?: boolean | EmployeeCountOutputTypeCountAttendance_attendance_user_id_machineToemployeeArgs
    check_io?: boolean | EmployeeCountOutputTypeCountCheck_ioArgs
    cuti_cuti_approvalToemployee?: boolean | EmployeeCountOutputTypeCountCuti_cuti_approvalToemployeeArgs
    cuti?: boolean | EmployeeCountOutputTypeCountCutiArgs
    other_employee_employee_approverToemployee?: boolean | EmployeeCountOutputTypeCountOther_employee_employee_approverToemployeeArgs
    other_employee_employee_substituteToemployee?: boolean | EmployeeCountOutputTypeCountOther_employee_employee_substituteToemployeeArgs
    ijin_ijin_approvalToemployee?: boolean | EmployeeCountOutputTypeCountIjin_ijin_approvalToemployeeArgs
    ijin?: boolean | EmployeeCountOutputTypeCountIjinArgs
    skpd_skpd_createdByToemployee?: boolean | EmployeeCountOutputTypeCountSkpd_skpd_createdByToemployeeArgs
    skpd_skpd_payrollToemployee?: boolean | EmployeeCountOutputTypeCountSkpd_skpd_payrollToemployeeArgs
    spl_spl_approval1Toemployee?: boolean | EmployeeCountOutputTypeCountSpl_spl_approval1ToemployeeArgs
    spl_spl_approval2Toemployee?: boolean | EmployeeCountOutputTypeCountSpl_spl_approval2ToemployeeArgs
    spl_detail?: boolean | EmployeeCountOutputTypeCountSpl_detailArgs
    sppd?: boolean | EmployeeCountOutputTypeCountSppdArgs
    sppd_detail?: boolean | EmployeeCountOutputTypeCountSppd_detailArgs
    srl_srl_approval1Toemployee?: boolean | EmployeeCountOutputTypeCountSrl_srl_approval1ToemployeeArgs
    srl_srl_approval2Toemployee?: boolean | EmployeeCountOutputTypeCountSrl_srl_approval2ToemployeeArgs
    srl?: boolean | EmployeeCountOutputTypeCountSrlArgs
  }

  // Custom InputTypes
  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCountOutputType
     */
    select?: EmployeeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountAttendance_attendance_createdByToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: attendanceWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountAttendance_attendance_user_id_machineToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: attendanceWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountCheck_ioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: check_ioWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountCuti_cuti_approvalToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cutiWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountCutiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cutiWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountOther_employee_employee_approverToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: employeeWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountOther_employee_employee_substituteToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: employeeWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountIjin_ijin_approvalToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ijinWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountIjinArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ijinWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountSkpd_skpd_createdByToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: skpdWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountSkpd_skpd_payrollToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: skpdWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountSpl_spl_approval1ToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: splWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountSpl_spl_approval2ToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: splWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountSpl_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: spl_detailWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountSppdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sppdWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountSppd_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sppd_detailWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountSrl_srl_approval1ToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: srlWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountSrl_srl_approval2ToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: srlWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountSrlArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: srlWhereInput
  }


  /**
   * Count Type ProfileCountOutputType
   */

  export type ProfileCountOutputType = {
    employee: number
  }

  export type ProfileCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | ProfileCountOutputTypeCountEmployeeArgs
  }

  // Custom InputTypes
  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfileCountOutputType
     */
    select?: ProfileCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountEmployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: employeeWhereInput
  }


  /**
   * Count Type SplCountOutputType
   */

  export type SplCountOutputType = {
    spl_detail: number
    srl: number
  }

  export type SplCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spl_detail?: boolean | SplCountOutputTypeCountSpl_detailArgs
    srl?: boolean | SplCountOutputTypeCountSrlArgs
  }

  // Custom InputTypes
  /**
   * SplCountOutputType without action
   */
  export type SplCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SplCountOutputType
     */
    select?: SplCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SplCountOutputType without action
   */
  export type SplCountOutputTypeCountSpl_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: spl_detailWhereInput
  }

  /**
   * SplCountOutputType without action
   */
  export type SplCountOutputTypeCountSrlArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: srlWhereInput
  }


  /**
   * Count Type DeptCountOutputType
   */

  export type DeptCountOutputType = {
    employee: number
    sppd_sppd_deptTodept: number
  }

  export type DeptCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | DeptCountOutputTypeCountEmployeeArgs
    sppd_sppd_deptTodept?: boolean | DeptCountOutputTypeCountSppd_sppd_deptTodeptArgs
  }

  // Custom InputTypes
  /**
   * DeptCountOutputType without action
   */
  export type DeptCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeptCountOutputType
     */
    select?: DeptCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DeptCountOutputType without action
   */
  export type DeptCountOutputTypeCountEmployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: employeeWhereInput
  }

  /**
   * DeptCountOutputType without action
   */
  export type DeptCountOutputTypeCountSppd_sppd_deptTodeptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sppdWhereInput
  }


  /**
   * Count Type SrlCountOutputType
   */

  export type SrlCountOutputType = {
    srl_detail: number
  }

  export type SrlCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    srl_detail?: boolean | SrlCountOutputTypeCountSrl_detailArgs
  }

  // Custom InputTypes
  /**
   * SrlCountOutputType without action
   */
  export type SrlCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SrlCountOutputType
     */
    select?: SrlCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SrlCountOutputType without action
   */
  export type SrlCountOutputTypeCountSrl_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: srl_detailWhereInput
  }


  /**
   * Count Type SppdCountOutputType
   */

  export type SppdCountOutputType = {
    skpd: number
    sppd_detail: number
  }

  export type SppdCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    skpd?: boolean | SppdCountOutputTypeCountSkpdArgs
    sppd_detail?: boolean | SppdCountOutputTypeCountSppd_detailArgs
  }

  // Custom InputTypes
  /**
   * SppdCountOutputType without action
   */
  export type SppdCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SppdCountOutputType
     */
    select?: SppdCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SppdCountOutputType without action
   */
  export type SppdCountOutputTypeCountSkpdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: skpdWhereInput
  }

  /**
   * SppdCountOutputType without action
   */
  export type SppdCountOutputTypeCountSppd_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sppd_detailWhereInput
  }


  /**
   * Models
   */

  /**
   * Model employee
   */

  export type AggregateEmployee = {
    _count: EmployeeCountAggregateOutputType | null
    _avg: EmployeeAvgAggregateOutputType | null
    _sum: EmployeeSumAggregateOutputType | null
    _min: EmployeeMinAggregateOutputType | null
    _max: EmployeeMaxAggregateOutputType | null
  }

  export type EmployeeAvgAggregateOutputType = {
    workhour: number | null
  }

  export type EmployeeSumAggregateOutputType = {
    workhour: number | null
  }

  export type EmployeeMinAggregateOutputType = {
    payroll: string | null
    user_id_machine: string | null
    profile_id: string | null
    email: string | null
    name: string | null
    password: string | null
    position: string | null
    department: string | null
    location: string | null
    phone: string | null
    workhour: number | null
    approver: string | null
    substitute: string | null
    join_date: Date | null
    signature: string | null
    status: $Enums.employee_status | null
  }

  export type EmployeeMaxAggregateOutputType = {
    payroll: string | null
    user_id_machine: string | null
    profile_id: string | null
    email: string | null
    name: string | null
    password: string | null
    position: string | null
    department: string | null
    location: string | null
    phone: string | null
    workhour: number | null
    approver: string | null
    substitute: string | null
    join_date: Date | null
    signature: string | null
    status: $Enums.employee_status | null
  }

  export type EmployeeCountAggregateOutputType = {
    payroll: number
    user_id_machine: number
    profile_id: number
    email: number
    name: number
    password: number
    position: number
    department: number
    location: number
    phone: number
    workhour: number
    approver: number
    substitute: number
    join_date: number
    signature: number
    status: number
    _all: number
  }


  export type EmployeeAvgAggregateInputType = {
    workhour?: true
  }

  export type EmployeeSumAggregateInputType = {
    workhour?: true
  }

  export type EmployeeMinAggregateInputType = {
    payroll?: true
    user_id_machine?: true
    profile_id?: true
    email?: true
    name?: true
    password?: true
    position?: true
    department?: true
    location?: true
    phone?: true
    workhour?: true
    approver?: true
    substitute?: true
    join_date?: true
    signature?: true
    status?: true
  }

  export type EmployeeMaxAggregateInputType = {
    payroll?: true
    user_id_machine?: true
    profile_id?: true
    email?: true
    name?: true
    password?: true
    position?: true
    department?: true
    location?: true
    phone?: true
    workhour?: true
    approver?: true
    substitute?: true
    join_date?: true
    signature?: true
    status?: true
  }

  export type EmployeeCountAggregateInputType = {
    payroll?: true
    user_id_machine?: true
    profile_id?: true
    email?: true
    name?: true
    password?: true
    position?: true
    department?: true
    location?: true
    phone?: true
    workhour?: true
    approver?: true
    substitute?: true
    join_date?: true
    signature?: true
    status?: true
    _all?: true
  }

  export type EmployeeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which employee to aggregate.
     */
    where?: employeeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employees to fetch.
     */
    orderBy?: employeeOrderByWithRelationInput | employeeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: employeeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned employees
    **/
    _count?: true | EmployeeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmployeeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmployeeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmployeeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmployeeMaxAggregateInputType
  }

  export type GetEmployeeAggregateType<T extends EmployeeAggregateArgs> = {
        [P in keyof T & keyof AggregateEmployee]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmployee[P]>
      : GetScalarType<T[P], AggregateEmployee[P]>
  }




  export type employeeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: employeeWhereInput
    orderBy?: employeeOrderByWithAggregationInput | employeeOrderByWithAggregationInput[]
    by: EmployeeScalarFieldEnum[] | EmployeeScalarFieldEnum
    having?: employeeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmployeeCountAggregateInputType | true
    _avg?: EmployeeAvgAggregateInputType
    _sum?: EmployeeSumAggregateInputType
    _min?: EmployeeMinAggregateInputType
    _max?: EmployeeMaxAggregateInputType
  }

  export type EmployeeGroupByOutputType = {
    payroll: string
    user_id_machine: string
    profile_id: string | null
    email: string
    name: string
    password: string
    position: string
    department: string | null
    location: string
    phone: string
    workhour: number
    approver: string | null
    substitute: string | null
    join_date: Date
    signature: string
    status: $Enums.employee_status
    _count: EmployeeCountAggregateOutputType | null
    _avg: EmployeeAvgAggregateOutputType | null
    _sum: EmployeeSumAggregateOutputType | null
    _min: EmployeeMinAggregateOutputType | null
    _max: EmployeeMaxAggregateOutputType | null
  }

  type GetEmployeeGroupByPayload<T extends employeeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmployeeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmployeeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmployeeGroupByOutputType[P]>
            : GetScalarType<T[P], EmployeeGroupByOutputType[P]>
        }
      >
    >


  export type employeeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    payroll?: boolean
    user_id_machine?: boolean
    profile_id?: boolean
    email?: boolean
    name?: boolean
    password?: boolean
    position?: boolean
    department?: boolean
    location?: boolean
    phone?: boolean
    workhour?: boolean
    approver?: boolean
    substitute?: boolean
    join_date?: boolean
    signature?: boolean
    status?: boolean
    attendance_attendance_createdByToemployee?: boolean | employee$attendance_attendance_createdByToemployeeArgs<ExtArgs>
    attendance_attendance_user_id_machineToemployee?: boolean | employee$attendance_attendance_user_id_machineToemployeeArgs<ExtArgs>
    check_io?: boolean | employee$check_ioArgs<ExtArgs>
    cuti_cuti_approvalToemployee?: boolean | employee$cuti_cuti_approvalToemployeeArgs<ExtArgs>
    cuti?: boolean | employee$cutiArgs<ExtArgs>
    profile?: boolean | employee$profileArgs<ExtArgs>
    employee_employee_approverToemployee?: boolean | employee$employee_employee_approverToemployeeArgs<ExtArgs>
    other_employee_employee_approverToemployee?: boolean | employee$other_employee_employee_approverToemployeeArgs<ExtArgs>
    dept?: boolean | employee$deptArgs<ExtArgs>
    employee_employee_substituteToemployee?: boolean | employee$employee_employee_substituteToemployeeArgs<ExtArgs>
    other_employee_employee_substituteToemployee?: boolean | employee$other_employee_employee_substituteToemployeeArgs<ExtArgs>
    ijin_ijin_approvalToemployee?: boolean | employee$ijin_ijin_approvalToemployeeArgs<ExtArgs>
    ijin?: boolean | employee$ijinArgs<ExtArgs>
    skpd_skpd_createdByToemployee?: boolean | employee$skpd_skpd_createdByToemployeeArgs<ExtArgs>
    skpd_skpd_payrollToemployee?: boolean | employee$skpd_skpd_payrollToemployeeArgs<ExtArgs>
    spl_spl_approval1Toemployee?: boolean | employee$spl_spl_approval1ToemployeeArgs<ExtArgs>
    spl_spl_approval2Toemployee?: boolean | employee$spl_spl_approval2ToemployeeArgs<ExtArgs>
    spl_detail?: boolean | employee$spl_detailArgs<ExtArgs>
    sppd?: boolean | employee$sppdArgs<ExtArgs>
    sppd_detail?: boolean | employee$sppd_detailArgs<ExtArgs>
    srl_srl_approval1Toemployee?: boolean | employee$srl_srl_approval1ToemployeeArgs<ExtArgs>
    srl_srl_approval2Toemployee?: boolean | employee$srl_srl_approval2ToemployeeArgs<ExtArgs>
    srl?: boolean | employee$srlArgs<ExtArgs>
    _count?: boolean | EmployeeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employee"]>



  export type employeeSelectScalar = {
    payroll?: boolean
    user_id_machine?: boolean
    profile_id?: boolean
    email?: boolean
    name?: boolean
    password?: boolean
    position?: boolean
    department?: boolean
    location?: boolean
    phone?: boolean
    workhour?: boolean
    approver?: boolean
    substitute?: boolean
    join_date?: boolean
    signature?: boolean
    status?: boolean
  }

  export type employeeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"payroll" | "user_id_machine" | "profile_id" | "email" | "name" | "password" | "position" | "department" | "location" | "phone" | "workhour" | "approver" | "substitute" | "join_date" | "signature" | "status", ExtArgs["result"]["employee"]>
  export type employeeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    attendance_attendance_createdByToemployee?: boolean | employee$attendance_attendance_createdByToemployeeArgs<ExtArgs>
    attendance_attendance_user_id_machineToemployee?: boolean | employee$attendance_attendance_user_id_machineToemployeeArgs<ExtArgs>
    check_io?: boolean | employee$check_ioArgs<ExtArgs>
    cuti_cuti_approvalToemployee?: boolean | employee$cuti_cuti_approvalToemployeeArgs<ExtArgs>
    cuti?: boolean | employee$cutiArgs<ExtArgs>
    profile?: boolean | employee$profileArgs<ExtArgs>
    employee_employee_approverToemployee?: boolean | employee$employee_employee_approverToemployeeArgs<ExtArgs>
    other_employee_employee_approverToemployee?: boolean | employee$other_employee_employee_approverToemployeeArgs<ExtArgs>
    dept?: boolean | employee$deptArgs<ExtArgs>
    employee_employee_substituteToemployee?: boolean | employee$employee_employee_substituteToemployeeArgs<ExtArgs>
    other_employee_employee_substituteToemployee?: boolean | employee$other_employee_employee_substituteToemployeeArgs<ExtArgs>
    ijin_ijin_approvalToemployee?: boolean | employee$ijin_ijin_approvalToemployeeArgs<ExtArgs>
    ijin?: boolean | employee$ijinArgs<ExtArgs>
    skpd_skpd_createdByToemployee?: boolean | employee$skpd_skpd_createdByToemployeeArgs<ExtArgs>
    skpd_skpd_payrollToemployee?: boolean | employee$skpd_skpd_payrollToemployeeArgs<ExtArgs>
    spl_spl_approval1Toemployee?: boolean | employee$spl_spl_approval1ToemployeeArgs<ExtArgs>
    spl_spl_approval2Toemployee?: boolean | employee$spl_spl_approval2ToemployeeArgs<ExtArgs>
    spl_detail?: boolean | employee$spl_detailArgs<ExtArgs>
    sppd?: boolean | employee$sppdArgs<ExtArgs>
    sppd_detail?: boolean | employee$sppd_detailArgs<ExtArgs>
    srl_srl_approval1Toemployee?: boolean | employee$srl_srl_approval1ToemployeeArgs<ExtArgs>
    srl_srl_approval2Toemployee?: boolean | employee$srl_srl_approval2ToemployeeArgs<ExtArgs>
    srl?: boolean | employee$srlArgs<ExtArgs>
    _count?: boolean | EmployeeCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $employeePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "employee"
    objects: {
      attendance_attendance_createdByToemployee: Prisma.$attendancePayload<ExtArgs>[]
      attendance_attendance_user_id_machineToemployee: Prisma.$attendancePayload<ExtArgs>[]
      check_io: Prisma.$check_ioPayload<ExtArgs>[]
      cuti_cuti_approvalToemployee: Prisma.$cutiPayload<ExtArgs>[]
      cuti: Prisma.$cutiPayload<ExtArgs>[]
      profile: Prisma.$profilePayload<ExtArgs> | null
      employee_employee_approverToemployee: Prisma.$employeePayload<ExtArgs> | null
      other_employee_employee_approverToemployee: Prisma.$employeePayload<ExtArgs>[]
      dept: Prisma.$deptPayload<ExtArgs> | null
      employee_employee_substituteToemployee: Prisma.$employeePayload<ExtArgs> | null
      other_employee_employee_substituteToemployee: Prisma.$employeePayload<ExtArgs>[]
      ijin_ijin_approvalToemployee: Prisma.$ijinPayload<ExtArgs>[]
      ijin: Prisma.$ijinPayload<ExtArgs>[]
      skpd_skpd_createdByToemployee: Prisma.$skpdPayload<ExtArgs>[]
      skpd_skpd_payrollToemployee: Prisma.$skpdPayload<ExtArgs>[]
      spl_spl_approval1Toemployee: Prisma.$splPayload<ExtArgs>[]
      spl_spl_approval2Toemployee: Prisma.$splPayload<ExtArgs>[]
      spl_detail: Prisma.$spl_detailPayload<ExtArgs>[]
      sppd: Prisma.$sppdPayload<ExtArgs>[]
      sppd_detail: Prisma.$sppd_detailPayload<ExtArgs>[]
      srl_srl_approval1Toemployee: Prisma.$srlPayload<ExtArgs>[]
      srl_srl_approval2Toemployee: Prisma.$srlPayload<ExtArgs>[]
      srl: Prisma.$srlPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      payroll: string
      user_id_machine: string
      profile_id: string | null
      email: string
      name: string
      password: string
      position: string
      department: string | null
      location: string
      phone: string
      workhour: number
      approver: string | null
      substitute: string | null
      join_date: Date
      signature: string
      status: $Enums.employee_status
    }, ExtArgs["result"]["employee"]>
    composites: {}
  }

  type employeeGetPayload<S extends boolean | null | undefined | employeeDefaultArgs> = $Result.GetResult<Prisma.$employeePayload, S>

  type employeeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<employeeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmployeeCountAggregateInputType | true
    }

  export interface employeeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['employee'], meta: { name: 'employee' } }
    /**
     * Find zero or one Employee that matches the filter.
     * @param {employeeFindUniqueArgs} args - Arguments to find a Employee
     * @example
     * // Get one Employee
     * const employee = await prisma.employee.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends employeeFindUniqueArgs>(args: SelectSubset<T, employeeFindUniqueArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Employee that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {employeeFindUniqueOrThrowArgs} args - Arguments to find a Employee
     * @example
     * // Get one Employee
     * const employee = await prisma.employee.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends employeeFindUniqueOrThrowArgs>(args: SelectSubset<T, employeeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Employee that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeeFindFirstArgs} args - Arguments to find a Employee
     * @example
     * // Get one Employee
     * const employee = await prisma.employee.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends employeeFindFirstArgs>(args?: SelectSubset<T, employeeFindFirstArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Employee that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeeFindFirstOrThrowArgs} args - Arguments to find a Employee
     * @example
     * // Get one Employee
     * const employee = await prisma.employee.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends employeeFindFirstOrThrowArgs>(args?: SelectSubset<T, employeeFindFirstOrThrowArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Employees that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Employees
     * const employees = await prisma.employee.findMany()
     * 
     * // Get first 10 Employees
     * const employees = await prisma.employee.findMany({ take: 10 })
     * 
     * // Only select the `payroll`
     * const employeeWithPayrollOnly = await prisma.employee.findMany({ select: { payroll: true } })
     * 
     */
    findMany<T extends employeeFindManyArgs>(args?: SelectSubset<T, employeeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Employee.
     * @param {employeeCreateArgs} args - Arguments to create a Employee.
     * @example
     * // Create one Employee
     * const Employee = await prisma.employee.create({
     *   data: {
     *     // ... data to create a Employee
     *   }
     * })
     * 
     */
    create<T extends employeeCreateArgs>(args: SelectSubset<T, employeeCreateArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Employees.
     * @param {employeeCreateManyArgs} args - Arguments to create many Employees.
     * @example
     * // Create many Employees
     * const employee = await prisma.employee.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends employeeCreateManyArgs>(args?: SelectSubset<T, employeeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Employee.
     * @param {employeeDeleteArgs} args - Arguments to delete one Employee.
     * @example
     * // Delete one Employee
     * const Employee = await prisma.employee.delete({
     *   where: {
     *     // ... filter to delete one Employee
     *   }
     * })
     * 
     */
    delete<T extends employeeDeleteArgs>(args: SelectSubset<T, employeeDeleteArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Employee.
     * @param {employeeUpdateArgs} args - Arguments to update one Employee.
     * @example
     * // Update one Employee
     * const employee = await prisma.employee.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends employeeUpdateArgs>(args: SelectSubset<T, employeeUpdateArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Employees.
     * @param {employeeDeleteManyArgs} args - Arguments to filter Employees to delete.
     * @example
     * // Delete a few Employees
     * const { count } = await prisma.employee.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends employeeDeleteManyArgs>(args?: SelectSubset<T, employeeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Employees
     * const employee = await prisma.employee.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends employeeUpdateManyArgs>(args: SelectSubset<T, employeeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Employee.
     * @param {employeeUpsertArgs} args - Arguments to update or create a Employee.
     * @example
     * // Update or create a Employee
     * const employee = await prisma.employee.upsert({
     *   create: {
     *     // ... data to create a Employee
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Employee we want to update
     *   }
     * })
     */
    upsert<T extends employeeUpsertArgs>(args: SelectSubset<T, employeeUpsertArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeeCountArgs} args - Arguments to filter Employees to count.
     * @example
     * // Count the number of Employees
     * const count = await prisma.employee.count({
     *   where: {
     *     // ... the filter for the Employees we want to count
     *   }
     * })
    **/
    count<T extends employeeCountArgs>(
      args?: Subset<T, employeeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmployeeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Employee.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmployeeAggregateArgs>(args: Subset<T, EmployeeAggregateArgs>): Prisma.PrismaPromise<GetEmployeeAggregateType<T>>

    /**
     * Group by Employee.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends employeeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: employeeGroupByArgs['orderBy'] }
        : { orderBy?: employeeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, employeeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmployeeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the employee model
   */
  readonly fields: employeeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for employee.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__employeeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    attendance_attendance_createdByToemployee<T extends employee$attendance_attendance_createdByToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, employee$attendance_attendance_createdByToemployeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    attendance_attendance_user_id_machineToemployee<T extends employee$attendance_attendance_user_id_machineToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, employee$attendance_attendance_user_id_machineToemployeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    check_io<T extends employee$check_ioArgs<ExtArgs> = {}>(args?: Subset<T, employee$check_ioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cuti_cuti_approvalToemployee<T extends employee$cuti_cuti_approvalToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, employee$cuti_cuti_approvalToemployeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cuti<T extends employee$cutiArgs<ExtArgs> = {}>(args?: Subset<T, employee$cutiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    profile<T extends employee$profileArgs<ExtArgs> = {}>(args?: Subset<T, employee$profileArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    employee_employee_approverToemployee<T extends employee$employee_employee_approverToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, employee$employee_employee_approverToemployeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    other_employee_employee_approverToemployee<T extends employee$other_employee_employee_approverToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, employee$other_employee_employee_approverToemployeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    dept<T extends employee$deptArgs<ExtArgs> = {}>(args?: Subset<T, employee$deptArgs<ExtArgs>>): Prisma__deptClient<$Result.GetResult<Prisma.$deptPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    employee_employee_substituteToemployee<T extends employee$employee_employee_substituteToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, employee$employee_employee_substituteToemployeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    other_employee_employee_substituteToemployee<T extends employee$other_employee_employee_substituteToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, employee$other_employee_employee_substituteToemployeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ijin_ijin_approvalToemployee<T extends employee$ijin_ijin_approvalToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, employee$ijin_ijin_approvalToemployeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ijinPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ijin<T extends employee$ijinArgs<ExtArgs> = {}>(args?: Subset<T, employee$ijinArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ijinPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    skpd_skpd_createdByToemployee<T extends employee$skpd_skpd_createdByToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, employee$skpd_skpd_createdByToemployeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$skpdPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    skpd_skpd_payrollToemployee<T extends employee$skpd_skpd_payrollToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, employee$skpd_skpd_payrollToemployeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$skpdPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    spl_spl_approval1Toemployee<T extends employee$spl_spl_approval1ToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, employee$spl_spl_approval1ToemployeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$splPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    spl_spl_approval2Toemployee<T extends employee$spl_spl_approval2ToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, employee$spl_spl_approval2ToemployeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$splPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    spl_detail<T extends employee$spl_detailArgs<ExtArgs> = {}>(args?: Subset<T, employee$spl_detailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sppd<T extends employee$sppdArgs<ExtArgs> = {}>(args?: Subset<T, employee$sppdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sppd_detail<T extends employee$sppd_detailArgs<ExtArgs> = {}>(args?: Subset<T, employee$sppd_detailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sppd_detailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    srl_srl_approval1Toemployee<T extends employee$srl_srl_approval1ToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, employee$srl_srl_approval1ToemployeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$srlPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    srl_srl_approval2Toemployee<T extends employee$srl_srl_approval2ToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, employee$srl_srl_approval2ToemployeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$srlPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    srl<T extends employee$srlArgs<ExtArgs> = {}>(args?: Subset<T, employee$srlArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$srlPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the employee model
   */
  interface employeeFieldRefs {
    readonly payroll: FieldRef<"employee", 'String'>
    readonly user_id_machine: FieldRef<"employee", 'String'>
    readonly profile_id: FieldRef<"employee", 'String'>
    readonly email: FieldRef<"employee", 'String'>
    readonly name: FieldRef<"employee", 'String'>
    readonly password: FieldRef<"employee", 'String'>
    readonly position: FieldRef<"employee", 'String'>
    readonly department: FieldRef<"employee", 'String'>
    readonly location: FieldRef<"employee", 'String'>
    readonly phone: FieldRef<"employee", 'String'>
    readonly workhour: FieldRef<"employee", 'Int'>
    readonly approver: FieldRef<"employee", 'String'>
    readonly substitute: FieldRef<"employee", 'String'>
    readonly join_date: FieldRef<"employee", 'DateTime'>
    readonly signature: FieldRef<"employee", 'String'>
    readonly status: FieldRef<"employee", 'employee_status'>
  }
    

  // Custom InputTypes
  /**
   * employee findUnique
   */
  export type employeeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    /**
     * Filter, which employee to fetch.
     */
    where: employeeWhereUniqueInput
  }

  /**
   * employee findUniqueOrThrow
   */
  export type employeeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    /**
     * Filter, which employee to fetch.
     */
    where: employeeWhereUniqueInput
  }

  /**
   * employee findFirst
   */
  export type employeeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    /**
     * Filter, which employee to fetch.
     */
    where?: employeeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employees to fetch.
     */
    orderBy?: employeeOrderByWithRelationInput | employeeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for employees.
     */
    cursor?: employeeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of employees.
     */
    distinct?: EmployeeScalarFieldEnum | EmployeeScalarFieldEnum[]
  }

  /**
   * employee findFirstOrThrow
   */
  export type employeeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    /**
     * Filter, which employee to fetch.
     */
    where?: employeeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employees to fetch.
     */
    orderBy?: employeeOrderByWithRelationInput | employeeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for employees.
     */
    cursor?: employeeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of employees.
     */
    distinct?: EmployeeScalarFieldEnum | EmployeeScalarFieldEnum[]
  }

  /**
   * employee findMany
   */
  export type employeeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    /**
     * Filter, which employees to fetch.
     */
    where?: employeeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employees to fetch.
     */
    orderBy?: employeeOrderByWithRelationInput | employeeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing employees.
     */
    cursor?: employeeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employees.
     */
    skip?: number
    distinct?: EmployeeScalarFieldEnum | EmployeeScalarFieldEnum[]
  }

  /**
   * employee create
   */
  export type employeeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    /**
     * The data needed to create a employee.
     */
    data: XOR<employeeCreateInput, employeeUncheckedCreateInput>
  }

  /**
   * employee createMany
   */
  export type employeeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many employees.
     */
    data: employeeCreateManyInput | employeeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * employee update
   */
  export type employeeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    /**
     * The data needed to update a employee.
     */
    data: XOR<employeeUpdateInput, employeeUncheckedUpdateInput>
    /**
     * Choose, which employee to update.
     */
    where: employeeWhereUniqueInput
  }

  /**
   * employee updateMany
   */
  export type employeeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update employees.
     */
    data: XOR<employeeUpdateManyMutationInput, employeeUncheckedUpdateManyInput>
    /**
     * Filter which employees to update
     */
    where?: employeeWhereInput
    /**
     * Limit how many employees to update.
     */
    limit?: number
  }

  /**
   * employee upsert
   */
  export type employeeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    /**
     * The filter to search for the employee to update in case it exists.
     */
    where: employeeWhereUniqueInput
    /**
     * In case the employee found by the `where` argument doesn't exist, create a new employee with this data.
     */
    create: XOR<employeeCreateInput, employeeUncheckedCreateInput>
    /**
     * In case the employee was found with the provided `where` argument, update it with this data.
     */
    update: XOR<employeeUpdateInput, employeeUncheckedUpdateInput>
  }

  /**
   * employee delete
   */
  export type employeeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    /**
     * Filter which employee to delete.
     */
    where: employeeWhereUniqueInput
  }

  /**
   * employee deleteMany
   */
  export type employeeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which employees to delete
     */
    where?: employeeWhereInput
    /**
     * Limit how many employees to delete.
     */
    limit?: number
  }

  /**
   * employee.attendance_attendance_createdByToemployee
   */
  export type employee$attendance_attendance_createdByToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    where?: attendanceWhereInput
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    cursor?: attendanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AttendanceScalarFieldEnum | AttendanceScalarFieldEnum[]
  }

  /**
   * employee.attendance_attendance_user_id_machineToemployee
   */
  export type employee$attendance_attendance_user_id_machineToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    where?: attendanceWhereInput
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    cursor?: attendanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AttendanceScalarFieldEnum | AttendanceScalarFieldEnum[]
  }

  /**
   * employee.check_io
   */
  export type employee$check_ioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the check_io
     */
    select?: check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the check_io
     */
    omit?: check_ioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: check_ioInclude<ExtArgs> | null
    where?: check_ioWhereInput
    orderBy?: check_ioOrderByWithRelationInput | check_ioOrderByWithRelationInput[]
    cursor?: check_ioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Check_ioScalarFieldEnum | Check_ioScalarFieldEnum[]
  }

  /**
   * employee.cuti_cuti_approvalToemployee
   */
  export type employee$cuti_cuti_approvalToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuti
     */
    select?: cutiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuti
     */
    omit?: cutiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cutiInclude<ExtArgs> | null
    where?: cutiWhereInput
    orderBy?: cutiOrderByWithRelationInput | cutiOrderByWithRelationInput[]
    cursor?: cutiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CutiScalarFieldEnum | CutiScalarFieldEnum[]
  }

  /**
   * employee.cuti
   */
  export type employee$cutiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuti
     */
    select?: cutiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuti
     */
    omit?: cutiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cutiInclude<ExtArgs> | null
    where?: cutiWhereInput
    orderBy?: cutiOrderByWithRelationInput | cutiOrderByWithRelationInput[]
    cursor?: cutiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CutiScalarFieldEnum | CutiScalarFieldEnum[]
  }

  /**
   * employee.profile
   */
  export type employee$profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    where?: profileWhereInput
  }

  /**
   * employee.employee_employee_approverToemployee
   */
  export type employee$employee_employee_approverToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * employee.other_employee_employee_approverToemployee
   */
  export type employee$other_employee_employee_approverToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
    orderBy?: employeeOrderByWithRelationInput | employeeOrderByWithRelationInput[]
    cursor?: employeeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmployeeScalarFieldEnum | EmployeeScalarFieldEnum[]
  }

  /**
   * employee.dept
   */
  export type employee$deptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dept
     */
    select?: deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dept
     */
    omit?: deptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deptInclude<ExtArgs> | null
    where?: deptWhereInput
  }

  /**
   * employee.employee_employee_substituteToemployee
   */
  export type employee$employee_employee_substituteToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * employee.other_employee_employee_substituteToemployee
   */
  export type employee$other_employee_employee_substituteToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
    orderBy?: employeeOrderByWithRelationInput | employeeOrderByWithRelationInput[]
    cursor?: employeeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmployeeScalarFieldEnum | EmployeeScalarFieldEnum[]
  }

  /**
   * employee.ijin_ijin_approvalToemployee
   */
  export type employee$ijin_ijin_approvalToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ijin
     */
    select?: ijinSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ijin
     */
    omit?: ijinOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ijinInclude<ExtArgs> | null
    where?: ijinWhereInput
    orderBy?: ijinOrderByWithRelationInput | ijinOrderByWithRelationInput[]
    cursor?: ijinWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IjinScalarFieldEnum | IjinScalarFieldEnum[]
  }

  /**
   * employee.ijin
   */
  export type employee$ijinArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ijin
     */
    select?: ijinSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ijin
     */
    omit?: ijinOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ijinInclude<ExtArgs> | null
    where?: ijinWhereInput
    orderBy?: ijinOrderByWithRelationInput | ijinOrderByWithRelationInput[]
    cursor?: ijinWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IjinScalarFieldEnum | IjinScalarFieldEnum[]
  }

  /**
   * employee.skpd_skpd_createdByToemployee
   */
  export type employee$skpd_skpd_createdByToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skpd
     */
    select?: skpdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skpd
     */
    omit?: skpdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skpdInclude<ExtArgs> | null
    where?: skpdWhereInput
    orderBy?: skpdOrderByWithRelationInput | skpdOrderByWithRelationInput[]
    cursor?: skpdWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SkpdScalarFieldEnum | SkpdScalarFieldEnum[]
  }

  /**
   * employee.skpd_skpd_payrollToemployee
   */
  export type employee$skpd_skpd_payrollToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skpd
     */
    select?: skpdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skpd
     */
    omit?: skpdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skpdInclude<ExtArgs> | null
    where?: skpdWhereInput
    orderBy?: skpdOrderByWithRelationInput | skpdOrderByWithRelationInput[]
    cursor?: skpdWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SkpdScalarFieldEnum | SkpdScalarFieldEnum[]
  }

  /**
   * employee.spl_spl_approval1Toemployee
   */
  export type employee$spl_spl_approval1ToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl
     */
    select?: splSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl
     */
    omit?: splOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: splInclude<ExtArgs> | null
    where?: splWhereInput
    orderBy?: splOrderByWithRelationInput | splOrderByWithRelationInput[]
    cursor?: splWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SplScalarFieldEnum | SplScalarFieldEnum[]
  }

  /**
   * employee.spl_spl_approval2Toemployee
   */
  export type employee$spl_spl_approval2ToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl
     */
    select?: splSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl
     */
    omit?: splOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: splInclude<ExtArgs> | null
    where?: splWhereInput
    orderBy?: splOrderByWithRelationInput | splOrderByWithRelationInput[]
    cursor?: splWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SplScalarFieldEnum | SplScalarFieldEnum[]
  }

  /**
   * employee.spl_detail
   */
  export type employee$spl_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl_detail
     */
    select?: spl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl_detail
     */
    omit?: spl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: spl_detailInclude<ExtArgs> | null
    where?: spl_detailWhereInput
    orderBy?: spl_detailOrderByWithRelationInput | spl_detailOrderByWithRelationInput[]
    cursor?: spl_detailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Spl_detailScalarFieldEnum | Spl_detailScalarFieldEnum[]
  }

  /**
   * employee.sppd
   */
  export type employee$sppdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd
     */
    select?: sppdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd
     */
    omit?: sppdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppdInclude<ExtArgs> | null
    where?: sppdWhereInput
    orderBy?: sppdOrderByWithRelationInput | sppdOrderByWithRelationInput[]
    cursor?: sppdWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SppdScalarFieldEnum | SppdScalarFieldEnum[]
  }

  /**
   * employee.sppd_detail
   */
  export type employee$sppd_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd_detail
     */
    select?: sppd_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd_detail
     */
    omit?: sppd_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppd_detailInclude<ExtArgs> | null
    where?: sppd_detailWhereInput
    orderBy?: sppd_detailOrderByWithRelationInput | sppd_detailOrderByWithRelationInput[]
    cursor?: sppd_detailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Sppd_detailScalarFieldEnum | Sppd_detailScalarFieldEnum[]
  }

  /**
   * employee.srl_srl_approval1Toemployee
   */
  export type employee$srl_srl_approval1ToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
    where?: srlWhereInput
    orderBy?: srlOrderByWithRelationInput | srlOrderByWithRelationInput[]
    cursor?: srlWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SrlScalarFieldEnum | SrlScalarFieldEnum[]
  }

  /**
   * employee.srl_srl_approval2Toemployee
   */
  export type employee$srl_srl_approval2ToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
    where?: srlWhereInput
    orderBy?: srlOrderByWithRelationInput | srlOrderByWithRelationInput[]
    cursor?: srlWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SrlScalarFieldEnum | SrlScalarFieldEnum[]
  }

  /**
   * employee.srl
   */
  export type employee$srlArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
    where?: srlWhereInput
    orderBy?: srlOrderByWithRelationInput | srlOrderByWithRelationInput[]
    cursor?: srlWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SrlScalarFieldEnum | SrlScalarFieldEnum[]
  }

  /**
   * employee without action
   */
  export type employeeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
  }


  /**
   * Model profile
   */

  export type AggregateProfile = {
    _count: ProfileCountAggregateOutputType | null
    _avg: ProfileAvgAggregateOutputType | null
    _sum: ProfileSumAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  export type ProfileAvgAggregateOutputType = {
    level: number | null
  }

  export type ProfileSumAggregateOutputType = {
    level: number | null
  }

  export type ProfileMinAggregateOutputType = {
    profile_id: string | null
    name: string | null
    description: string | null
    level: number | null
    user_hrd: boolean | null
    access_sppd: string | null
    access_skpd: string | null
    access_attendance: string | null
    access_spl: string | null
    access_srl: string | null
    access_cuti: string | null
    access_ijin: string | null
    access_calendar: string | null
    access_user: string | null
    access_profile: string | null
    access_dept: string | null
    access_setting: string | null
  }

  export type ProfileMaxAggregateOutputType = {
    profile_id: string | null
    name: string | null
    description: string | null
    level: number | null
    user_hrd: boolean | null
    access_sppd: string | null
    access_skpd: string | null
    access_attendance: string | null
    access_spl: string | null
    access_srl: string | null
    access_cuti: string | null
    access_ijin: string | null
    access_calendar: string | null
    access_user: string | null
    access_profile: string | null
    access_dept: string | null
    access_setting: string | null
  }

  export type ProfileCountAggregateOutputType = {
    profile_id: number
    name: number
    description: number
    level: number
    user_hrd: number
    access_sppd: number
    access_skpd: number
    access_attendance: number
    access_spl: number
    access_srl: number
    access_cuti: number
    access_ijin: number
    access_calendar: number
    access_user: number
    access_profile: number
    access_dept: number
    access_setting: number
    _all: number
  }


  export type ProfileAvgAggregateInputType = {
    level?: true
  }

  export type ProfileSumAggregateInputType = {
    level?: true
  }

  export type ProfileMinAggregateInputType = {
    profile_id?: true
    name?: true
    description?: true
    level?: true
    user_hrd?: true
    access_sppd?: true
    access_skpd?: true
    access_attendance?: true
    access_spl?: true
    access_srl?: true
    access_cuti?: true
    access_ijin?: true
    access_calendar?: true
    access_user?: true
    access_profile?: true
    access_dept?: true
    access_setting?: true
  }

  export type ProfileMaxAggregateInputType = {
    profile_id?: true
    name?: true
    description?: true
    level?: true
    user_hrd?: true
    access_sppd?: true
    access_skpd?: true
    access_attendance?: true
    access_spl?: true
    access_srl?: true
    access_cuti?: true
    access_ijin?: true
    access_calendar?: true
    access_user?: true
    access_profile?: true
    access_dept?: true
    access_setting?: true
  }

  export type ProfileCountAggregateInputType = {
    profile_id?: true
    name?: true
    description?: true
    level?: true
    user_hrd?: true
    access_sppd?: true
    access_skpd?: true
    access_attendance?: true
    access_spl?: true
    access_srl?: true
    access_cuti?: true
    access_ijin?: true
    access_calendar?: true
    access_user?: true
    access_profile?: true
    access_dept?: true
    access_setting?: true
    _all?: true
  }

  export type ProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which profile to aggregate.
     */
    where?: profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profileOrderByWithRelationInput | profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned profiles
    **/
    _count?: true | ProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProfileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProfileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfileMaxAggregateInputType
  }

  export type GetProfileAggregateType<T extends ProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfile[P]>
      : GetScalarType<T[P], AggregateProfile[P]>
  }




  export type profileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: profileWhereInput
    orderBy?: profileOrderByWithAggregationInput | profileOrderByWithAggregationInput[]
    by: ProfileScalarFieldEnum[] | ProfileScalarFieldEnum
    having?: profileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfileCountAggregateInputType | true
    _avg?: ProfileAvgAggregateInputType
    _sum?: ProfileSumAggregateInputType
    _min?: ProfileMinAggregateInputType
    _max?: ProfileMaxAggregateInputType
  }

  export type ProfileGroupByOutputType = {
    profile_id: string
    name: string
    description: string
    level: number
    user_hrd: boolean
    access_sppd: string
    access_skpd: string
    access_attendance: string
    access_spl: string
    access_srl: string
    access_cuti: string
    access_ijin: string
    access_calendar: string
    access_user: string
    access_profile: string
    access_dept: string
    access_setting: string
    _count: ProfileCountAggregateOutputType | null
    _avg: ProfileAvgAggregateOutputType | null
    _sum: ProfileSumAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  type GetProfileGroupByPayload<T extends profileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfileGroupByOutputType[P]>
            : GetScalarType<T[P], ProfileGroupByOutputType[P]>
        }
      >
    >


  export type profileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    profile_id?: boolean
    name?: boolean
    description?: boolean
    level?: boolean
    user_hrd?: boolean
    access_sppd?: boolean
    access_skpd?: boolean
    access_attendance?: boolean
    access_spl?: boolean
    access_srl?: boolean
    access_cuti?: boolean
    access_ijin?: boolean
    access_calendar?: boolean
    access_user?: boolean
    access_profile?: boolean
    access_dept?: boolean
    access_setting?: boolean
    employee?: boolean | profile$employeeArgs<ExtArgs>
    _count?: boolean | ProfileCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>



  export type profileSelectScalar = {
    profile_id?: boolean
    name?: boolean
    description?: boolean
    level?: boolean
    user_hrd?: boolean
    access_sppd?: boolean
    access_skpd?: boolean
    access_attendance?: boolean
    access_spl?: boolean
    access_srl?: boolean
    access_cuti?: boolean
    access_ijin?: boolean
    access_calendar?: boolean
    access_user?: boolean
    access_profile?: boolean
    access_dept?: boolean
    access_setting?: boolean
  }

  export type profileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"profile_id" | "name" | "description" | "level" | "user_hrd" | "access_sppd" | "access_skpd" | "access_attendance" | "access_spl" | "access_srl" | "access_cuti" | "access_ijin" | "access_calendar" | "access_user" | "access_profile" | "access_dept" | "access_setting", ExtArgs["result"]["profile"]>
  export type profileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | profile$employeeArgs<ExtArgs>
    _count?: boolean | ProfileCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $profilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "profile"
    objects: {
      employee: Prisma.$employeePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      profile_id: string
      name: string
      description: string
      level: number
      user_hrd: boolean
      access_sppd: string
      access_skpd: string
      access_attendance: string
      access_spl: string
      access_srl: string
      access_cuti: string
      access_ijin: string
      access_calendar: string
      access_user: string
      access_profile: string
      access_dept: string
      access_setting: string
    }, ExtArgs["result"]["profile"]>
    composites: {}
  }

  type profileGetPayload<S extends boolean | null | undefined | profileDefaultArgs> = $Result.GetResult<Prisma.$profilePayload, S>

  type profileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<profileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProfileCountAggregateInputType | true
    }

  export interface profileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['profile'], meta: { name: 'profile' } }
    /**
     * Find zero or one Profile that matches the filter.
     * @param {profileFindUniqueArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends profileFindUniqueArgs>(args: SelectSubset<T, profileFindUniqueArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Profile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {profileFindUniqueOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends profileFindUniqueOrThrowArgs>(args: SelectSubset<T, profileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileFindFirstArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends profileFindFirstArgs>(args?: SelectSubset<T, profileFindFirstArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileFindFirstOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends profileFindFirstOrThrowArgs>(args?: SelectSubset<T, profileFindFirstOrThrowArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Profiles
     * const profiles = await prisma.profile.findMany()
     * 
     * // Get first 10 Profiles
     * const profiles = await prisma.profile.findMany({ take: 10 })
     * 
     * // Only select the `profile_id`
     * const profileWithProfile_idOnly = await prisma.profile.findMany({ select: { profile_id: true } })
     * 
     */
    findMany<T extends profileFindManyArgs>(args?: SelectSubset<T, profileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Profile.
     * @param {profileCreateArgs} args - Arguments to create a Profile.
     * @example
     * // Create one Profile
     * const Profile = await prisma.profile.create({
     *   data: {
     *     // ... data to create a Profile
     *   }
     * })
     * 
     */
    create<T extends profileCreateArgs>(args: SelectSubset<T, profileCreateArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Profiles.
     * @param {profileCreateManyArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends profileCreateManyArgs>(args?: SelectSubset<T, profileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Profile.
     * @param {profileDeleteArgs} args - Arguments to delete one Profile.
     * @example
     * // Delete one Profile
     * const Profile = await prisma.profile.delete({
     *   where: {
     *     // ... filter to delete one Profile
     *   }
     * })
     * 
     */
    delete<T extends profileDeleteArgs>(args: SelectSubset<T, profileDeleteArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Profile.
     * @param {profileUpdateArgs} args - Arguments to update one Profile.
     * @example
     * // Update one Profile
     * const profile = await prisma.profile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends profileUpdateArgs>(args: SelectSubset<T, profileUpdateArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Profiles.
     * @param {profileDeleteManyArgs} args - Arguments to filter Profiles to delete.
     * @example
     * // Delete a few Profiles
     * const { count } = await prisma.profile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends profileDeleteManyArgs>(args?: SelectSubset<T, profileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends profileUpdateManyArgs>(args: SelectSubset<T, profileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Profile.
     * @param {profileUpsertArgs} args - Arguments to update or create a Profile.
     * @example
     * // Update or create a Profile
     * const profile = await prisma.profile.upsert({
     *   create: {
     *     // ... data to create a Profile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Profile we want to update
     *   }
     * })
     */
    upsert<T extends profileUpsertArgs>(args: SelectSubset<T, profileUpsertArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileCountArgs} args - Arguments to filter Profiles to count.
     * @example
     * // Count the number of Profiles
     * const count = await prisma.profile.count({
     *   where: {
     *     // ... the filter for the Profiles we want to count
     *   }
     * })
    **/
    count<T extends profileCountArgs>(
      args?: Subset<T, profileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfileAggregateArgs>(args: Subset<T, ProfileAggregateArgs>): Prisma.PrismaPromise<GetProfileAggregateType<T>>

    /**
     * Group by Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends profileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: profileGroupByArgs['orderBy'] }
        : { orderBy?: profileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, profileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the profile model
   */
  readonly fields: profileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for profile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__profileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee<T extends profile$employeeArgs<ExtArgs> = {}>(args?: Subset<T, profile$employeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the profile model
   */
  interface profileFieldRefs {
    readonly profile_id: FieldRef<"profile", 'String'>
    readonly name: FieldRef<"profile", 'String'>
    readonly description: FieldRef<"profile", 'String'>
    readonly level: FieldRef<"profile", 'Int'>
    readonly user_hrd: FieldRef<"profile", 'Boolean'>
    readonly access_sppd: FieldRef<"profile", 'String'>
    readonly access_skpd: FieldRef<"profile", 'String'>
    readonly access_attendance: FieldRef<"profile", 'String'>
    readonly access_spl: FieldRef<"profile", 'String'>
    readonly access_srl: FieldRef<"profile", 'String'>
    readonly access_cuti: FieldRef<"profile", 'String'>
    readonly access_ijin: FieldRef<"profile", 'String'>
    readonly access_calendar: FieldRef<"profile", 'String'>
    readonly access_user: FieldRef<"profile", 'String'>
    readonly access_profile: FieldRef<"profile", 'String'>
    readonly access_dept: FieldRef<"profile", 'String'>
    readonly access_setting: FieldRef<"profile", 'String'>
  }
    

  // Custom InputTypes
  /**
   * profile findUnique
   */
  export type profileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profile to fetch.
     */
    where: profileWhereUniqueInput
  }

  /**
   * profile findUniqueOrThrow
   */
  export type profileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profile to fetch.
     */
    where: profileWhereUniqueInput
  }

  /**
   * profile findFirst
   */
  export type profileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profile to fetch.
     */
    where?: profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profileOrderByWithRelationInput | profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for profiles.
     */
    cursor?: profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * profile findFirstOrThrow
   */
  export type profileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profile to fetch.
     */
    where?: profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profileOrderByWithRelationInput | profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for profiles.
     */
    cursor?: profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * profile findMany
   */
  export type profileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profiles to fetch.
     */
    where?: profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profileOrderByWithRelationInput | profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing profiles.
     */
    cursor?: profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * profile create
   */
  export type profileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * The data needed to create a profile.
     */
    data: XOR<profileCreateInput, profileUncheckedCreateInput>
  }

  /**
   * profile createMany
   */
  export type profileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many profiles.
     */
    data: profileCreateManyInput | profileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * profile update
   */
  export type profileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * The data needed to update a profile.
     */
    data: XOR<profileUpdateInput, profileUncheckedUpdateInput>
    /**
     * Choose, which profile to update.
     */
    where: profileWhereUniqueInput
  }

  /**
   * profile updateMany
   */
  export type profileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update profiles.
     */
    data: XOR<profileUpdateManyMutationInput, profileUncheckedUpdateManyInput>
    /**
     * Filter which profiles to update
     */
    where?: profileWhereInput
    /**
     * Limit how many profiles to update.
     */
    limit?: number
  }

  /**
   * profile upsert
   */
  export type profileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * The filter to search for the profile to update in case it exists.
     */
    where: profileWhereUniqueInput
    /**
     * In case the profile found by the `where` argument doesn't exist, create a new profile with this data.
     */
    create: XOR<profileCreateInput, profileUncheckedCreateInput>
    /**
     * In case the profile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<profileUpdateInput, profileUncheckedUpdateInput>
  }

  /**
   * profile delete
   */
  export type profileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter which profile to delete.
     */
    where: profileWhereUniqueInput
  }

  /**
   * profile deleteMany
   */
  export type profileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which profiles to delete
     */
    where?: profileWhereInput
    /**
     * Limit how many profiles to delete.
     */
    limit?: number
  }

  /**
   * profile.employee
   */
  export type profile$employeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
    orderBy?: employeeOrderByWithRelationInput | employeeOrderByWithRelationInput[]
    cursor?: employeeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmployeeScalarFieldEnum | EmployeeScalarFieldEnum[]
  }

  /**
   * profile without action
   */
  export type profileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
  }


  /**
   * Model check_io
   */

  export type AggregateCheck_io = {
    _count: Check_ioCountAggregateOutputType | null
    _min: Check_ioMinAggregateOutputType | null
    _max: Check_ioMaxAggregateOutputType | null
  }

  export type Check_ioMinAggregateOutputType = {
    check_io_id: string | null
    user_id_machine: string | null
    check_in: Date | null
    check_out: Date | null
    type: string | null
    createdAt: Date | null
  }

  export type Check_ioMaxAggregateOutputType = {
    check_io_id: string | null
    user_id_machine: string | null
    check_in: Date | null
    check_out: Date | null
    type: string | null
    createdAt: Date | null
  }

  export type Check_ioCountAggregateOutputType = {
    check_io_id: number
    user_id_machine: number
    check_in: number
    check_out: number
    type: number
    createdAt: number
    _all: number
  }


  export type Check_ioMinAggregateInputType = {
    check_io_id?: true
    user_id_machine?: true
    check_in?: true
    check_out?: true
    type?: true
    createdAt?: true
  }

  export type Check_ioMaxAggregateInputType = {
    check_io_id?: true
    user_id_machine?: true
    check_in?: true
    check_out?: true
    type?: true
    createdAt?: true
  }

  export type Check_ioCountAggregateInputType = {
    check_io_id?: true
    user_id_machine?: true
    check_in?: true
    check_out?: true
    type?: true
    createdAt?: true
    _all?: true
  }

  export type Check_ioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which check_io to aggregate.
     */
    where?: check_ioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of check_ios to fetch.
     */
    orderBy?: check_ioOrderByWithRelationInput | check_ioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: check_ioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` check_ios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` check_ios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned check_ios
    **/
    _count?: true | Check_ioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Check_ioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Check_ioMaxAggregateInputType
  }

  export type GetCheck_ioAggregateType<T extends Check_ioAggregateArgs> = {
        [P in keyof T & keyof AggregateCheck_io]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCheck_io[P]>
      : GetScalarType<T[P], AggregateCheck_io[P]>
  }




  export type check_ioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: check_ioWhereInput
    orderBy?: check_ioOrderByWithAggregationInput | check_ioOrderByWithAggregationInput[]
    by: Check_ioScalarFieldEnum[] | Check_ioScalarFieldEnum
    having?: check_ioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Check_ioCountAggregateInputType | true
    _min?: Check_ioMinAggregateInputType
    _max?: Check_ioMaxAggregateInputType
  }

  export type Check_ioGroupByOutputType = {
    check_io_id: string
    user_id_machine: string | null
    check_in: Date
    check_out: Date
    type: string
    createdAt: Date
    _count: Check_ioCountAggregateOutputType | null
    _min: Check_ioMinAggregateOutputType | null
    _max: Check_ioMaxAggregateOutputType | null
  }

  type GetCheck_ioGroupByPayload<T extends check_ioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Check_ioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Check_ioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Check_ioGroupByOutputType[P]>
            : GetScalarType<T[P], Check_ioGroupByOutputType[P]>
        }
      >
    >


  export type check_ioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    check_io_id?: boolean
    user_id_machine?: boolean
    check_in?: boolean
    check_out?: boolean
    type?: boolean
    createdAt?: boolean
    employee?: boolean | check_io$employeeArgs<ExtArgs>
  }, ExtArgs["result"]["check_io"]>



  export type check_ioSelectScalar = {
    check_io_id?: boolean
    user_id_machine?: boolean
    check_in?: boolean
    check_out?: boolean
    type?: boolean
    createdAt?: boolean
  }

  export type check_ioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"check_io_id" | "user_id_machine" | "check_in" | "check_out" | "type" | "createdAt", ExtArgs["result"]["check_io"]>
  export type check_ioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | check_io$employeeArgs<ExtArgs>
  }

  export type $check_ioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "check_io"
    objects: {
      employee: Prisma.$employeePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      check_io_id: string
      user_id_machine: string | null
      check_in: Date
      check_out: Date
      type: string
      createdAt: Date
    }, ExtArgs["result"]["check_io"]>
    composites: {}
  }

  type check_ioGetPayload<S extends boolean | null | undefined | check_ioDefaultArgs> = $Result.GetResult<Prisma.$check_ioPayload, S>

  type check_ioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<check_ioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Check_ioCountAggregateInputType | true
    }

  export interface check_ioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['check_io'], meta: { name: 'check_io' } }
    /**
     * Find zero or one Check_io that matches the filter.
     * @param {check_ioFindUniqueArgs} args - Arguments to find a Check_io
     * @example
     * // Get one Check_io
     * const check_io = await prisma.check_io.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends check_ioFindUniqueArgs>(args: SelectSubset<T, check_ioFindUniqueArgs<ExtArgs>>): Prisma__check_ioClient<$Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Check_io that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {check_ioFindUniqueOrThrowArgs} args - Arguments to find a Check_io
     * @example
     * // Get one Check_io
     * const check_io = await prisma.check_io.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends check_ioFindUniqueOrThrowArgs>(args: SelectSubset<T, check_ioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__check_ioClient<$Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Check_io that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {check_ioFindFirstArgs} args - Arguments to find a Check_io
     * @example
     * // Get one Check_io
     * const check_io = await prisma.check_io.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends check_ioFindFirstArgs>(args?: SelectSubset<T, check_ioFindFirstArgs<ExtArgs>>): Prisma__check_ioClient<$Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Check_io that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {check_ioFindFirstOrThrowArgs} args - Arguments to find a Check_io
     * @example
     * // Get one Check_io
     * const check_io = await prisma.check_io.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends check_ioFindFirstOrThrowArgs>(args?: SelectSubset<T, check_ioFindFirstOrThrowArgs<ExtArgs>>): Prisma__check_ioClient<$Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Check_ios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {check_ioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Check_ios
     * const check_ios = await prisma.check_io.findMany()
     * 
     * // Get first 10 Check_ios
     * const check_ios = await prisma.check_io.findMany({ take: 10 })
     * 
     * // Only select the `check_io_id`
     * const check_ioWithCheck_io_idOnly = await prisma.check_io.findMany({ select: { check_io_id: true } })
     * 
     */
    findMany<T extends check_ioFindManyArgs>(args?: SelectSubset<T, check_ioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Check_io.
     * @param {check_ioCreateArgs} args - Arguments to create a Check_io.
     * @example
     * // Create one Check_io
     * const Check_io = await prisma.check_io.create({
     *   data: {
     *     // ... data to create a Check_io
     *   }
     * })
     * 
     */
    create<T extends check_ioCreateArgs>(args: SelectSubset<T, check_ioCreateArgs<ExtArgs>>): Prisma__check_ioClient<$Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Check_ios.
     * @param {check_ioCreateManyArgs} args - Arguments to create many Check_ios.
     * @example
     * // Create many Check_ios
     * const check_io = await prisma.check_io.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends check_ioCreateManyArgs>(args?: SelectSubset<T, check_ioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Check_io.
     * @param {check_ioDeleteArgs} args - Arguments to delete one Check_io.
     * @example
     * // Delete one Check_io
     * const Check_io = await prisma.check_io.delete({
     *   where: {
     *     // ... filter to delete one Check_io
     *   }
     * })
     * 
     */
    delete<T extends check_ioDeleteArgs>(args: SelectSubset<T, check_ioDeleteArgs<ExtArgs>>): Prisma__check_ioClient<$Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Check_io.
     * @param {check_ioUpdateArgs} args - Arguments to update one Check_io.
     * @example
     * // Update one Check_io
     * const check_io = await prisma.check_io.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends check_ioUpdateArgs>(args: SelectSubset<T, check_ioUpdateArgs<ExtArgs>>): Prisma__check_ioClient<$Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Check_ios.
     * @param {check_ioDeleteManyArgs} args - Arguments to filter Check_ios to delete.
     * @example
     * // Delete a few Check_ios
     * const { count } = await prisma.check_io.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends check_ioDeleteManyArgs>(args?: SelectSubset<T, check_ioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Check_ios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {check_ioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Check_ios
     * const check_io = await prisma.check_io.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends check_ioUpdateManyArgs>(args: SelectSubset<T, check_ioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Check_io.
     * @param {check_ioUpsertArgs} args - Arguments to update or create a Check_io.
     * @example
     * // Update or create a Check_io
     * const check_io = await prisma.check_io.upsert({
     *   create: {
     *     // ... data to create a Check_io
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Check_io we want to update
     *   }
     * })
     */
    upsert<T extends check_ioUpsertArgs>(args: SelectSubset<T, check_ioUpsertArgs<ExtArgs>>): Prisma__check_ioClient<$Result.GetResult<Prisma.$check_ioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Check_ios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {check_ioCountArgs} args - Arguments to filter Check_ios to count.
     * @example
     * // Count the number of Check_ios
     * const count = await prisma.check_io.count({
     *   where: {
     *     // ... the filter for the Check_ios we want to count
     *   }
     * })
    **/
    count<T extends check_ioCountArgs>(
      args?: Subset<T, check_ioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Check_ioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Check_io.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_ioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Check_ioAggregateArgs>(args: Subset<T, Check_ioAggregateArgs>): Prisma.PrismaPromise<GetCheck_ioAggregateType<T>>

    /**
     * Group by Check_io.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {check_ioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends check_ioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: check_ioGroupByArgs['orderBy'] }
        : { orderBy?: check_ioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, check_ioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCheck_ioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the check_io model
   */
  readonly fields: check_ioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for check_io.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__check_ioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee<T extends check_io$employeeArgs<ExtArgs> = {}>(args?: Subset<T, check_io$employeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the check_io model
   */
  interface check_ioFieldRefs {
    readonly check_io_id: FieldRef<"check_io", 'String'>
    readonly user_id_machine: FieldRef<"check_io", 'String'>
    readonly check_in: FieldRef<"check_io", 'DateTime'>
    readonly check_out: FieldRef<"check_io", 'DateTime'>
    readonly type: FieldRef<"check_io", 'String'>
    readonly createdAt: FieldRef<"check_io", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * check_io findUnique
   */
  export type check_ioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the check_io
     */
    select?: check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the check_io
     */
    omit?: check_ioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: check_ioInclude<ExtArgs> | null
    /**
     * Filter, which check_io to fetch.
     */
    where: check_ioWhereUniqueInput
  }

  /**
   * check_io findUniqueOrThrow
   */
  export type check_ioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the check_io
     */
    select?: check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the check_io
     */
    omit?: check_ioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: check_ioInclude<ExtArgs> | null
    /**
     * Filter, which check_io to fetch.
     */
    where: check_ioWhereUniqueInput
  }

  /**
   * check_io findFirst
   */
  export type check_ioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the check_io
     */
    select?: check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the check_io
     */
    omit?: check_ioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: check_ioInclude<ExtArgs> | null
    /**
     * Filter, which check_io to fetch.
     */
    where?: check_ioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of check_ios to fetch.
     */
    orderBy?: check_ioOrderByWithRelationInput | check_ioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for check_ios.
     */
    cursor?: check_ioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` check_ios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` check_ios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of check_ios.
     */
    distinct?: Check_ioScalarFieldEnum | Check_ioScalarFieldEnum[]
  }

  /**
   * check_io findFirstOrThrow
   */
  export type check_ioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the check_io
     */
    select?: check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the check_io
     */
    omit?: check_ioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: check_ioInclude<ExtArgs> | null
    /**
     * Filter, which check_io to fetch.
     */
    where?: check_ioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of check_ios to fetch.
     */
    orderBy?: check_ioOrderByWithRelationInput | check_ioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for check_ios.
     */
    cursor?: check_ioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` check_ios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` check_ios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of check_ios.
     */
    distinct?: Check_ioScalarFieldEnum | Check_ioScalarFieldEnum[]
  }

  /**
   * check_io findMany
   */
  export type check_ioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the check_io
     */
    select?: check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the check_io
     */
    omit?: check_ioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: check_ioInclude<ExtArgs> | null
    /**
     * Filter, which check_ios to fetch.
     */
    where?: check_ioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of check_ios to fetch.
     */
    orderBy?: check_ioOrderByWithRelationInput | check_ioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing check_ios.
     */
    cursor?: check_ioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` check_ios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` check_ios.
     */
    skip?: number
    distinct?: Check_ioScalarFieldEnum | Check_ioScalarFieldEnum[]
  }

  /**
   * check_io create
   */
  export type check_ioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the check_io
     */
    select?: check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the check_io
     */
    omit?: check_ioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: check_ioInclude<ExtArgs> | null
    /**
     * The data needed to create a check_io.
     */
    data: XOR<check_ioCreateInput, check_ioUncheckedCreateInput>
  }

  /**
   * check_io createMany
   */
  export type check_ioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many check_ios.
     */
    data: check_ioCreateManyInput | check_ioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * check_io update
   */
  export type check_ioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the check_io
     */
    select?: check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the check_io
     */
    omit?: check_ioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: check_ioInclude<ExtArgs> | null
    /**
     * The data needed to update a check_io.
     */
    data: XOR<check_ioUpdateInput, check_ioUncheckedUpdateInput>
    /**
     * Choose, which check_io to update.
     */
    where: check_ioWhereUniqueInput
  }

  /**
   * check_io updateMany
   */
  export type check_ioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update check_ios.
     */
    data: XOR<check_ioUpdateManyMutationInput, check_ioUncheckedUpdateManyInput>
    /**
     * Filter which check_ios to update
     */
    where?: check_ioWhereInput
    /**
     * Limit how many check_ios to update.
     */
    limit?: number
  }

  /**
   * check_io upsert
   */
  export type check_ioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the check_io
     */
    select?: check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the check_io
     */
    omit?: check_ioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: check_ioInclude<ExtArgs> | null
    /**
     * The filter to search for the check_io to update in case it exists.
     */
    where: check_ioWhereUniqueInput
    /**
     * In case the check_io found by the `where` argument doesn't exist, create a new check_io with this data.
     */
    create: XOR<check_ioCreateInput, check_ioUncheckedCreateInput>
    /**
     * In case the check_io was found with the provided `where` argument, update it with this data.
     */
    update: XOR<check_ioUpdateInput, check_ioUncheckedUpdateInput>
  }

  /**
   * check_io delete
   */
  export type check_ioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the check_io
     */
    select?: check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the check_io
     */
    omit?: check_ioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: check_ioInclude<ExtArgs> | null
    /**
     * Filter which check_io to delete.
     */
    where: check_ioWhereUniqueInput
  }

  /**
   * check_io deleteMany
   */
  export type check_ioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which check_ios to delete
     */
    where?: check_ioWhereInput
    /**
     * Limit how many check_ios to delete.
     */
    limit?: number
  }

  /**
   * check_io.employee
   */
  export type check_io$employeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * check_io without action
   */
  export type check_ioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the check_io
     */
    select?: check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the check_io
     */
    omit?: check_ioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: check_ioInclude<ExtArgs> | null
  }


  /**
   * Model attendance
   */

  export type AggregateAttendance = {
    _count: AttendanceCountAggregateOutputType | null
    _min: AttendanceMinAggregateOutputType | null
    _max: AttendanceMaxAggregateOutputType | null
  }

  export type AttendanceMinAggregateOutputType = {
    attendance_id: string | null
    user_id_machine: string | null
    check_in: Date | null
    check_out: Date | null
    check_in2: Date | null
    check_out2: Date | null
    type: string | null
    ijin_info: string | null
    description: string | null
    attachment: string | null
    createdBy: string | null
    createdAt: Date | null
  }

  export type AttendanceMaxAggregateOutputType = {
    attendance_id: string | null
    user_id_machine: string | null
    check_in: Date | null
    check_out: Date | null
    check_in2: Date | null
    check_out2: Date | null
    type: string | null
    ijin_info: string | null
    description: string | null
    attachment: string | null
    createdBy: string | null
    createdAt: Date | null
  }

  export type AttendanceCountAggregateOutputType = {
    attendance_id: number
    user_id_machine: number
    check_in: number
    check_out: number
    check_in2: number
    check_out2: number
    type: number
    ijin_info: number
    description: number
    attachment: number
    createdBy: number
    createdAt: number
    _all: number
  }


  export type AttendanceMinAggregateInputType = {
    attendance_id?: true
    user_id_machine?: true
    check_in?: true
    check_out?: true
    check_in2?: true
    check_out2?: true
    type?: true
    ijin_info?: true
    description?: true
    attachment?: true
    createdBy?: true
    createdAt?: true
  }

  export type AttendanceMaxAggregateInputType = {
    attendance_id?: true
    user_id_machine?: true
    check_in?: true
    check_out?: true
    check_in2?: true
    check_out2?: true
    type?: true
    ijin_info?: true
    description?: true
    attachment?: true
    createdBy?: true
    createdAt?: true
  }

  export type AttendanceCountAggregateInputType = {
    attendance_id?: true
    user_id_machine?: true
    check_in?: true
    check_out?: true
    check_in2?: true
    check_out2?: true
    type?: true
    ijin_info?: true
    description?: true
    attachment?: true
    createdBy?: true
    createdAt?: true
    _all?: true
  }

  export type AttendanceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which attendance to aggregate.
     */
    where?: attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attendances to fetch.
     */
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned attendances
    **/
    _count?: true | AttendanceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AttendanceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AttendanceMaxAggregateInputType
  }

  export type GetAttendanceAggregateType<T extends AttendanceAggregateArgs> = {
        [P in keyof T & keyof AggregateAttendance]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAttendance[P]>
      : GetScalarType<T[P], AggregateAttendance[P]>
  }




  export type attendanceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: attendanceWhereInput
    orderBy?: attendanceOrderByWithAggregationInput | attendanceOrderByWithAggregationInput[]
    by: AttendanceScalarFieldEnum[] | AttendanceScalarFieldEnum
    having?: attendanceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AttendanceCountAggregateInputType | true
    _min?: AttendanceMinAggregateInputType
    _max?: AttendanceMaxAggregateInputType
  }

  export type AttendanceGroupByOutputType = {
    attendance_id: string
    user_id_machine: string | null
    check_in: Date
    check_out: Date
    check_in2: Date | null
    check_out2: Date | null
    type: string
    ijin_info: string
    description: string
    attachment: string | null
    createdBy: string | null
    createdAt: Date
    _count: AttendanceCountAggregateOutputType | null
    _min: AttendanceMinAggregateOutputType | null
    _max: AttendanceMaxAggregateOutputType | null
  }

  type GetAttendanceGroupByPayload<T extends attendanceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AttendanceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AttendanceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AttendanceGroupByOutputType[P]>
            : GetScalarType<T[P], AttendanceGroupByOutputType[P]>
        }
      >
    >


  export type attendanceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    attendance_id?: boolean
    user_id_machine?: boolean
    check_in?: boolean
    check_out?: boolean
    check_in2?: boolean
    check_out2?: boolean
    type?: boolean
    ijin_info?: boolean
    description?: boolean
    attachment?: boolean
    createdBy?: boolean
    createdAt?: boolean
    employee_attendance_createdByToemployee?: boolean | attendance$employee_attendance_createdByToemployeeArgs<ExtArgs>
    employee_attendance_user_id_machineToemployee?: boolean | attendance$employee_attendance_user_id_machineToemployeeArgs<ExtArgs>
  }, ExtArgs["result"]["attendance"]>



  export type attendanceSelectScalar = {
    attendance_id?: boolean
    user_id_machine?: boolean
    check_in?: boolean
    check_out?: boolean
    check_in2?: boolean
    check_out2?: boolean
    type?: boolean
    ijin_info?: boolean
    description?: boolean
    attachment?: boolean
    createdBy?: boolean
    createdAt?: boolean
  }

  export type attendanceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"attendance_id" | "user_id_machine" | "check_in" | "check_out" | "check_in2" | "check_out2" | "type" | "ijin_info" | "description" | "attachment" | "createdBy" | "createdAt", ExtArgs["result"]["attendance"]>
  export type attendanceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee_attendance_createdByToemployee?: boolean | attendance$employee_attendance_createdByToemployeeArgs<ExtArgs>
    employee_attendance_user_id_machineToemployee?: boolean | attendance$employee_attendance_user_id_machineToemployeeArgs<ExtArgs>
  }

  export type $attendancePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "attendance"
    objects: {
      employee_attendance_createdByToemployee: Prisma.$employeePayload<ExtArgs> | null
      employee_attendance_user_id_machineToemployee: Prisma.$employeePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      attendance_id: string
      user_id_machine: string | null
      check_in: Date
      check_out: Date
      check_in2: Date | null
      check_out2: Date | null
      type: string
      ijin_info: string
      description: string
      attachment: string | null
      createdBy: string | null
      createdAt: Date
    }, ExtArgs["result"]["attendance"]>
    composites: {}
  }

  type attendanceGetPayload<S extends boolean | null | undefined | attendanceDefaultArgs> = $Result.GetResult<Prisma.$attendancePayload, S>

  type attendanceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<attendanceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AttendanceCountAggregateInputType | true
    }

  export interface attendanceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['attendance'], meta: { name: 'attendance' } }
    /**
     * Find zero or one Attendance that matches the filter.
     * @param {attendanceFindUniqueArgs} args - Arguments to find a Attendance
     * @example
     * // Get one Attendance
     * const attendance = await prisma.attendance.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends attendanceFindUniqueArgs>(args: SelectSubset<T, attendanceFindUniqueArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Attendance that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {attendanceFindUniqueOrThrowArgs} args - Arguments to find a Attendance
     * @example
     * // Get one Attendance
     * const attendance = await prisma.attendance.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends attendanceFindUniqueOrThrowArgs>(args: SelectSubset<T, attendanceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Attendance that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceFindFirstArgs} args - Arguments to find a Attendance
     * @example
     * // Get one Attendance
     * const attendance = await prisma.attendance.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends attendanceFindFirstArgs>(args?: SelectSubset<T, attendanceFindFirstArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Attendance that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceFindFirstOrThrowArgs} args - Arguments to find a Attendance
     * @example
     * // Get one Attendance
     * const attendance = await prisma.attendance.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends attendanceFindFirstOrThrowArgs>(args?: SelectSubset<T, attendanceFindFirstOrThrowArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Attendances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Attendances
     * const attendances = await prisma.attendance.findMany()
     * 
     * // Get first 10 Attendances
     * const attendances = await prisma.attendance.findMany({ take: 10 })
     * 
     * // Only select the `attendance_id`
     * const attendanceWithAttendance_idOnly = await prisma.attendance.findMany({ select: { attendance_id: true } })
     * 
     */
    findMany<T extends attendanceFindManyArgs>(args?: SelectSubset<T, attendanceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Attendance.
     * @param {attendanceCreateArgs} args - Arguments to create a Attendance.
     * @example
     * // Create one Attendance
     * const Attendance = await prisma.attendance.create({
     *   data: {
     *     // ... data to create a Attendance
     *   }
     * })
     * 
     */
    create<T extends attendanceCreateArgs>(args: SelectSubset<T, attendanceCreateArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Attendances.
     * @param {attendanceCreateManyArgs} args - Arguments to create many Attendances.
     * @example
     * // Create many Attendances
     * const attendance = await prisma.attendance.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends attendanceCreateManyArgs>(args?: SelectSubset<T, attendanceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Attendance.
     * @param {attendanceDeleteArgs} args - Arguments to delete one Attendance.
     * @example
     * // Delete one Attendance
     * const Attendance = await prisma.attendance.delete({
     *   where: {
     *     // ... filter to delete one Attendance
     *   }
     * })
     * 
     */
    delete<T extends attendanceDeleteArgs>(args: SelectSubset<T, attendanceDeleteArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Attendance.
     * @param {attendanceUpdateArgs} args - Arguments to update one Attendance.
     * @example
     * // Update one Attendance
     * const attendance = await prisma.attendance.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends attendanceUpdateArgs>(args: SelectSubset<T, attendanceUpdateArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Attendances.
     * @param {attendanceDeleteManyArgs} args - Arguments to filter Attendances to delete.
     * @example
     * // Delete a few Attendances
     * const { count } = await prisma.attendance.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends attendanceDeleteManyArgs>(args?: SelectSubset<T, attendanceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Attendances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Attendances
     * const attendance = await prisma.attendance.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends attendanceUpdateManyArgs>(args: SelectSubset<T, attendanceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Attendance.
     * @param {attendanceUpsertArgs} args - Arguments to update or create a Attendance.
     * @example
     * // Update or create a Attendance
     * const attendance = await prisma.attendance.upsert({
     *   create: {
     *     // ... data to create a Attendance
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Attendance we want to update
     *   }
     * })
     */
    upsert<T extends attendanceUpsertArgs>(args: SelectSubset<T, attendanceUpsertArgs<ExtArgs>>): Prisma__attendanceClient<$Result.GetResult<Prisma.$attendancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Attendances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceCountArgs} args - Arguments to filter Attendances to count.
     * @example
     * // Count the number of Attendances
     * const count = await prisma.attendance.count({
     *   where: {
     *     // ... the filter for the Attendances we want to count
     *   }
     * })
    **/
    count<T extends attendanceCountArgs>(
      args?: Subset<T, attendanceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AttendanceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Attendance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AttendanceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AttendanceAggregateArgs>(args: Subset<T, AttendanceAggregateArgs>): Prisma.PrismaPromise<GetAttendanceAggregateType<T>>

    /**
     * Group by Attendance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attendanceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends attendanceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: attendanceGroupByArgs['orderBy'] }
        : { orderBy?: attendanceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, attendanceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAttendanceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the attendance model
   */
  readonly fields: attendanceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for attendance.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__attendanceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee_attendance_createdByToemployee<T extends attendance$employee_attendance_createdByToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, attendance$employee_attendance_createdByToemployeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    employee_attendance_user_id_machineToemployee<T extends attendance$employee_attendance_user_id_machineToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, attendance$employee_attendance_user_id_machineToemployeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the attendance model
   */
  interface attendanceFieldRefs {
    readonly attendance_id: FieldRef<"attendance", 'String'>
    readonly user_id_machine: FieldRef<"attendance", 'String'>
    readonly check_in: FieldRef<"attendance", 'DateTime'>
    readonly check_out: FieldRef<"attendance", 'DateTime'>
    readonly check_in2: FieldRef<"attendance", 'DateTime'>
    readonly check_out2: FieldRef<"attendance", 'DateTime'>
    readonly type: FieldRef<"attendance", 'String'>
    readonly ijin_info: FieldRef<"attendance", 'String'>
    readonly description: FieldRef<"attendance", 'String'>
    readonly attachment: FieldRef<"attendance", 'String'>
    readonly createdBy: FieldRef<"attendance", 'String'>
    readonly createdAt: FieldRef<"attendance", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * attendance findUnique
   */
  export type attendanceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * Filter, which attendance to fetch.
     */
    where: attendanceWhereUniqueInput
  }

  /**
   * attendance findUniqueOrThrow
   */
  export type attendanceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * Filter, which attendance to fetch.
     */
    where: attendanceWhereUniqueInput
  }

  /**
   * attendance findFirst
   */
  export type attendanceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * Filter, which attendance to fetch.
     */
    where?: attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attendances to fetch.
     */
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for attendances.
     */
    cursor?: attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of attendances.
     */
    distinct?: AttendanceScalarFieldEnum | AttendanceScalarFieldEnum[]
  }

  /**
   * attendance findFirstOrThrow
   */
  export type attendanceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * Filter, which attendance to fetch.
     */
    where?: attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attendances to fetch.
     */
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for attendances.
     */
    cursor?: attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attendances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of attendances.
     */
    distinct?: AttendanceScalarFieldEnum | AttendanceScalarFieldEnum[]
  }

  /**
   * attendance findMany
   */
  export type attendanceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * Filter, which attendances to fetch.
     */
    where?: attendanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attendances to fetch.
     */
    orderBy?: attendanceOrderByWithRelationInput | attendanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing attendances.
     */
    cursor?: attendanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attendances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attendances.
     */
    skip?: number
    distinct?: AttendanceScalarFieldEnum | AttendanceScalarFieldEnum[]
  }

  /**
   * attendance create
   */
  export type attendanceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * The data needed to create a attendance.
     */
    data: XOR<attendanceCreateInput, attendanceUncheckedCreateInput>
  }

  /**
   * attendance createMany
   */
  export type attendanceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many attendances.
     */
    data: attendanceCreateManyInput | attendanceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * attendance update
   */
  export type attendanceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * The data needed to update a attendance.
     */
    data: XOR<attendanceUpdateInput, attendanceUncheckedUpdateInput>
    /**
     * Choose, which attendance to update.
     */
    where: attendanceWhereUniqueInput
  }

  /**
   * attendance updateMany
   */
  export type attendanceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update attendances.
     */
    data: XOR<attendanceUpdateManyMutationInput, attendanceUncheckedUpdateManyInput>
    /**
     * Filter which attendances to update
     */
    where?: attendanceWhereInput
    /**
     * Limit how many attendances to update.
     */
    limit?: number
  }

  /**
   * attendance upsert
   */
  export type attendanceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * The filter to search for the attendance to update in case it exists.
     */
    where: attendanceWhereUniqueInput
    /**
     * In case the attendance found by the `where` argument doesn't exist, create a new attendance with this data.
     */
    create: XOR<attendanceCreateInput, attendanceUncheckedCreateInput>
    /**
     * In case the attendance was found with the provided `where` argument, update it with this data.
     */
    update: XOR<attendanceUpdateInput, attendanceUncheckedUpdateInput>
  }

  /**
   * attendance delete
   */
  export type attendanceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
    /**
     * Filter which attendance to delete.
     */
    where: attendanceWhereUniqueInput
  }

  /**
   * attendance deleteMany
   */
  export type attendanceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which attendances to delete
     */
    where?: attendanceWhereInput
    /**
     * Limit how many attendances to delete.
     */
    limit?: number
  }

  /**
   * attendance.employee_attendance_createdByToemployee
   */
  export type attendance$employee_attendance_createdByToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * attendance.employee_attendance_user_id_machineToemployee
   */
  export type attendance$employee_attendance_user_id_machineToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * attendance without action
   */
  export type attendanceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attendance
     */
    select?: attendanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attendance
     */
    omit?: attendanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attendanceInclude<ExtArgs> | null
  }


  /**
   * Model temp_check_io
   */

  export type AggregateTemp_check_io = {
    _count: Temp_check_ioCountAggregateOutputType | null
    _min: Temp_check_ioMinAggregateOutputType | null
    _max: Temp_check_ioMaxAggregateOutputType | null
  }

  export type Temp_check_ioMinAggregateOutputType = {
    check_io_id: string | null
    user_id_machine: string | null
    datetime: Date | null
    type: string | null
  }

  export type Temp_check_ioMaxAggregateOutputType = {
    check_io_id: string | null
    user_id_machine: string | null
    datetime: Date | null
    type: string | null
  }

  export type Temp_check_ioCountAggregateOutputType = {
    check_io_id: number
    user_id_machine: number
    datetime: number
    type: number
    _all: number
  }


  export type Temp_check_ioMinAggregateInputType = {
    check_io_id?: true
    user_id_machine?: true
    datetime?: true
    type?: true
  }

  export type Temp_check_ioMaxAggregateInputType = {
    check_io_id?: true
    user_id_machine?: true
    datetime?: true
    type?: true
  }

  export type Temp_check_ioCountAggregateInputType = {
    check_io_id?: true
    user_id_machine?: true
    datetime?: true
    type?: true
    _all?: true
  }

  export type Temp_check_ioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which temp_check_io to aggregate.
     */
    where?: temp_check_ioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of temp_check_ios to fetch.
     */
    orderBy?: temp_check_ioOrderByWithRelationInput | temp_check_ioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: temp_check_ioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` temp_check_ios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` temp_check_ios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned temp_check_ios
    **/
    _count?: true | Temp_check_ioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Temp_check_ioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Temp_check_ioMaxAggregateInputType
  }

  export type GetTemp_check_ioAggregateType<T extends Temp_check_ioAggregateArgs> = {
        [P in keyof T & keyof AggregateTemp_check_io]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTemp_check_io[P]>
      : GetScalarType<T[P], AggregateTemp_check_io[P]>
  }




  export type temp_check_ioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: temp_check_ioWhereInput
    orderBy?: temp_check_ioOrderByWithAggregationInput | temp_check_ioOrderByWithAggregationInput[]
    by: Temp_check_ioScalarFieldEnum[] | Temp_check_ioScalarFieldEnum
    having?: temp_check_ioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Temp_check_ioCountAggregateInputType | true
    _min?: Temp_check_ioMinAggregateInputType
    _max?: Temp_check_ioMaxAggregateInputType
  }

  export type Temp_check_ioGroupByOutputType = {
    check_io_id: string
    user_id_machine: string
    datetime: Date
    type: string
    _count: Temp_check_ioCountAggregateOutputType | null
    _min: Temp_check_ioMinAggregateOutputType | null
    _max: Temp_check_ioMaxAggregateOutputType | null
  }

  type GetTemp_check_ioGroupByPayload<T extends temp_check_ioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Temp_check_ioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Temp_check_ioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Temp_check_ioGroupByOutputType[P]>
            : GetScalarType<T[P], Temp_check_ioGroupByOutputType[P]>
        }
      >
    >


  export type temp_check_ioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    check_io_id?: boolean
    user_id_machine?: boolean
    datetime?: boolean
    type?: boolean
  }, ExtArgs["result"]["temp_check_io"]>



  export type temp_check_ioSelectScalar = {
    check_io_id?: boolean
    user_id_machine?: boolean
    datetime?: boolean
    type?: boolean
  }

  export type temp_check_ioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"check_io_id" | "user_id_machine" | "datetime" | "type", ExtArgs["result"]["temp_check_io"]>

  export type $temp_check_ioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "temp_check_io"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      check_io_id: string
      user_id_machine: string
      datetime: Date
      type: string
    }, ExtArgs["result"]["temp_check_io"]>
    composites: {}
  }

  type temp_check_ioGetPayload<S extends boolean | null | undefined | temp_check_ioDefaultArgs> = $Result.GetResult<Prisma.$temp_check_ioPayload, S>

  type temp_check_ioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<temp_check_ioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Temp_check_ioCountAggregateInputType | true
    }

  export interface temp_check_ioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['temp_check_io'], meta: { name: 'temp_check_io' } }
    /**
     * Find zero or one Temp_check_io that matches the filter.
     * @param {temp_check_ioFindUniqueArgs} args - Arguments to find a Temp_check_io
     * @example
     * // Get one Temp_check_io
     * const temp_check_io = await prisma.temp_check_io.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends temp_check_ioFindUniqueArgs>(args: SelectSubset<T, temp_check_ioFindUniqueArgs<ExtArgs>>): Prisma__temp_check_ioClient<$Result.GetResult<Prisma.$temp_check_ioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Temp_check_io that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {temp_check_ioFindUniqueOrThrowArgs} args - Arguments to find a Temp_check_io
     * @example
     * // Get one Temp_check_io
     * const temp_check_io = await prisma.temp_check_io.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends temp_check_ioFindUniqueOrThrowArgs>(args: SelectSubset<T, temp_check_ioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__temp_check_ioClient<$Result.GetResult<Prisma.$temp_check_ioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Temp_check_io that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {temp_check_ioFindFirstArgs} args - Arguments to find a Temp_check_io
     * @example
     * // Get one Temp_check_io
     * const temp_check_io = await prisma.temp_check_io.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends temp_check_ioFindFirstArgs>(args?: SelectSubset<T, temp_check_ioFindFirstArgs<ExtArgs>>): Prisma__temp_check_ioClient<$Result.GetResult<Prisma.$temp_check_ioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Temp_check_io that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {temp_check_ioFindFirstOrThrowArgs} args - Arguments to find a Temp_check_io
     * @example
     * // Get one Temp_check_io
     * const temp_check_io = await prisma.temp_check_io.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends temp_check_ioFindFirstOrThrowArgs>(args?: SelectSubset<T, temp_check_ioFindFirstOrThrowArgs<ExtArgs>>): Prisma__temp_check_ioClient<$Result.GetResult<Prisma.$temp_check_ioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Temp_check_ios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {temp_check_ioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Temp_check_ios
     * const temp_check_ios = await prisma.temp_check_io.findMany()
     * 
     * // Get first 10 Temp_check_ios
     * const temp_check_ios = await prisma.temp_check_io.findMany({ take: 10 })
     * 
     * // Only select the `check_io_id`
     * const temp_check_ioWithCheck_io_idOnly = await prisma.temp_check_io.findMany({ select: { check_io_id: true } })
     * 
     */
    findMany<T extends temp_check_ioFindManyArgs>(args?: SelectSubset<T, temp_check_ioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$temp_check_ioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Temp_check_io.
     * @param {temp_check_ioCreateArgs} args - Arguments to create a Temp_check_io.
     * @example
     * // Create one Temp_check_io
     * const Temp_check_io = await prisma.temp_check_io.create({
     *   data: {
     *     // ... data to create a Temp_check_io
     *   }
     * })
     * 
     */
    create<T extends temp_check_ioCreateArgs>(args: SelectSubset<T, temp_check_ioCreateArgs<ExtArgs>>): Prisma__temp_check_ioClient<$Result.GetResult<Prisma.$temp_check_ioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Temp_check_ios.
     * @param {temp_check_ioCreateManyArgs} args - Arguments to create many Temp_check_ios.
     * @example
     * // Create many Temp_check_ios
     * const temp_check_io = await prisma.temp_check_io.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends temp_check_ioCreateManyArgs>(args?: SelectSubset<T, temp_check_ioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Temp_check_io.
     * @param {temp_check_ioDeleteArgs} args - Arguments to delete one Temp_check_io.
     * @example
     * // Delete one Temp_check_io
     * const Temp_check_io = await prisma.temp_check_io.delete({
     *   where: {
     *     // ... filter to delete one Temp_check_io
     *   }
     * })
     * 
     */
    delete<T extends temp_check_ioDeleteArgs>(args: SelectSubset<T, temp_check_ioDeleteArgs<ExtArgs>>): Prisma__temp_check_ioClient<$Result.GetResult<Prisma.$temp_check_ioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Temp_check_io.
     * @param {temp_check_ioUpdateArgs} args - Arguments to update one Temp_check_io.
     * @example
     * // Update one Temp_check_io
     * const temp_check_io = await prisma.temp_check_io.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends temp_check_ioUpdateArgs>(args: SelectSubset<T, temp_check_ioUpdateArgs<ExtArgs>>): Prisma__temp_check_ioClient<$Result.GetResult<Prisma.$temp_check_ioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Temp_check_ios.
     * @param {temp_check_ioDeleteManyArgs} args - Arguments to filter Temp_check_ios to delete.
     * @example
     * // Delete a few Temp_check_ios
     * const { count } = await prisma.temp_check_io.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends temp_check_ioDeleteManyArgs>(args?: SelectSubset<T, temp_check_ioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Temp_check_ios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {temp_check_ioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Temp_check_ios
     * const temp_check_io = await prisma.temp_check_io.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends temp_check_ioUpdateManyArgs>(args: SelectSubset<T, temp_check_ioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Temp_check_io.
     * @param {temp_check_ioUpsertArgs} args - Arguments to update or create a Temp_check_io.
     * @example
     * // Update or create a Temp_check_io
     * const temp_check_io = await prisma.temp_check_io.upsert({
     *   create: {
     *     // ... data to create a Temp_check_io
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Temp_check_io we want to update
     *   }
     * })
     */
    upsert<T extends temp_check_ioUpsertArgs>(args: SelectSubset<T, temp_check_ioUpsertArgs<ExtArgs>>): Prisma__temp_check_ioClient<$Result.GetResult<Prisma.$temp_check_ioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Temp_check_ios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {temp_check_ioCountArgs} args - Arguments to filter Temp_check_ios to count.
     * @example
     * // Count the number of Temp_check_ios
     * const count = await prisma.temp_check_io.count({
     *   where: {
     *     // ... the filter for the Temp_check_ios we want to count
     *   }
     * })
    **/
    count<T extends temp_check_ioCountArgs>(
      args?: Subset<T, temp_check_ioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Temp_check_ioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Temp_check_io.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Temp_check_ioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Temp_check_ioAggregateArgs>(args: Subset<T, Temp_check_ioAggregateArgs>): Prisma.PrismaPromise<GetTemp_check_ioAggregateType<T>>

    /**
     * Group by Temp_check_io.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {temp_check_ioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends temp_check_ioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: temp_check_ioGroupByArgs['orderBy'] }
        : { orderBy?: temp_check_ioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, temp_check_ioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTemp_check_ioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the temp_check_io model
   */
  readonly fields: temp_check_ioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for temp_check_io.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__temp_check_ioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the temp_check_io model
   */
  interface temp_check_ioFieldRefs {
    readonly check_io_id: FieldRef<"temp_check_io", 'String'>
    readonly user_id_machine: FieldRef<"temp_check_io", 'String'>
    readonly datetime: FieldRef<"temp_check_io", 'DateTime'>
    readonly type: FieldRef<"temp_check_io", 'String'>
  }
    

  // Custom InputTypes
  /**
   * temp_check_io findUnique
   */
  export type temp_check_ioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the temp_check_io
     */
    select?: temp_check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the temp_check_io
     */
    omit?: temp_check_ioOmit<ExtArgs> | null
    /**
     * Filter, which temp_check_io to fetch.
     */
    where: temp_check_ioWhereUniqueInput
  }

  /**
   * temp_check_io findUniqueOrThrow
   */
  export type temp_check_ioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the temp_check_io
     */
    select?: temp_check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the temp_check_io
     */
    omit?: temp_check_ioOmit<ExtArgs> | null
    /**
     * Filter, which temp_check_io to fetch.
     */
    where: temp_check_ioWhereUniqueInput
  }

  /**
   * temp_check_io findFirst
   */
  export type temp_check_ioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the temp_check_io
     */
    select?: temp_check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the temp_check_io
     */
    omit?: temp_check_ioOmit<ExtArgs> | null
    /**
     * Filter, which temp_check_io to fetch.
     */
    where?: temp_check_ioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of temp_check_ios to fetch.
     */
    orderBy?: temp_check_ioOrderByWithRelationInput | temp_check_ioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for temp_check_ios.
     */
    cursor?: temp_check_ioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` temp_check_ios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` temp_check_ios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of temp_check_ios.
     */
    distinct?: Temp_check_ioScalarFieldEnum | Temp_check_ioScalarFieldEnum[]
  }

  /**
   * temp_check_io findFirstOrThrow
   */
  export type temp_check_ioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the temp_check_io
     */
    select?: temp_check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the temp_check_io
     */
    omit?: temp_check_ioOmit<ExtArgs> | null
    /**
     * Filter, which temp_check_io to fetch.
     */
    where?: temp_check_ioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of temp_check_ios to fetch.
     */
    orderBy?: temp_check_ioOrderByWithRelationInput | temp_check_ioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for temp_check_ios.
     */
    cursor?: temp_check_ioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` temp_check_ios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` temp_check_ios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of temp_check_ios.
     */
    distinct?: Temp_check_ioScalarFieldEnum | Temp_check_ioScalarFieldEnum[]
  }

  /**
   * temp_check_io findMany
   */
  export type temp_check_ioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the temp_check_io
     */
    select?: temp_check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the temp_check_io
     */
    omit?: temp_check_ioOmit<ExtArgs> | null
    /**
     * Filter, which temp_check_ios to fetch.
     */
    where?: temp_check_ioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of temp_check_ios to fetch.
     */
    orderBy?: temp_check_ioOrderByWithRelationInput | temp_check_ioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing temp_check_ios.
     */
    cursor?: temp_check_ioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` temp_check_ios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` temp_check_ios.
     */
    skip?: number
    distinct?: Temp_check_ioScalarFieldEnum | Temp_check_ioScalarFieldEnum[]
  }

  /**
   * temp_check_io create
   */
  export type temp_check_ioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the temp_check_io
     */
    select?: temp_check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the temp_check_io
     */
    omit?: temp_check_ioOmit<ExtArgs> | null
    /**
     * The data needed to create a temp_check_io.
     */
    data: XOR<temp_check_ioCreateInput, temp_check_ioUncheckedCreateInput>
  }

  /**
   * temp_check_io createMany
   */
  export type temp_check_ioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many temp_check_ios.
     */
    data: temp_check_ioCreateManyInput | temp_check_ioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * temp_check_io update
   */
  export type temp_check_ioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the temp_check_io
     */
    select?: temp_check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the temp_check_io
     */
    omit?: temp_check_ioOmit<ExtArgs> | null
    /**
     * The data needed to update a temp_check_io.
     */
    data: XOR<temp_check_ioUpdateInput, temp_check_ioUncheckedUpdateInput>
    /**
     * Choose, which temp_check_io to update.
     */
    where: temp_check_ioWhereUniqueInput
  }

  /**
   * temp_check_io updateMany
   */
  export type temp_check_ioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update temp_check_ios.
     */
    data: XOR<temp_check_ioUpdateManyMutationInput, temp_check_ioUncheckedUpdateManyInput>
    /**
     * Filter which temp_check_ios to update
     */
    where?: temp_check_ioWhereInput
    /**
     * Limit how many temp_check_ios to update.
     */
    limit?: number
  }

  /**
   * temp_check_io upsert
   */
  export type temp_check_ioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the temp_check_io
     */
    select?: temp_check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the temp_check_io
     */
    omit?: temp_check_ioOmit<ExtArgs> | null
    /**
     * The filter to search for the temp_check_io to update in case it exists.
     */
    where: temp_check_ioWhereUniqueInput
    /**
     * In case the temp_check_io found by the `where` argument doesn't exist, create a new temp_check_io with this data.
     */
    create: XOR<temp_check_ioCreateInput, temp_check_ioUncheckedCreateInput>
    /**
     * In case the temp_check_io was found with the provided `where` argument, update it with this data.
     */
    update: XOR<temp_check_ioUpdateInput, temp_check_ioUncheckedUpdateInput>
  }

  /**
   * temp_check_io delete
   */
  export type temp_check_ioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the temp_check_io
     */
    select?: temp_check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the temp_check_io
     */
    omit?: temp_check_ioOmit<ExtArgs> | null
    /**
     * Filter which temp_check_io to delete.
     */
    where: temp_check_ioWhereUniqueInput
  }

  /**
   * temp_check_io deleteMany
   */
  export type temp_check_ioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which temp_check_ios to delete
     */
    where?: temp_check_ioWhereInput
    /**
     * Limit how many temp_check_ios to delete.
     */
    limit?: number
  }

  /**
   * temp_check_io without action
   */
  export type temp_check_ioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the temp_check_io
     */
    select?: temp_check_ioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the temp_check_io
     */
    omit?: temp_check_ioOmit<ExtArgs> | null
  }


  /**
   * Model calendar
   */

  export type AggregateCalendar = {
    _count: CalendarCountAggregateOutputType | null
    _min: CalendarMinAggregateOutputType | null
    _max: CalendarMaxAggregateOutputType | null
  }

  export type CalendarMinAggregateOutputType = {
    calendar_id: string | null
    description: string | null
    type: $Enums.calendar_type | null
    date: Date | null
  }

  export type CalendarMaxAggregateOutputType = {
    calendar_id: string | null
    description: string | null
    type: $Enums.calendar_type | null
    date: Date | null
  }

  export type CalendarCountAggregateOutputType = {
    calendar_id: number
    description: number
    type: number
    date: number
    _all: number
  }


  export type CalendarMinAggregateInputType = {
    calendar_id?: true
    description?: true
    type?: true
    date?: true
  }

  export type CalendarMaxAggregateInputType = {
    calendar_id?: true
    description?: true
    type?: true
    date?: true
  }

  export type CalendarCountAggregateInputType = {
    calendar_id?: true
    description?: true
    type?: true
    date?: true
    _all?: true
  }

  export type CalendarAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which calendar to aggregate.
     */
    where?: calendarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of calendars to fetch.
     */
    orderBy?: calendarOrderByWithRelationInput | calendarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: calendarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` calendars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` calendars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned calendars
    **/
    _count?: true | CalendarCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CalendarMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CalendarMaxAggregateInputType
  }

  export type GetCalendarAggregateType<T extends CalendarAggregateArgs> = {
        [P in keyof T & keyof AggregateCalendar]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCalendar[P]>
      : GetScalarType<T[P], AggregateCalendar[P]>
  }




  export type calendarGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: calendarWhereInput
    orderBy?: calendarOrderByWithAggregationInput | calendarOrderByWithAggregationInput[]
    by: CalendarScalarFieldEnum[] | CalendarScalarFieldEnum
    having?: calendarScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CalendarCountAggregateInputType | true
    _min?: CalendarMinAggregateInputType
    _max?: CalendarMaxAggregateInputType
  }

  export type CalendarGroupByOutputType = {
    calendar_id: string
    description: string | null
    type: $Enums.calendar_type | null
    date: Date | null
    _count: CalendarCountAggregateOutputType | null
    _min: CalendarMinAggregateOutputType | null
    _max: CalendarMaxAggregateOutputType | null
  }

  type GetCalendarGroupByPayload<T extends calendarGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CalendarGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CalendarGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CalendarGroupByOutputType[P]>
            : GetScalarType<T[P], CalendarGroupByOutputType[P]>
        }
      >
    >


  export type calendarSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    calendar_id?: boolean
    description?: boolean
    type?: boolean
    date?: boolean
  }, ExtArgs["result"]["calendar"]>



  export type calendarSelectScalar = {
    calendar_id?: boolean
    description?: boolean
    type?: boolean
    date?: boolean
  }

  export type calendarOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"calendar_id" | "description" | "type" | "date", ExtArgs["result"]["calendar"]>

  export type $calendarPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "calendar"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      calendar_id: string
      description: string | null
      type: $Enums.calendar_type | null
      date: Date | null
    }, ExtArgs["result"]["calendar"]>
    composites: {}
  }

  type calendarGetPayload<S extends boolean | null | undefined | calendarDefaultArgs> = $Result.GetResult<Prisma.$calendarPayload, S>

  type calendarCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<calendarFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CalendarCountAggregateInputType | true
    }

  export interface calendarDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['calendar'], meta: { name: 'calendar' } }
    /**
     * Find zero or one Calendar that matches the filter.
     * @param {calendarFindUniqueArgs} args - Arguments to find a Calendar
     * @example
     * // Get one Calendar
     * const calendar = await prisma.calendar.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends calendarFindUniqueArgs>(args: SelectSubset<T, calendarFindUniqueArgs<ExtArgs>>): Prisma__calendarClient<$Result.GetResult<Prisma.$calendarPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Calendar that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {calendarFindUniqueOrThrowArgs} args - Arguments to find a Calendar
     * @example
     * // Get one Calendar
     * const calendar = await prisma.calendar.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends calendarFindUniqueOrThrowArgs>(args: SelectSubset<T, calendarFindUniqueOrThrowArgs<ExtArgs>>): Prisma__calendarClient<$Result.GetResult<Prisma.$calendarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Calendar that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {calendarFindFirstArgs} args - Arguments to find a Calendar
     * @example
     * // Get one Calendar
     * const calendar = await prisma.calendar.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends calendarFindFirstArgs>(args?: SelectSubset<T, calendarFindFirstArgs<ExtArgs>>): Prisma__calendarClient<$Result.GetResult<Prisma.$calendarPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Calendar that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {calendarFindFirstOrThrowArgs} args - Arguments to find a Calendar
     * @example
     * // Get one Calendar
     * const calendar = await prisma.calendar.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends calendarFindFirstOrThrowArgs>(args?: SelectSubset<T, calendarFindFirstOrThrowArgs<ExtArgs>>): Prisma__calendarClient<$Result.GetResult<Prisma.$calendarPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Calendars that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {calendarFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Calendars
     * const calendars = await prisma.calendar.findMany()
     * 
     * // Get first 10 Calendars
     * const calendars = await prisma.calendar.findMany({ take: 10 })
     * 
     * // Only select the `calendar_id`
     * const calendarWithCalendar_idOnly = await prisma.calendar.findMany({ select: { calendar_id: true } })
     * 
     */
    findMany<T extends calendarFindManyArgs>(args?: SelectSubset<T, calendarFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$calendarPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Calendar.
     * @param {calendarCreateArgs} args - Arguments to create a Calendar.
     * @example
     * // Create one Calendar
     * const Calendar = await prisma.calendar.create({
     *   data: {
     *     // ... data to create a Calendar
     *   }
     * })
     * 
     */
    create<T extends calendarCreateArgs>(args: SelectSubset<T, calendarCreateArgs<ExtArgs>>): Prisma__calendarClient<$Result.GetResult<Prisma.$calendarPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Calendars.
     * @param {calendarCreateManyArgs} args - Arguments to create many Calendars.
     * @example
     * // Create many Calendars
     * const calendar = await prisma.calendar.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends calendarCreateManyArgs>(args?: SelectSubset<T, calendarCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Calendar.
     * @param {calendarDeleteArgs} args - Arguments to delete one Calendar.
     * @example
     * // Delete one Calendar
     * const Calendar = await prisma.calendar.delete({
     *   where: {
     *     // ... filter to delete one Calendar
     *   }
     * })
     * 
     */
    delete<T extends calendarDeleteArgs>(args: SelectSubset<T, calendarDeleteArgs<ExtArgs>>): Prisma__calendarClient<$Result.GetResult<Prisma.$calendarPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Calendar.
     * @param {calendarUpdateArgs} args - Arguments to update one Calendar.
     * @example
     * // Update one Calendar
     * const calendar = await prisma.calendar.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends calendarUpdateArgs>(args: SelectSubset<T, calendarUpdateArgs<ExtArgs>>): Prisma__calendarClient<$Result.GetResult<Prisma.$calendarPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Calendars.
     * @param {calendarDeleteManyArgs} args - Arguments to filter Calendars to delete.
     * @example
     * // Delete a few Calendars
     * const { count } = await prisma.calendar.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends calendarDeleteManyArgs>(args?: SelectSubset<T, calendarDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Calendars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {calendarUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Calendars
     * const calendar = await prisma.calendar.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends calendarUpdateManyArgs>(args: SelectSubset<T, calendarUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Calendar.
     * @param {calendarUpsertArgs} args - Arguments to update or create a Calendar.
     * @example
     * // Update or create a Calendar
     * const calendar = await prisma.calendar.upsert({
     *   create: {
     *     // ... data to create a Calendar
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Calendar we want to update
     *   }
     * })
     */
    upsert<T extends calendarUpsertArgs>(args: SelectSubset<T, calendarUpsertArgs<ExtArgs>>): Prisma__calendarClient<$Result.GetResult<Prisma.$calendarPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Calendars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {calendarCountArgs} args - Arguments to filter Calendars to count.
     * @example
     * // Count the number of Calendars
     * const count = await prisma.calendar.count({
     *   where: {
     *     // ... the filter for the Calendars we want to count
     *   }
     * })
    **/
    count<T extends calendarCountArgs>(
      args?: Subset<T, calendarCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CalendarCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Calendar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalendarAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CalendarAggregateArgs>(args: Subset<T, CalendarAggregateArgs>): Prisma.PrismaPromise<GetCalendarAggregateType<T>>

    /**
     * Group by Calendar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {calendarGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends calendarGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: calendarGroupByArgs['orderBy'] }
        : { orderBy?: calendarGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, calendarGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCalendarGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the calendar model
   */
  readonly fields: calendarFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for calendar.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__calendarClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the calendar model
   */
  interface calendarFieldRefs {
    readonly calendar_id: FieldRef<"calendar", 'String'>
    readonly description: FieldRef<"calendar", 'String'>
    readonly type: FieldRef<"calendar", 'calendar_type'>
    readonly date: FieldRef<"calendar", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * calendar findUnique
   */
  export type calendarFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the calendar
     */
    select?: calendarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the calendar
     */
    omit?: calendarOmit<ExtArgs> | null
    /**
     * Filter, which calendar to fetch.
     */
    where: calendarWhereUniqueInput
  }

  /**
   * calendar findUniqueOrThrow
   */
  export type calendarFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the calendar
     */
    select?: calendarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the calendar
     */
    omit?: calendarOmit<ExtArgs> | null
    /**
     * Filter, which calendar to fetch.
     */
    where: calendarWhereUniqueInput
  }

  /**
   * calendar findFirst
   */
  export type calendarFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the calendar
     */
    select?: calendarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the calendar
     */
    omit?: calendarOmit<ExtArgs> | null
    /**
     * Filter, which calendar to fetch.
     */
    where?: calendarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of calendars to fetch.
     */
    orderBy?: calendarOrderByWithRelationInput | calendarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for calendars.
     */
    cursor?: calendarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` calendars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` calendars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of calendars.
     */
    distinct?: CalendarScalarFieldEnum | CalendarScalarFieldEnum[]
  }

  /**
   * calendar findFirstOrThrow
   */
  export type calendarFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the calendar
     */
    select?: calendarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the calendar
     */
    omit?: calendarOmit<ExtArgs> | null
    /**
     * Filter, which calendar to fetch.
     */
    where?: calendarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of calendars to fetch.
     */
    orderBy?: calendarOrderByWithRelationInput | calendarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for calendars.
     */
    cursor?: calendarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` calendars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` calendars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of calendars.
     */
    distinct?: CalendarScalarFieldEnum | CalendarScalarFieldEnum[]
  }

  /**
   * calendar findMany
   */
  export type calendarFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the calendar
     */
    select?: calendarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the calendar
     */
    omit?: calendarOmit<ExtArgs> | null
    /**
     * Filter, which calendars to fetch.
     */
    where?: calendarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of calendars to fetch.
     */
    orderBy?: calendarOrderByWithRelationInput | calendarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing calendars.
     */
    cursor?: calendarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` calendars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` calendars.
     */
    skip?: number
    distinct?: CalendarScalarFieldEnum | CalendarScalarFieldEnum[]
  }

  /**
   * calendar create
   */
  export type calendarCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the calendar
     */
    select?: calendarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the calendar
     */
    omit?: calendarOmit<ExtArgs> | null
    /**
     * The data needed to create a calendar.
     */
    data: XOR<calendarCreateInput, calendarUncheckedCreateInput>
  }

  /**
   * calendar createMany
   */
  export type calendarCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many calendars.
     */
    data: calendarCreateManyInput | calendarCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * calendar update
   */
  export type calendarUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the calendar
     */
    select?: calendarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the calendar
     */
    omit?: calendarOmit<ExtArgs> | null
    /**
     * The data needed to update a calendar.
     */
    data: XOR<calendarUpdateInput, calendarUncheckedUpdateInput>
    /**
     * Choose, which calendar to update.
     */
    where: calendarWhereUniqueInput
  }

  /**
   * calendar updateMany
   */
  export type calendarUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update calendars.
     */
    data: XOR<calendarUpdateManyMutationInput, calendarUncheckedUpdateManyInput>
    /**
     * Filter which calendars to update
     */
    where?: calendarWhereInput
    /**
     * Limit how many calendars to update.
     */
    limit?: number
  }

  /**
   * calendar upsert
   */
  export type calendarUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the calendar
     */
    select?: calendarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the calendar
     */
    omit?: calendarOmit<ExtArgs> | null
    /**
     * The filter to search for the calendar to update in case it exists.
     */
    where: calendarWhereUniqueInput
    /**
     * In case the calendar found by the `where` argument doesn't exist, create a new calendar with this data.
     */
    create: XOR<calendarCreateInput, calendarUncheckedCreateInput>
    /**
     * In case the calendar was found with the provided `where` argument, update it with this data.
     */
    update: XOR<calendarUpdateInput, calendarUncheckedUpdateInput>
  }

  /**
   * calendar delete
   */
  export type calendarDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the calendar
     */
    select?: calendarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the calendar
     */
    omit?: calendarOmit<ExtArgs> | null
    /**
     * Filter which calendar to delete.
     */
    where: calendarWhereUniqueInput
  }

  /**
   * calendar deleteMany
   */
  export type calendarDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which calendars to delete
     */
    where?: calendarWhereInput
    /**
     * Limit how many calendars to delete.
     */
    limit?: number
  }

  /**
   * calendar without action
   */
  export type calendarDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the calendar
     */
    select?: calendarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the calendar
     */
    omit?: calendarOmit<ExtArgs> | null
  }


  /**
   * Model setting
   */

  export type AggregateSetting = {
    _count: SettingCountAggregateOutputType | null
    _avg: SettingAvgAggregateOutputType | null
    _sum: SettingSumAggregateOutputType | null
    _min: SettingMinAggregateOutputType | null
    _max: SettingMaxAggregateOutputType | null
  }

  export type SettingAvgAggregateOutputType = {
    start_periode: number | null
    end_periode: number | null
  }

  export type SettingSumAggregateOutputType = {
    start_periode: number | null
    end_periode: number | null
  }

  export type SettingMinAggregateOutputType = {
    setting_id: string | null
    start_periode: number | null
    end_periode: number | null
  }

  export type SettingMaxAggregateOutputType = {
    setting_id: string | null
    start_periode: number | null
    end_periode: number | null
  }

  export type SettingCountAggregateOutputType = {
    setting_id: number
    start_periode: number
    end_periode: number
    _all: number
  }


  export type SettingAvgAggregateInputType = {
    start_periode?: true
    end_periode?: true
  }

  export type SettingSumAggregateInputType = {
    start_periode?: true
    end_periode?: true
  }

  export type SettingMinAggregateInputType = {
    setting_id?: true
    start_periode?: true
    end_periode?: true
  }

  export type SettingMaxAggregateInputType = {
    setting_id?: true
    start_periode?: true
    end_periode?: true
  }

  export type SettingCountAggregateInputType = {
    setting_id?: true
    start_periode?: true
    end_periode?: true
    _all?: true
  }

  export type SettingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which setting to aggregate.
     */
    where?: settingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of settings to fetch.
     */
    orderBy?: settingOrderByWithRelationInput | settingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: settingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned settings
    **/
    _count?: true | SettingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SettingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SettingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SettingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SettingMaxAggregateInputType
  }

  export type GetSettingAggregateType<T extends SettingAggregateArgs> = {
        [P in keyof T & keyof AggregateSetting]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSetting[P]>
      : GetScalarType<T[P], AggregateSetting[P]>
  }




  export type settingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: settingWhereInput
    orderBy?: settingOrderByWithAggregationInput | settingOrderByWithAggregationInput[]
    by: SettingScalarFieldEnum[] | SettingScalarFieldEnum
    having?: settingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SettingCountAggregateInputType | true
    _avg?: SettingAvgAggregateInputType
    _sum?: SettingSumAggregateInputType
    _min?: SettingMinAggregateInputType
    _max?: SettingMaxAggregateInputType
  }

  export type SettingGroupByOutputType = {
    setting_id: string
    start_periode: number
    end_periode: number
    _count: SettingCountAggregateOutputType | null
    _avg: SettingAvgAggregateOutputType | null
    _sum: SettingSumAggregateOutputType | null
    _min: SettingMinAggregateOutputType | null
    _max: SettingMaxAggregateOutputType | null
  }

  type GetSettingGroupByPayload<T extends settingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SettingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SettingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SettingGroupByOutputType[P]>
            : GetScalarType<T[P], SettingGroupByOutputType[P]>
        }
      >
    >


  export type settingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    setting_id?: boolean
    start_periode?: boolean
    end_periode?: boolean
  }, ExtArgs["result"]["setting"]>



  export type settingSelectScalar = {
    setting_id?: boolean
    start_periode?: boolean
    end_periode?: boolean
  }

  export type settingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"setting_id" | "start_periode" | "end_periode", ExtArgs["result"]["setting"]>

  export type $settingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "setting"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      setting_id: string
      start_periode: number
      end_periode: number
    }, ExtArgs["result"]["setting"]>
    composites: {}
  }

  type settingGetPayload<S extends boolean | null | undefined | settingDefaultArgs> = $Result.GetResult<Prisma.$settingPayload, S>

  type settingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<settingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SettingCountAggregateInputType | true
    }

  export interface settingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['setting'], meta: { name: 'setting' } }
    /**
     * Find zero or one Setting that matches the filter.
     * @param {settingFindUniqueArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends settingFindUniqueArgs>(args: SelectSubset<T, settingFindUniqueArgs<ExtArgs>>): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Setting that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {settingFindUniqueOrThrowArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends settingFindUniqueOrThrowArgs>(args: SelectSubset<T, settingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Setting that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingFindFirstArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends settingFindFirstArgs>(args?: SelectSubset<T, settingFindFirstArgs<ExtArgs>>): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Setting that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingFindFirstOrThrowArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends settingFindFirstOrThrowArgs>(args?: SelectSubset<T, settingFindFirstOrThrowArgs<ExtArgs>>): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Settings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Settings
     * const settings = await prisma.setting.findMany()
     * 
     * // Get first 10 Settings
     * const settings = await prisma.setting.findMany({ take: 10 })
     * 
     * // Only select the `setting_id`
     * const settingWithSetting_idOnly = await prisma.setting.findMany({ select: { setting_id: true } })
     * 
     */
    findMany<T extends settingFindManyArgs>(args?: SelectSubset<T, settingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Setting.
     * @param {settingCreateArgs} args - Arguments to create a Setting.
     * @example
     * // Create one Setting
     * const Setting = await prisma.setting.create({
     *   data: {
     *     // ... data to create a Setting
     *   }
     * })
     * 
     */
    create<T extends settingCreateArgs>(args: SelectSubset<T, settingCreateArgs<ExtArgs>>): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Settings.
     * @param {settingCreateManyArgs} args - Arguments to create many Settings.
     * @example
     * // Create many Settings
     * const setting = await prisma.setting.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends settingCreateManyArgs>(args?: SelectSubset<T, settingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Setting.
     * @param {settingDeleteArgs} args - Arguments to delete one Setting.
     * @example
     * // Delete one Setting
     * const Setting = await prisma.setting.delete({
     *   where: {
     *     // ... filter to delete one Setting
     *   }
     * })
     * 
     */
    delete<T extends settingDeleteArgs>(args: SelectSubset<T, settingDeleteArgs<ExtArgs>>): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Setting.
     * @param {settingUpdateArgs} args - Arguments to update one Setting.
     * @example
     * // Update one Setting
     * const setting = await prisma.setting.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends settingUpdateArgs>(args: SelectSubset<T, settingUpdateArgs<ExtArgs>>): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Settings.
     * @param {settingDeleteManyArgs} args - Arguments to filter Settings to delete.
     * @example
     * // Delete a few Settings
     * const { count } = await prisma.setting.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends settingDeleteManyArgs>(args?: SelectSubset<T, settingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Settings
     * const setting = await prisma.setting.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends settingUpdateManyArgs>(args: SelectSubset<T, settingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Setting.
     * @param {settingUpsertArgs} args - Arguments to update or create a Setting.
     * @example
     * // Update or create a Setting
     * const setting = await prisma.setting.upsert({
     *   create: {
     *     // ... data to create a Setting
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Setting we want to update
     *   }
     * })
     */
    upsert<T extends settingUpsertArgs>(args: SelectSubset<T, settingUpsertArgs<ExtArgs>>): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingCountArgs} args - Arguments to filter Settings to count.
     * @example
     * // Count the number of Settings
     * const count = await prisma.setting.count({
     *   where: {
     *     // ... the filter for the Settings we want to count
     *   }
     * })
    **/
    count<T extends settingCountArgs>(
      args?: Subset<T, settingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SettingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Setting.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SettingAggregateArgs>(args: Subset<T, SettingAggregateArgs>): Prisma.PrismaPromise<GetSettingAggregateType<T>>

    /**
     * Group by Setting.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends settingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: settingGroupByArgs['orderBy'] }
        : { orderBy?: settingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, settingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSettingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the setting model
   */
  readonly fields: settingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for setting.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__settingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the setting model
   */
  interface settingFieldRefs {
    readonly setting_id: FieldRef<"setting", 'String'>
    readonly start_periode: FieldRef<"setting", 'Int'>
    readonly end_periode: FieldRef<"setting", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * setting findUnique
   */
  export type settingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the setting
     */
    omit?: settingOmit<ExtArgs> | null
    /**
     * Filter, which setting to fetch.
     */
    where: settingWhereUniqueInput
  }

  /**
   * setting findUniqueOrThrow
   */
  export type settingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the setting
     */
    omit?: settingOmit<ExtArgs> | null
    /**
     * Filter, which setting to fetch.
     */
    where: settingWhereUniqueInput
  }

  /**
   * setting findFirst
   */
  export type settingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the setting
     */
    omit?: settingOmit<ExtArgs> | null
    /**
     * Filter, which setting to fetch.
     */
    where?: settingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of settings to fetch.
     */
    orderBy?: settingOrderByWithRelationInput | settingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for settings.
     */
    cursor?: settingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of settings.
     */
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }

  /**
   * setting findFirstOrThrow
   */
  export type settingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the setting
     */
    omit?: settingOmit<ExtArgs> | null
    /**
     * Filter, which setting to fetch.
     */
    where?: settingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of settings to fetch.
     */
    orderBy?: settingOrderByWithRelationInput | settingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for settings.
     */
    cursor?: settingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of settings.
     */
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }

  /**
   * setting findMany
   */
  export type settingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the setting
     */
    omit?: settingOmit<ExtArgs> | null
    /**
     * Filter, which settings to fetch.
     */
    where?: settingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of settings to fetch.
     */
    orderBy?: settingOrderByWithRelationInput | settingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing settings.
     */
    cursor?: settingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` settings.
     */
    skip?: number
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }

  /**
   * setting create
   */
  export type settingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the setting
     */
    omit?: settingOmit<ExtArgs> | null
    /**
     * The data needed to create a setting.
     */
    data: XOR<settingCreateInput, settingUncheckedCreateInput>
  }

  /**
   * setting createMany
   */
  export type settingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many settings.
     */
    data: settingCreateManyInput | settingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * setting update
   */
  export type settingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the setting
     */
    omit?: settingOmit<ExtArgs> | null
    /**
     * The data needed to update a setting.
     */
    data: XOR<settingUpdateInput, settingUncheckedUpdateInput>
    /**
     * Choose, which setting to update.
     */
    where: settingWhereUniqueInput
  }

  /**
   * setting updateMany
   */
  export type settingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update settings.
     */
    data: XOR<settingUpdateManyMutationInput, settingUncheckedUpdateManyInput>
    /**
     * Filter which settings to update
     */
    where?: settingWhereInput
    /**
     * Limit how many settings to update.
     */
    limit?: number
  }

  /**
   * setting upsert
   */
  export type settingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the setting
     */
    omit?: settingOmit<ExtArgs> | null
    /**
     * The filter to search for the setting to update in case it exists.
     */
    where: settingWhereUniqueInput
    /**
     * In case the setting found by the `where` argument doesn't exist, create a new setting with this data.
     */
    create: XOR<settingCreateInput, settingUncheckedCreateInput>
    /**
     * In case the setting was found with the provided `where` argument, update it with this data.
     */
    update: XOR<settingUpdateInput, settingUncheckedUpdateInput>
  }

  /**
   * setting delete
   */
  export type settingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the setting
     */
    omit?: settingOmit<ExtArgs> | null
    /**
     * Filter which setting to delete.
     */
    where: settingWhereUniqueInput
  }

  /**
   * setting deleteMany
   */
  export type settingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which settings to delete
     */
    where?: settingWhereInput
    /**
     * Limit how many settings to delete.
     */
    limit?: number
  }

  /**
   * setting without action
   */
  export type settingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the setting
     */
    omit?: settingOmit<ExtArgs> | null
  }


  /**
   * Model spl
   */

  export type AggregateSpl = {
    _count: SplCountAggregateOutputType | null
    _min: SplMinAggregateOutputType | null
    _max: SplMaxAggregateOutputType | null
  }

  export type SplMinAggregateOutputType = {
    spl_id: string | null
    purpose: string | null
    est_start: Date | null
    est_end: Date | null
    status1: $Enums.spl_status1 | null
    approval1: string | null
    status2: $Enums.spl_status2 | null
    approval2: string | null
    createdAt: Date | null
  }

  export type SplMaxAggregateOutputType = {
    spl_id: string | null
    purpose: string | null
    est_start: Date | null
    est_end: Date | null
    status1: $Enums.spl_status1 | null
    approval1: string | null
    status2: $Enums.spl_status2 | null
    approval2: string | null
    createdAt: Date | null
  }

  export type SplCountAggregateOutputType = {
    spl_id: number
    purpose: number
    est_start: number
    est_end: number
    status1: number
    approval1: number
    status2: number
    approval2: number
    createdAt: number
    _all: number
  }


  export type SplMinAggregateInputType = {
    spl_id?: true
    purpose?: true
    est_start?: true
    est_end?: true
    status1?: true
    approval1?: true
    status2?: true
    approval2?: true
    createdAt?: true
  }

  export type SplMaxAggregateInputType = {
    spl_id?: true
    purpose?: true
    est_start?: true
    est_end?: true
    status1?: true
    approval1?: true
    status2?: true
    approval2?: true
    createdAt?: true
  }

  export type SplCountAggregateInputType = {
    spl_id?: true
    purpose?: true
    est_start?: true
    est_end?: true
    status1?: true
    approval1?: true
    status2?: true
    approval2?: true
    createdAt?: true
    _all?: true
  }

  export type SplAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which spl to aggregate.
     */
    where?: splWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spls to fetch.
     */
    orderBy?: splOrderByWithRelationInput | splOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: splWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned spls
    **/
    _count?: true | SplCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SplMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SplMaxAggregateInputType
  }

  export type GetSplAggregateType<T extends SplAggregateArgs> = {
        [P in keyof T & keyof AggregateSpl]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSpl[P]>
      : GetScalarType<T[P], AggregateSpl[P]>
  }




  export type splGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: splWhereInput
    orderBy?: splOrderByWithAggregationInput | splOrderByWithAggregationInput[]
    by: SplScalarFieldEnum[] | SplScalarFieldEnum
    having?: splScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SplCountAggregateInputType | true
    _min?: SplMinAggregateInputType
    _max?: SplMaxAggregateInputType
  }

  export type SplGroupByOutputType = {
    spl_id: string
    purpose: string
    est_start: Date
    est_end: Date
    status1: $Enums.spl_status1
    approval1: string | null
    status2: $Enums.spl_status2
    approval2: string | null
    createdAt: Date
    _count: SplCountAggregateOutputType | null
    _min: SplMinAggregateOutputType | null
    _max: SplMaxAggregateOutputType | null
  }

  type GetSplGroupByPayload<T extends splGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SplGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SplGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SplGroupByOutputType[P]>
            : GetScalarType<T[P], SplGroupByOutputType[P]>
        }
      >
    >


  export type splSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    spl_id?: boolean
    purpose?: boolean
    est_start?: boolean
    est_end?: boolean
    status1?: boolean
    approval1?: boolean
    status2?: boolean
    approval2?: boolean
    createdAt?: boolean
    employee_spl_approval1Toemployee?: boolean | spl$employee_spl_approval1ToemployeeArgs<ExtArgs>
    employee_spl_approval2Toemployee?: boolean | spl$employee_spl_approval2ToemployeeArgs<ExtArgs>
    spl_detail?: boolean | spl$spl_detailArgs<ExtArgs>
    srl?: boolean | spl$srlArgs<ExtArgs>
    _count?: boolean | SplCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["spl"]>



  export type splSelectScalar = {
    spl_id?: boolean
    purpose?: boolean
    est_start?: boolean
    est_end?: boolean
    status1?: boolean
    approval1?: boolean
    status2?: boolean
    approval2?: boolean
    createdAt?: boolean
  }

  export type splOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"spl_id" | "purpose" | "est_start" | "est_end" | "status1" | "approval1" | "status2" | "approval2" | "createdAt", ExtArgs["result"]["spl"]>
  export type splInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee_spl_approval1Toemployee?: boolean | spl$employee_spl_approval1ToemployeeArgs<ExtArgs>
    employee_spl_approval2Toemployee?: boolean | spl$employee_spl_approval2ToemployeeArgs<ExtArgs>
    spl_detail?: boolean | spl$spl_detailArgs<ExtArgs>
    srl?: boolean | spl$srlArgs<ExtArgs>
    _count?: boolean | SplCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $splPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "spl"
    objects: {
      employee_spl_approval1Toemployee: Prisma.$employeePayload<ExtArgs> | null
      employee_spl_approval2Toemployee: Prisma.$employeePayload<ExtArgs> | null
      spl_detail: Prisma.$spl_detailPayload<ExtArgs>[]
      srl: Prisma.$srlPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      spl_id: string
      purpose: string
      est_start: Date
      est_end: Date
      status1: $Enums.spl_status1
      approval1: string | null
      status2: $Enums.spl_status2
      approval2: string | null
      createdAt: Date
    }, ExtArgs["result"]["spl"]>
    composites: {}
  }

  type splGetPayload<S extends boolean | null | undefined | splDefaultArgs> = $Result.GetResult<Prisma.$splPayload, S>

  type splCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<splFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SplCountAggregateInputType | true
    }

  export interface splDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['spl'], meta: { name: 'spl' } }
    /**
     * Find zero or one Spl that matches the filter.
     * @param {splFindUniqueArgs} args - Arguments to find a Spl
     * @example
     * // Get one Spl
     * const spl = await prisma.spl.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends splFindUniqueArgs>(args: SelectSubset<T, splFindUniqueArgs<ExtArgs>>): Prisma__splClient<$Result.GetResult<Prisma.$splPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Spl that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {splFindUniqueOrThrowArgs} args - Arguments to find a Spl
     * @example
     * // Get one Spl
     * const spl = await prisma.spl.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends splFindUniqueOrThrowArgs>(args: SelectSubset<T, splFindUniqueOrThrowArgs<ExtArgs>>): Prisma__splClient<$Result.GetResult<Prisma.$splPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Spl that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {splFindFirstArgs} args - Arguments to find a Spl
     * @example
     * // Get one Spl
     * const spl = await prisma.spl.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends splFindFirstArgs>(args?: SelectSubset<T, splFindFirstArgs<ExtArgs>>): Prisma__splClient<$Result.GetResult<Prisma.$splPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Spl that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {splFindFirstOrThrowArgs} args - Arguments to find a Spl
     * @example
     * // Get one Spl
     * const spl = await prisma.spl.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends splFindFirstOrThrowArgs>(args?: SelectSubset<T, splFindFirstOrThrowArgs<ExtArgs>>): Prisma__splClient<$Result.GetResult<Prisma.$splPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Spls that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {splFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Spls
     * const spls = await prisma.spl.findMany()
     * 
     * // Get first 10 Spls
     * const spls = await prisma.spl.findMany({ take: 10 })
     * 
     * // Only select the `spl_id`
     * const splWithSpl_idOnly = await prisma.spl.findMany({ select: { spl_id: true } })
     * 
     */
    findMany<T extends splFindManyArgs>(args?: SelectSubset<T, splFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$splPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Spl.
     * @param {splCreateArgs} args - Arguments to create a Spl.
     * @example
     * // Create one Spl
     * const Spl = await prisma.spl.create({
     *   data: {
     *     // ... data to create a Spl
     *   }
     * })
     * 
     */
    create<T extends splCreateArgs>(args: SelectSubset<T, splCreateArgs<ExtArgs>>): Prisma__splClient<$Result.GetResult<Prisma.$splPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Spls.
     * @param {splCreateManyArgs} args - Arguments to create many Spls.
     * @example
     * // Create many Spls
     * const spl = await prisma.spl.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends splCreateManyArgs>(args?: SelectSubset<T, splCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Spl.
     * @param {splDeleteArgs} args - Arguments to delete one Spl.
     * @example
     * // Delete one Spl
     * const Spl = await prisma.spl.delete({
     *   where: {
     *     // ... filter to delete one Spl
     *   }
     * })
     * 
     */
    delete<T extends splDeleteArgs>(args: SelectSubset<T, splDeleteArgs<ExtArgs>>): Prisma__splClient<$Result.GetResult<Prisma.$splPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Spl.
     * @param {splUpdateArgs} args - Arguments to update one Spl.
     * @example
     * // Update one Spl
     * const spl = await prisma.spl.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends splUpdateArgs>(args: SelectSubset<T, splUpdateArgs<ExtArgs>>): Prisma__splClient<$Result.GetResult<Prisma.$splPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Spls.
     * @param {splDeleteManyArgs} args - Arguments to filter Spls to delete.
     * @example
     * // Delete a few Spls
     * const { count } = await prisma.spl.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends splDeleteManyArgs>(args?: SelectSubset<T, splDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Spls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {splUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Spls
     * const spl = await prisma.spl.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends splUpdateManyArgs>(args: SelectSubset<T, splUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Spl.
     * @param {splUpsertArgs} args - Arguments to update or create a Spl.
     * @example
     * // Update or create a Spl
     * const spl = await prisma.spl.upsert({
     *   create: {
     *     // ... data to create a Spl
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Spl we want to update
     *   }
     * })
     */
    upsert<T extends splUpsertArgs>(args: SelectSubset<T, splUpsertArgs<ExtArgs>>): Prisma__splClient<$Result.GetResult<Prisma.$splPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Spls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {splCountArgs} args - Arguments to filter Spls to count.
     * @example
     * // Count the number of Spls
     * const count = await prisma.spl.count({
     *   where: {
     *     // ... the filter for the Spls we want to count
     *   }
     * })
    **/
    count<T extends splCountArgs>(
      args?: Subset<T, splCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SplCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Spl.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SplAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SplAggregateArgs>(args: Subset<T, SplAggregateArgs>): Prisma.PrismaPromise<GetSplAggregateType<T>>

    /**
     * Group by Spl.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {splGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends splGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: splGroupByArgs['orderBy'] }
        : { orderBy?: splGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, splGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSplGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the spl model
   */
  readonly fields: splFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for spl.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__splClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee_spl_approval1Toemployee<T extends spl$employee_spl_approval1ToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, spl$employee_spl_approval1ToemployeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    employee_spl_approval2Toemployee<T extends spl$employee_spl_approval2ToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, spl$employee_spl_approval2ToemployeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    spl_detail<T extends spl$spl_detailArgs<ExtArgs> = {}>(args?: Subset<T, spl$spl_detailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    srl<T extends spl$srlArgs<ExtArgs> = {}>(args?: Subset<T, spl$srlArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$srlPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the spl model
   */
  interface splFieldRefs {
    readonly spl_id: FieldRef<"spl", 'String'>
    readonly purpose: FieldRef<"spl", 'String'>
    readonly est_start: FieldRef<"spl", 'DateTime'>
    readonly est_end: FieldRef<"spl", 'DateTime'>
    readonly status1: FieldRef<"spl", 'spl_status1'>
    readonly approval1: FieldRef<"spl", 'String'>
    readonly status2: FieldRef<"spl", 'spl_status2'>
    readonly approval2: FieldRef<"spl", 'String'>
    readonly createdAt: FieldRef<"spl", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * spl findUnique
   */
  export type splFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl
     */
    select?: splSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl
     */
    omit?: splOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: splInclude<ExtArgs> | null
    /**
     * Filter, which spl to fetch.
     */
    where: splWhereUniqueInput
  }

  /**
   * spl findUniqueOrThrow
   */
  export type splFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl
     */
    select?: splSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl
     */
    omit?: splOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: splInclude<ExtArgs> | null
    /**
     * Filter, which spl to fetch.
     */
    where: splWhereUniqueInput
  }

  /**
   * spl findFirst
   */
  export type splFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl
     */
    select?: splSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl
     */
    omit?: splOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: splInclude<ExtArgs> | null
    /**
     * Filter, which spl to fetch.
     */
    where?: splWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spls to fetch.
     */
    orderBy?: splOrderByWithRelationInput | splOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for spls.
     */
    cursor?: splWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of spls.
     */
    distinct?: SplScalarFieldEnum | SplScalarFieldEnum[]
  }

  /**
   * spl findFirstOrThrow
   */
  export type splFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl
     */
    select?: splSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl
     */
    omit?: splOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: splInclude<ExtArgs> | null
    /**
     * Filter, which spl to fetch.
     */
    where?: splWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spls to fetch.
     */
    orderBy?: splOrderByWithRelationInput | splOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for spls.
     */
    cursor?: splWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of spls.
     */
    distinct?: SplScalarFieldEnum | SplScalarFieldEnum[]
  }

  /**
   * spl findMany
   */
  export type splFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl
     */
    select?: splSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl
     */
    omit?: splOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: splInclude<ExtArgs> | null
    /**
     * Filter, which spls to fetch.
     */
    where?: splWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spls to fetch.
     */
    orderBy?: splOrderByWithRelationInput | splOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing spls.
     */
    cursor?: splWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spls.
     */
    skip?: number
    distinct?: SplScalarFieldEnum | SplScalarFieldEnum[]
  }

  /**
   * spl create
   */
  export type splCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl
     */
    select?: splSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl
     */
    omit?: splOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: splInclude<ExtArgs> | null
    /**
     * The data needed to create a spl.
     */
    data: XOR<splCreateInput, splUncheckedCreateInput>
  }

  /**
   * spl createMany
   */
  export type splCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many spls.
     */
    data: splCreateManyInput | splCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * spl update
   */
  export type splUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl
     */
    select?: splSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl
     */
    omit?: splOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: splInclude<ExtArgs> | null
    /**
     * The data needed to update a spl.
     */
    data: XOR<splUpdateInput, splUncheckedUpdateInput>
    /**
     * Choose, which spl to update.
     */
    where: splWhereUniqueInput
  }

  /**
   * spl updateMany
   */
  export type splUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update spls.
     */
    data: XOR<splUpdateManyMutationInput, splUncheckedUpdateManyInput>
    /**
     * Filter which spls to update
     */
    where?: splWhereInput
    /**
     * Limit how many spls to update.
     */
    limit?: number
  }

  /**
   * spl upsert
   */
  export type splUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl
     */
    select?: splSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl
     */
    omit?: splOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: splInclude<ExtArgs> | null
    /**
     * The filter to search for the spl to update in case it exists.
     */
    where: splWhereUniqueInput
    /**
     * In case the spl found by the `where` argument doesn't exist, create a new spl with this data.
     */
    create: XOR<splCreateInput, splUncheckedCreateInput>
    /**
     * In case the spl was found with the provided `where` argument, update it with this data.
     */
    update: XOR<splUpdateInput, splUncheckedUpdateInput>
  }

  /**
   * spl delete
   */
  export type splDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl
     */
    select?: splSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl
     */
    omit?: splOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: splInclude<ExtArgs> | null
    /**
     * Filter which spl to delete.
     */
    where: splWhereUniqueInput
  }

  /**
   * spl deleteMany
   */
  export type splDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which spls to delete
     */
    where?: splWhereInput
    /**
     * Limit how many spls to delete.
     */
    limit?: number
  }

  /**
   * spl.employee_spl_approval1Toemployee
   */
  export type spl$employee_spl_approval1ToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * spl.employee_spl_approval2Toemployee
   */
  export type spl$employee_spl_approval2ToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * spl.spl_detail
   */
  export type spl$spl_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl_detail
     */
    select?: spl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl_detail
     */
    omit?: spl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: spl_detailInclude<ExtArgs> | null
    where?: spl_detailWhereInput
    orderBy?: spl_detailOrderByWithRelationInput | spl_detailOrderByWithRelationInput[]
    cursor?: spl_detailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Spl_detailScalarFieldEnum | Spl_detailScalarFieldEnum[]
  }

  /**
   * spl.srl
   */
  export type spl$srlArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
    where?: srlWhereInput
    orderBy?: srlOrderByWithRelationInput | srlOrderByWithRelationInput[]
    cursor?: srlWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SrlScalarFieldEnum | SrlScalarFieldEnum[]
  }

  /**
   * spl without action
   */
  export type splDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl
     */
    select?: splSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl
     */
    omit?: splOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: splInclude<ExtArgs> | null
  }


  /**
   * Model spl_detail
   */

  export type AggregateSpl_detail = {
    _count: Spl_detailCountAggregateOutputType | null
    _avg: Spl_detailAvgAggregateOutputType | null
    _sum: Spl_detailSumAggregateOutputType | null
    _min: Spl_detailMinAggregateOutputType | null
    _max: Spl_detailMaxAggregateOutputType | null
  }

  export type Spl_detailAvgAggregateOutputType = {
    step: number | null
  }

  export type Spl_detailSumAggregateOutputType = {
    step: number | null
  }

  export type Spl_detailMinAggregateOutputType = {
    spl_detail_id: string | null
    step: number | null
    spl_id: string | null
    payroll: string | null
    description: string | null
  }

  export type Spl_detailMaxAggregateOutputType = {
    spl_detail_id: string | null
    step: number | null
    spl_id: string | null
    payroll: string | null
    description: string | null
  }

  export type Spl_detailCountAggregateOutputType = {
    spl_detail_id: number
    step: number
    spl_id: number
    payroll: number
    description: number
    _all: number
  }


  export type Spl_detailAvgAggregateInputType = {
    step?: true
  }

  export type Spl_detailSumAggregateInputType = {
    step?: true
  }

  export type Spl_detailMinAggregateInputType = {
    spl_detail_id?: true
    step?: true
    spl_id?: true
    payroll?: true
    description?: true
  }

  export type Spl_detailMaxAggregateInputType = {
    spl_detail_id?: true
    step?: true
    spl_id?: true
    payroll?: true
    description?: true
  }

  export type Spl_detailCountAggregateInputType = {
    spl_detail_id?: true
    step?: true
    spl_id?: true
    payroll?: true
    description?: true
    _all?: true
  }

  export type Spl_detailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which spl_detail to aggregate.
     */
    where?: spl_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spl_details to fetch.
     */
    orderBy?: spl_detailOrderByWithRelationInput | spl_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: spl_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spl_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spl_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned spl_details
    **/
    _count?: true | Spl_detailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Spl_detailAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Spl_detailSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Spl_detailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Spl_detailMaxAggregateInputType
  }

  export type GetSpl_detailAggregateType<T extends Spl_detailAggregateArgs> = {
        [P in keyof T & keyof AggregateSpl_detail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSpl_detail[P]>
      : GetScalarType<T[P], AggregateSpl_detail[P]>
  }




  export type spl_detailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: spl_detailWhereInput
    orderBy?: spl_detailOrderByWithAggregationInput | spl_detailOrderByWithAggregationInput[]
    by: Spl_detailScalarFieldEnum[] | Spl_detailScalarFieldEnum
    having?: spl_detailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Spl_detailCountAggregateInputType | true
    _avg?: Spl_detailAvgAggregateInputType
    _sum?: Spl_detailSumAggregateInputType
    _min?: Spl_detailMinAggregateInputType
    _max?: Spl_detailMaxAggregateInputType
  }

  export type Spl_detailGroupByOutputType = {
    spl_detail_id: string
    step: number
    spl_id: string
    payroll: string | null
    description: string
    _count: Spl_detailCountAggregateOutputType | null
    _avg: Spl_detailAvgAggregateOutputType | null
    _sum: Spl_detailSumAggregateOutputType | null
    _min: Spl_detailMinAggregateOutputType | null
    _max: Spl_detailMaxAggregateOutputType | null
  }

  type GetSpl_detailGroupByPayload<T extends spl_detailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Spl_detailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Spl_detailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Spl_detailGroupByOutputType[P]>
            : GetScalarType<T[P], Spl_detailGroupByOutputType[P]>
        }
      >
    >


  export type spl_detailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    spl_detail_id?: boolean
    step?: boolean
    spl_id?: boolean
    payroll?: boolean
    description?: boolean
    employee?: boolean | spl_detail$employeeArgs<ExtArgs>
    spl?: boolean | splDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["spl_detail"]>



  export type spl_detailSelectScalar = {
    spl_detail_id?: boolean
    step?: boolean
    spl_id?: boolean
    payroll?: boolean
    description?: boolean
  }

  export type spl_detailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"spl_detail_id" | "step" | "spl_id" | "payroll" | "description", ExtArgs["result"]["spl_detail"]>
  export type spl_detailInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | spl_detail$employeeArgs<ExtArgs>
    spl?: boolean | splDefaultArgs<ExtArgs>
  }

  export type $spl_detailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "spl_detail"
    objects: {
      employee: Prisma.$employeePayload<ExtArgs> | null
      spl: Prisma.$splPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      spl_detail_id: string
      step: number
      spl_id: string
      payroll: string | null
      description: string
    }, ExtArgs["result"]["spl_detail"]>
    composites: {}
  }

  type spl_detailGetPayload<S extends boolean | null | undefined | spl_detailDefaultArgs> = $Result.GetResult<Prisma.$spl_detailPayload, S>

  type spl_detailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<spl_detailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Spl_detailCountAggregateInputType | true
    }

  export interface spl_detailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['spl_detail'], meta: { name: 'spl_detail' } }
    /**
     * Find zero or one Spl_detail that matches the filter.
     * @param {spl_detailFindUniqueArgs} args - Arguments to find a Spl_detail
     * @example
     * // Get one Spl_detail
     * const spl_detail = await prisma.spl_detail.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends spl_detailFindUniqueArgs>(args: SelectSubset<T, spl_detailFindUniqueArgs<ExtArgs>>): Prisma__spl_detailClient<$Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Spl_detail that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {spl_detailFindUniqueOrThrowArgs} args - Arguments to find a Spl_detail
     * @example
     * // Get one Spl_detail
     * const spl_detail = await prisma.spl_detail.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends spl_detailFindUniqueOrThrowArgs>(args: SelectSubset<T, spl_detailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__spl_detailClient<$Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Spl_detail that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spl_detailFindFirstArgs} args - Arguments to find a Spl_detail
     * @example
     * // Get one Spl_detail
     * const spl_detail = await prisma.spl_detail.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends spl_detailFindFirstArgs>(args?: SelectSubset<T, spl_detailFindFirstArgs<ExtArgs>>): Prisma__spl_detailClient<$Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Spl_detail that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spl_detailFindFirstOrThrowArgs} args - Arguments to find a Spl_detail
     * @example
     * // Get one Spl_detail
     * const spl_detail = await prisma.spl_detail.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends spl_detailFindFirstOrThrowArgs>(args?: SelectSubset<T, spl_detailFindFirstOrThrowArgs<ExtArgs>>): Prisma__spl_detailClient<$Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Spl_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spl_detailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Spl_details
     * const spl_details = await prisma.spl_detail.findMany()
     * 
     * // Get first 10 Spl_details
     * const spl_details = await prisma.spl_detail.findMany({ take: 10 })
     * 
     * // Only select the `spl_detail_id`
     * const spl_detailWithSpl_detail_idOnly = await prisma.spl_detail.findMany({ select: { spl_detail_id: true } })
     * 
     */
    findMany<T extends spl_detailFindManyArgs>(args?: SelectSubset<T, spl_detailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Spl_detail.
     * @param {spl_detailCreateArgs} args - Arguments to create a Spl_detail.
     * @example
     * // Create one Spl_detail
     * const Spl_detail = await prisma.spl_detail.create({
     *   data: {
     *     // ... data to create a Spl_detail
     *   }
     * })
     * 
     */
    create<T extends spl_detailCreateArgs>(args: SelectSubset<T, spl_detailCreateArgs<ExtArgs>>): Prisma__spl_detailClient<$Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Spl_details.
     * @param {spl_detailCreateManyArgs} args - Arguments to create many Spl_details.
     * @example
     * // Create many Spl_details
     * const spl_detail = await prisma.spl_detail.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends spl_detailCreateManyArgs>(args?: SelectSubset<T, spl_detailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Spl_detail.
     * @param {spl_detailDeleteArgs} args - Arguments to delete one Spl_detail.
     * @example
     * // Delete one Spl_detail
     * const Spl_detail = await prisma.spl_detail.delete({
     *   where: {
     *     // ... filter to delete one Spl_detail
     *   }
     * })
     * 
     */
    delete<T extends spl_detailDeleteArgs>(args: SelectSubset<T, spl_detailDeleteArgs<ExtArgs>>): Prisma__spl_detailClient<$Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Spl_detail.
     * @param {spl_detailUpdateArgs} args - Arguments to update one Spl_detail.
     * @example
     * // Update one Spl_detail
     * const spl_detail = await prisma.spl_detail.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends spl_detailUpdateArgs>(args: SelectSubset<T, spl_detailUpdateArgs<ExtArgs>>): Prisma__spl_detailClient<$Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Spl_details.
     * @param {spl_detailDeleteManyArgs} args - Arguments to filter Spl_details to delete.
     * @example
     * // Delete a few Spl_details
     * const { count } = await prisma.spl_detail.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends spl_detailDeleteManyArgs>(args?: SelectSubset<T, spl_detailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Spl_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spl_detailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Spl_details
     * const spl_detail = await prisma.spl_detail.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends spl_detailUpdateManyArgs>(args: SelectSubset<T, spl_detailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Spl_detail.
     * @param {spl_detailUpsertArgs} args - Arguments to update or create a Spl_detail.
     * @example
     * // Update or create a Spl_detail
     * const spl_detail = await prisma.spl_detail.upsert({
     *   create: {
     *     // ... data to create a Spl_detail
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Spl_detail we want to update
     *   }
     * })
     */
    upsert<T extends spl_detailUpsertArgs>(args: SelectSubset<T, spl_detailUpsertArgs<ExtArgs>>): Prisma__spl_detailClient<$Result.GetResult<Prisma.$spl_detailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Spl_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spl_detailCountArgs} args - Arguments to filter Spl_details to count.
     * @example
     * // Count the number of Spl_details
     * const count = await prisma.spl_detail.count({
     *   where: {
     *     // ... the filter for the Spl_details we want to count
     *   }
     * })
    **/
    count<T extends spl_detailCountArgs>(
      args?: Subset<T, spl_detailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Spl_detailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Spl_detail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Spl_detailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Spl_detailAggregateArgs>(args: Subset<T, Spl_detailAggregateArgs>): Prisma.PrismaPromise<GetSpl_detailAggregateType<T>>

    /**
     * Group by Spl_detail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spl_detailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends spl_detailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: spl_detailGroupByArgs['orderBy'] }
        : { orderBy?: spl_detailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, spl_detailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSpl_detailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the spl_detail model
   */
  readonly fields: spl_detailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for spl_detail.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__spl_detailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee<T extends spl_detail$employeeArgs<ExtArgs> = {}>(args?: Subset<T, spl_detail$employeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    spl<T extends splDefaultArgs<ExtArgs> = {}>(args?: Subset<T, splDefaultArgs<ExtArgs>>): Prisma__splClient<$Result.GetResult<Prisma.$splPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the spl_detail model
   */
  interface spl_detailFieldRefs {
    readonly spl_detail_id: FieldRef<"spl_detail", 'String'>
    readonly step: FieldRef<"spl_detail", 'Int'>
    readonly spl_id: FieldRef<"spl_detail", 'String'>
    readonly payroll: FieldRef<"spl_detail", 'String'>
    readonly description: FieldRef<"spl_detail", 'String'>
  }
    

  // Custom InputTypes
  /**
   * spl_detail findUnique
   */
  export type spl_detailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl_detail
     */
    select?: spl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl_detail
     */
    omit?: spl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: spl_detailInclude<ExtArgs> | null
    /**
     * Filter, which spl_detail to fetch.
     */
    where: spl_detailWhereUniqueInput
  }

  /**
   * spl_detail findUniqueOrThrow
   */
  export type spl_detailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl_detail
     */
    select?: spl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl_detail
     */
    omit?: spl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: spl_detailInclude<ExtArgs> | null
    /**
     * Filter, which spl_detail to fetch.
     */
    where: spl_detailWhereUniqueInput
  }

  /**
   * spl_detail findFirst
   */
  export type spl_detailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl_detail
     */
    select?: spl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl_detail
     */
    omit?: spl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: spl_detailInclude<ExtArgs> | null
    /**
     * Filter, which spl_detail to fetch.
     */
    where?: spl_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spl_details to fetch.
     */
    orderBy?: spl_detailOrderByWithRelationInput | spl_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for spl_details.
     */
    cursor?: spl_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spl_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spl_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of spl_details.
     */
    distinct?: Spl_detailScalarFieldEnum | Spl_detailScalarFieldEnum[]
  }

  /**
   * spl_detail findFirstOrThrow
   */
  export type spl_detailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl_detail
     */
    select?: spl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl_detail
     */
    omit?: spl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: spl_detailInclude<ExtArgs> | null
    /**
     * Filter, which spl_detail to fetch.
     */
    where?: spl_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spl_details to fetch.
     */
    orderBy?: spl_detailOrderByWithRelationInput | spl_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for spl_details.
     */
    cursor?: spl_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spl_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spl_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of spl_details.
     */
    distinct?: Spl_detailScalarFieldEnum | Spl_detailScalarFieldEnum[]
  }

  /**
   * spl_detail findMany
   */
  export type spl_detailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl_detail
     */
    select?: spl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl_detail
     */
    omit?: spl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: spl_detailInclude<ExtArgs> | null
    /**
     * Filter, which spl_details to fetch.
     */
    where?: spl_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spl_details to fetch.
     */
    orderBy?: spl_detailOrderByWithRelationInput | spl_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing spl_details.
     */
    cursor?: spl_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spl_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spl_details.
     */
    skip?: number
    distinct?: Spl_detailScalarFieldEnum | Spl_detailScalarFieldEnum[]
  }

  /**
   * spl_detail create
   */
  export type spl_detailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl_detail
     */
    select?: spl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl_detail
     */
    omit?: spl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: spl_detailInclude<ExtArgs> | null
    /**
     * The data needed to create a spl_detail.
     */
    data: XOR<spl_detailCreateInput, spl_detailUncheckedCreateInput>
  }

  /**
   * spl_detail createMany
   */
  export type spl_detailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many spl_details.
     */
    data: spl_detailCreateManyInput | spl_detailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * spl_detail update
   */
  export type spl_detailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl_detail
     */
    select?: spl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl_detail
     */
    omit?: spl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: spl_detailInclude<ExtArgs> | null
    /**
     * The data needed to update a spl_detail.
     */
    data: XOR<spl_detailUpdateInput, spl_detailUncheckedUpdateInput>
    /**
     * Choose, which spl_detail to update.
     */
    where: spl_detailWhereUniqueInput
  }

  /**
   * spl_detail updateMany
   */
  export type spl_detailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update spl_details.
     */
    data: XOR<spl_detailUpdateManyMutationInput, spl_detailUncheckedUpdateManyInput>
    /**
     * Filter which spl_details to update
     */
    where?: spl_detailWhereInput
    /**
     * Limit how many spl_details to update.
     */
    limit?: number
  }

  /**
   * spl_detail upsert
   */
  export type spl_detailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl_detail
     */
    select?: spl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl_detail
     */
    omit?: spl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: spl_detailInclude<ExtArgs> | null
    /**
     * The filter to search for the spl_detail to update in case it exists.
     */
    where: spl_detailWhereUniqueInput
    /**
     * In case the spl_detail found by the `where` argument doesn't exist, create a new spl_detail with this data.
     */
    create: XOR<spl_detailCreateInput, spl_detailUncheckedCreateInput>
    /**
     * In case the spl_detail was found with the provided `where` argument, update it with this data.
     */
    update: XOR<spl_detailUpdateInput, spl_detailUncheckedUpdateInput>
  }

  /**
   * spl_detail delete
   */
  export type spl_detailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl_detail
     */
    select?: spl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl_detail
     */
    omit?: spl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: spl_detailInclude<ExtArgs> | null
    /**
     * Filter which spl_detail to delete.
     */
    where: spl_detailWhereUniqueInput
  }

  /**
   * spl_detail deleteMany
   */
  export type spl_detailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which spl_details to delete
     */
    where?: spl_detailWhereInput
    /**
     * Limit how many spl_details to delete.
     */
    limit?: number
  }

  /**
   * spl_detail.employee
   */
  export type spl_detail$employeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * spl_detail without action
   */
  export type spl_detailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl_detail
     */
    select?: spl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl_detail
     */
    omit?: spl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: spl_detailInclude<ExtArgs> | null
  }


  /**
   * Model dept
   */

  export type AggregateDept = {
    _count: DeptCountAggregateOutputType | null
    _min: DeptMinAggregateOutputType | null
    _max: DeptMaxAggregateOutputType | null
  }

  export type DeptMinAggregateOutputType = {
    dept_id: string | null
    dept_code: string | null
    initial: string | null
    name: string | null
    status: $Enums.dept_status | null
  }

  export type DeptMaxAggregateOutputType = {
    dept_id: string | null
    dept_code: string | null
    initial: string | null
    name: string | null
    status: $Enums.dept_status | null
  }

  export type DeptCountAggregateOutputType = {
    dept_id: number
    dept_code: number
    initial: number
    name: number
    status: number
    _all: number
  }


  export type DeptMinAggregateInputType = {
    dept_id?: true
    dept_code?: true
    initial?: true
    name?: true
    status?: true
  }

  export type DeptMaxAggregateInputType = {
    dept_id?: true
    dept_code?: true
    initial?: true
    name?: true
    status?: true
  }

  export type DeptCountAggregateInputType = {
    dept_id?: true
    dept_code?: true
    initial?: true
    name?: true
    status?: true
    _all?: true
  }

  export type DeptAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which dept to aggregate.
     */
    where?: deptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of depts to fetch.
     */
    orderBy?: deptOrderByWithRelationInput | deptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: deptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` depts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` depts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned depts
    **/
    _count?: true | DeptCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DeptMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DeptMaxAggregateInputType
  }

  export type GetDeptAggregateType<T extends DeptAggregateArgs> = {
        [P in keyof T & keyof AggregateDept]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDept[P]>
      : GetScalarType<T[P], AggregateDept[P]>
  }




  export type deptGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: deptWhereInput
    orderBy?: deptOrderByWithAggregationInput | deptOrderByWithAggregationInput[]
    by: DeptScalarFieldEnum[] | DeptScalarFieldEnum
    having?: deptScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DeptCountAggregateInputType | true
    _min?: DeptMinAggregateInputType
    _max?: DeptMaxAggregateInputType
  }

  export type DeptGroupByOutputType = {
    dept_id: string
    dept_code: string
    initial: string
    name: string
    status: $Enums.dept_status
    _count: DeptCountAggregateOutputType | null
    _min: DeptMinAggregateOutputType | null
    _max: DeptMaxAggregateOutputType | null
  }

  type GetDeptGroupByPayload<T extends deptGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DeptGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DeptGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DeptGroupByOutputType[P]>
            : GetScalarType<T[P], DeptGroupByOutputType[P]>
        }
      >
    >


  export type deptSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    dept_id?: boolean
    dept_code?: boolean
    initial?: boolean
    name?: boolean
    status?: boolean
    employee?: boolean | dept$employeeArgs<ExtArgs>
    sppd_sppd_deptTodept?: boolean | dept$sppd_sppd_deptTodeptArgs<ExtArgs>
    _count?: boolean | DeptCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dept"]>



  export type deptSelectScalar = {
    dept_id?: boolean
    dept_code?: boolean
    initial?: boolean
    name?: boolean
    status?: boolean
  }

  export type deptOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"dept_id" | "dept_code" | "initial" | "name" | "status", ExtArgs["result"]["dept"]>
  export type deptInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | dept$employeeArgs<ExtArgs>
    sppd_sppd_deptTodept?: boolean | dept$sppd_sppd_deptTodeptArgs<ExtArgs>
    _count?: boolean | DeptCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $deptPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "dept"
    objects: {
      employee: Prisma.$employeePayload<ExtArgs>[]
      sppd_sppd_deptTodept: Prisma.$sppdPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      dept_id: string
      dept_code: string
      initial: string
      name: string
      status: $Enums.dept_status
    }, ExtArgs["result"]["dept"]>
    composites: {}
  }

  type deptGetPayload<S extends boolean | null | undefined | deptDefaultArgs> = $Result.GetResult<Prisma.$deptPayload, S>

  type deptCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<deptFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DeptCountAggregateInputType | true
    }

  export interface deptDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['dept'], meta: { name: 'dept' } }
    /**
     * Find zero or one Dept that matches the filter.
     * @param {deptFindUniqueArgs} args - Arguments to find a Dept
     * @example
     * // Get one Dept
     * const dept = await prisma.dept.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends deptFindUniqueArgs>(args: SelectSubset<T, deptFindUniqueArgs<ExtArgs>>): Prisma__deptClient<$Result.GetResult<Prisma.$deptPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Dept that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {deptFindUniqueOrThrowArgs} args - Arguments to find a Dept
     * @example
     * // Get one Dept
     * const dept = await prisma.dept.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends deptFindUniqueOrThrowArgs>(args: SelectSubset<T, deptFindUniqueOrThrowArgs<ExtArgs>>): Prisma__deptClient<$Result.GetResult<Prisma.$deptPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Dept that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deptFindFirstArgs} args - Arguments to find a Dept
     * @example
     * // Get one Dept
     * const dept = await prisma.dept.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends deptFindFirstArgs>(args?: SelectSubset<T, deptFindFirstArgs<ExtArgs>>): Prisma__deptClient<$Result.GetResult<Prisma.$deptPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Dept that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deptFindFirstOrThrowArgs} args - Arguments to find a Dept
     * @example
     * // Get one Dept
     * const dept = await prisma.dept.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends deptFindFirstOrThrowArgs>(args?: SelectSubset<T, deptFindFirstOrThrowArgs<ExtArgs>>): Prisma__deptClient<$Result.GetResult<Prisma.$deptPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Depts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deptFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Depts
     * const depts = await prisma.dept.findMany()
     * 
     * // Get first 10 Depts
     * const depts = await prisma.dept.findMany({ take: 10 })
     * 
     * // Only select the `dept_id`
     * const deptWithDept_idOnly = await prisma.dept.findMany({ select: { dept_id: true } })
     * 
     */
    findMany<T extends deptFindManyArgs>(args?: SelectSubset<T, deptFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$deptPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Dept.
     * @param {deptCreateArgs} args - Arguments to create a Dept.
     * @example
     * // Create one Dept
     * const Dept = await prisma.dept.create({
     *   data: {
     *     // ... data to create a Dept
     *   }
     * })
     * 
     */
    create<T extends deptCreateArgs>(args: SelectSubset<T, deptCreateArgs<ExtArgs>>): Prisma__deptClient<$Result.GetResult<Prisma.$deptPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Depts.
     * @param {deptCreateManyArgs} args - Arguments to create many Depts.
     * @example
     * // Create many Depts
     * const dept = await prisma.dept.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends deptCreateManyArgs>(args?: SelectSubset<T, deptCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Dept.
     * @param {deptDeleteArgs} args - Arguments to delete one Dept.
     * @example
     * // Delete one Dept
     * const Dept = await prisma.dept.delete({
     *   where: {
     *     // ... filter to delete one Dept
     *   }
     * })
     * 
     */
    delete<T extends deptDeleteArgs>(args: SelectSubset<T, deptDeleteArgs<ExtArgs>>): Prisma__deptClient<$Result.GetResult<Prisma.$deptPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Dept.
     * @param {deptUpdateArgs} args - Arguments to update one Dept.
     * @example
     * // Update one Dept
     * const dept = await prisma.dept.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends deptUpdateArgs>(args: SelectSubset<T, deptUpdateArgs<ExtArgs>>): Prisma__deptClient<$Result.GetResult<Prisma.$deptPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Depts.
     * @param {deptDeleteManyArgs} args - Arguments to filter Depts to delete.
     * @example
     * // Delete a few Depts
     * const { count } = await prisma.dept.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends deptDeleteManyArgs>(args?: SelectSubset<T, deptDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Depts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deptUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Depts
     * const dept = await prisma.dept.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends deptUpdateManyArgs>(args: SelectSubset<T, deptUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Dept.
     * @param {deptUpsertArgs} args - Arguments to update or create a Dept.
     * @example
     * // Update or create a Dept
     * const dept = await prisma.dept.upsert({
     *   create: {
     *     // ... data to create a Dept
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Dept we want to update
     *   }
     * })
     */
    upsert<T extends deptUpsertArgs>(args: SelectSubset<T, deptUpsertArgs<ExtArgs>>): Prisma__deptClient<$Result.GetResult<Prisma.$deptPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Depts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deptCountArgs} args - Arguments to filter Depts to count.
     * @example
     * // Count the number of Depts
     * const count = await prisma.dept.count({
     *   where: {
     *     // ... the filter for the Depts we want to count
     *   }
     * })
    **/
    count<T extends deptCountArgs>(
      args?: Subset<T, deptCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DeptCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Dept.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeptAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DeptAggregateArgs>(args: Subset<T, DeptAggregateArgs>): Prisma.PrismaPromise<GetDeptAggregateType<T>>

    /**
     * Group by Dept.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deptGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends deptGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: deptGroupByArgs['orderBy'] }
        : { orderBy?: deptGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, deptGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDeptGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the dept model
   */
  readonly fields: deptFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for dept.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__deptClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee<T extends dept$employeeArgs<ExtArgs> = {}>(args?: Subset<T, dept$employeeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sppd_sppd_deptTodept<T extends dept$sppd_sppd_deptTodeptArgs<ExtArgs> = {}>(args?: Subset<T, dept$sppd_sppd_deptTodeptArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the dept model
   */
  interface deptFieldRefs {
    readonly dept_id: FieldRef<"dept", 'String'>
    readonly dept_code: FieldRef<"dept", 'String'>
    readonly initial: FieldRef<"dept", 'String'>
    readonly name: FieldRef<"dept", 'String'>
    readonly status: FieldRef<"dept", 'dept_status'>
  }
    

  // Custom InputTypes
  /**
   * dept findUnique
   */
  export type deptFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dept
     */
    select?: deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dept
     */
    omit?: deptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deptInclude<ExtArgs> | null
    /**
     * Filter, which dept to fetch.
     */
    where: deptWhereUniqueInput
  }

  /**
   * dept findUniqueOrThrow
   */
  export type deptFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dept
     */
    select?: deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dept
     */
    omit?: deptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deptInclude<ExtArgs> | null
    /**
     * Filter, which dept to fetch.
     */
    where: deptWhereUniqueInput
  }

  /**
   * dept findFirst
   */
  export type deptFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dept
     */
    select?: deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dept
     */
    omit?: deptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deptInclude<ExtArgs> | null
    /**
     * Filter, which dept to fetch.
     */
    where?: deptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of depts to fetch.
     */
    orderBy?: deptOrderByWithRelationInput | deptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for depts.
     */
    cursor?: deptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` depts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` depts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of depts.
     */
    distinct?: DeptScalarFieldEnum | DeptScalarFieldEnum[]
  }

  /**
   * dept findFirstOrThrow
   */
  export type deptFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dept
     */
    select?: deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dept
     */
    omit?: deptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deptInclude<ExtArgs> | null
    /**
     * Filter, which dept to fetch.
     */
    where?: deptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of depts to fetch.
     */
    orderBy?: deptOrderByWithRelationInput | deptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for depts.
     */
    cursor?: deptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` depts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` depts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of depts.
     */
    distinct?: DeptScalarFieldEnum | DeptScalarFieldEnum[]
  }

  /**
   * dept findMany
   */
  export type deptFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dept
     */
    select?: deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dept
     */
    omit?: deptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deptInclude<ExtArgs> | null
    /**
     * Filter, which depts to fetch.
     */
    where?: deptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of depts to fetch.
     */
    orderBy?: deptOrderByWithRelationInput | deptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing depts.
     */
    cursor?: deptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` depts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` depts.
     */
    skip?: number
    distinct?: DeptScalarFieldEnum | DeptScalarFieldEnum[]
  }

  /**
   * dept create
   */
  export type deptCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dept
     */
    select?: deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dept
     */
    omit?: deptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deptInclude<ExtArgs> | null
    /**
     * The data needed to create a dept.
     */
    data: XOR<deptCreateInput, deptUncheckedCreateInput>
  }

  /**
   * dept createMany
   */
  export type deptCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many depts.
     */
    data: deptCreateManyInput | deptCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * dept update
   */
  export type deptUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dept
     */
    select?: deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dept
     */
    omit?: deptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deptInclude<ExtArgs> | null
    /**
     * The data needed to update a dept.
     */
    data: XOR<deptUpdateInput, deptUncheckedUpdateInput>
    /**
     * Choose, which dept to update.
     */
    where: deptWhereUniqueInput
  }

  /**
   * dept updateMany
   */
  export type deptUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update depts.
     */
    data: XOR<deptUpdateManyMutationInput, deptUncheckedUpdateManyInput>
    /**
     * Filter which depts to update
     */
    where?: deptWhereInput
    /**
     * Limit how many depts to update.
     */
    limit?: number
  }

  /**
   * dept upsert
   */
  export type deptUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dept
     */
    select?: deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dept
     */
    omit?: deptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deptInclude<ExtArgs> | null
    /**
     * The filter to search for the dept to update in case it exists.
     */
    where: deptWhereUniqueInput
    /**
     * In case the dept found by the `where` argument doesn't exist, create a new dept with this data.
     */
    create: XOR<deptCreateInput, deptUncheckedCreateInput>
    /**
     * In case the dept was found with the provided `where` argument, update it with this data.
     */
    update: XOR<deptUpdateInput, deptUncheckedUpdateInput>
  }

  /**
   * dept delete
   */
  export type deptDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dept
     */
    select?: deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dept
     */
    omit?: deptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deptInclude<ExtArgs> | null
    /**
     * Filter which dept to delete.
     */
    where: deptWhereUniqueInput
  }

  /**
   * dept deleteMany
   */
  export type deptDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which depts to delete
     */
    where?: deptWhereInput
    /**
     * Limit how many depts to delete.
     */
    limit?: number
  }

  /**
   * dept.employee
   */
  export type dept$employeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
    orderBy?: employeeOrderByWithRelationInput | employeeOrderByWithRelationInput[]
    cursor?: employeeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmployeeScalarFieldEnum | EmployeeScalarFieldEnum[]
  }

  /**
   * dept.sppd_sppd_deptTodept
   */
  export type dept$sppd_sppd_deptTodeptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd
     */
    select?: sppdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd
     */
    omit?: sppdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppdInclude<ExtArgs> | null
    where?: sppdWhereInput
    orderBy?: sppdOrderByWithRelationInput | sppdOrderByWithRelationInput[]
    cursor?: sppdWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SppdScalarFieldEnum | SppdScalarFieldEnum[]
  }

  /**
   * dept without action
   */
  export type deptDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dept
     */
    select?: deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dept
     */
    omit?: deptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deptInclude<ExtArgs> | null
  }


  /**
   * Model srl
   */

  export type AggregateSrl = {
    _count: SrlCountAggregateOutputType | null
    _min: SrlMinAggregateOutputType | null
    _max: SrlMaxAggregateOutputType | null
  }

  export type SrlMinAggregateOutputType = {
    srl_id: string | null
    spl_id: string | null
    payroll: string | null
    real_start: Date | null
    real_end: Date | null
    status1: $Enums.srl_status1 | null
    approval1: string | null
    status2: $Enums.srl_status2 | null
    approval2: string | null
    createdAt: Date | null
  }

  export type SrlMaxAggregateOutputType = {
    srl_id: string | null
    spl_id: string | null
    payroll: string | null
    real_start: Date | null
    real_end: Date | null
    status1: $Enums.srl_status1 | null
    approval1: string | null
    status2: $Enums.srl_status2 | null
    approval2: string | null
    createdAt: Date | null
  }

  export type SrlCountAggregateOutputType = {
    srl_id: number
    spl_id: number
    payroll: number
    real_start: number
    real_end: number
    status1: number
    approval1: number
    status2: number
    approval2: number
    createdAt: number
    _all: number
  }


  export type SrlMinAggregateInputType = {
    srl_id?: true
    spl_id?: true
    payroll?: true
    real_start?: true
    real_end?: true
    status1?: true
    approval1?: true
    status2?: true
    approval2?: true
    createdAt?: true
  }

  export type SrlMaxAggregateInputType = {
    srl_id?: true
    spl_id?: true
    payroll?: true
    real_start?: true
    real_end?: true
    status1?: true
    approval1?: true
    status2?: true
    approval2?: true
    createdAt?: true
  }

  export type SrlCountAggregateInputType = {
    srl_id?: true
    spl_id?: true
    payroll?: true
    real_start?: true
    real_end?: true
    status1?: true
    approval1?: true
    status2?: true
    approval2?: true
    createdAt?: true
    _all?: true
  }

  export type SrlAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which srl to aggregate.
     */
    where?: srlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of srls to fetch.
     */
    orderBy?: srlOrderByWithRelationInput | srlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: srlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` srls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` srls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned srls
    **/
    _count?: true | SrlCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SrlMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SrlMaxAggregateInputType
  }

  export type GetSrlAggregateType<T extends SrlAggregateArgs> = {
        [P in keyof T & keyof AggregateSrl]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSrl[P]>
      : GetScalarType<T[P], AggregateSrl[P]>
  }




  export type srlGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: srlWhereInput
    orderBy?: srlOrderByWithAggregationInput | srlOrderByWithAggregationInput[]
    by: SrlScalarFieldEnum[] | SrlScalarFieldEnum
    having?: srlScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SrlCountAggregateInputType | true
    _min?: SrlMinAggregateInputType
    _max?: SrlMaxAggregateInputType
  }

  export type SrlGroupByOutputType = {
    srl_id: string
    spl_id: string | null
    payroll: string | null
    real_start: Date
    real_end: Date
    status1: $Enums.srl_status1
    approval1: string | null
    status2: $Enums.srl_status2
    approval2: string | null
    createdAt: Date
    _count: SrlCountAggregateOutputType | null
    _min: SrlMinAggregateOutputType | null
    _max: SrlMaxAggregateOutputType | null
  }

  type GetSrlGroupByPayload<T extends srlGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SrlGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SrlGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SrlGroupByOutputType[P]>
            : GetScalarType<T[P], SrlGroupByOutputType[P]>
        }
      >
    >


  export type srlSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    srl_id?: boolean
    spl_id?: boolean
    payroll?: boolean
    real_start?: boolean
    real_end?: boolean
    status1?: boolean
    approval1?: boolean
    status2?: boolean
    approval2?: boolean
    createdAt?: boolean
    employee_srl_approval1Toemployee?: boolean | srl$employee_srl_approval1ToemployeeArgs<ExtArgs>
    employee_srl_approval2Toemployee?: boolean | srl$employee_srl_approval2ToemployeeArgs<ExtArgs>
    employee?: boolean | srl$employeeArgs<ExtArgs>
    spl?: boolean | srl$splArgs<ExtArgs>
    srl_detail?: boolean | srl$srl_detailArgs<ExtArgs>
    _count?: boolean | SrlCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["srl"]>



  export type srlSelectScalar = {
    srl_id?: boolean
    spl_id?: boolean
    payroll?: boolean
    real_start?: boolean
    real_end?: boolean
    status1?: boolean
    approval1?: boolean
    status2?: boolean
    approval2?: boolean
    createdAt?: boolean
  }

  export type srlOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"srl_id" | "spl_id" | "payroll" | "real_start" | "real_end" | "status1" | "approval1" | "status2" | "approval2" | "createdAt", ExtArgs["result"]["srl"]>
  export type srlInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee_srl_approval1Toemployee?: boolean | srl$employee_srl_approval1ToemployeeArgs<ExtArgs>
    employee_srl_approval2Toemployee?: boolean | srl$employee_srl_approval2ToemployeeArgs<ExtArgs>
    employee?: boolean | srl$employeeArgs<ExtArgs>
    spl?: boolean | srl$splArgs<ExtArgs>
    srl_detail?: boolean | srl$srl_detailArgs<ExtArgs>
    _count?: boolean | SrlCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $srlPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "srl"
    objects: {
      employee_srl_approval1Toemployee: Prisma.$employeePayload<ExtArgs> | null
      employee_srl_approval2Toemployee: Prisma.$employeePayload<ExtArgs> | null
      employee: Prisma.$employeePayload<ExtArgs> | null
      spl: Prisma.$splPayload<ExtArgs> | null
      srl_detail: Prisma.$srl_detailPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      srl_id: string
      spl_id: string | null
      payroll: string | null
      real_start: Date
      real_end: Date
      status1: $Enums.srl_status1
      approval1: string | null
      status2: $Enums.srl_status2
      approval2: string | null
      createdAt: Date
    }, ExtArgs["result"]["srl"]>
    composites: {}
  }

  type srlGetPayload<S extends boolean | null | undefined | srlDefaultArgs> = $Result.GetResult<Prisma.$srlPayload, S>

  type srlCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<srlFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SrlCountAggregateInputType | true
    }

  export interface srlDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['srl'], meta: { name: 'srl' } }
    /**
     * Find zero or one Srl that matches the filter.
     * @param {srlFindUniqueArgs} args - Arguments to find a Srl
     * @example
     * // Get one Srl
     * const srl = await prisma.srl.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends srlFindUniqueArgs>(args: SelectSubset<T, srlFindUniqueArgs<ExtArgs>>): Prisma__srlClient<$Result.GetResult<Prisma.$srlPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Srl that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {srlFindUniqueOrThrowArgs} args - Arguments to find a Srl
     * @example
     * // Get one Srl
     * const srl = await prisma.srl.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends srlFindUniqueOrThrowArgs>(args: SelectSubset<T, srlFindUniqueOrThrowArgs<ExtArgs>>): Prisma__srlClient<$Result.GetResult<Prisma.$srlPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Srl that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {srlFindFirstArgs} args - Arguments to find a Srl
     * @example
     * // Get one Srl
     * const srl = await prisma.srl.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends srlFindFirstArgs>(args?: SelectSubset<T, srlFindFirstArgs<ExtArgs>>): Prisma__srlClient<$Result.GetResult<Prisma.$srlPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Srl that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {srlFindFirstOrThrowArgs} args - Arguments to find a Srl
     * @example
     * // Get one Srl
     * const srl = await prisma.srl.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends srlFindFirstOrThrowArgs>(args?: SelectSubset<T, srlFindFirstOrThrowArgs<ExtArgs>>): Prisma__srlClient<$Result.GetResult<Prisma.$srlPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Srls that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {srlFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Srls
     * const srls = await prisma.srl.findMany()
     * 
     * // Get first 10 Srls
     * const srls = await prisma.srl.findMany({ take: 10 })
     * 
     * // Only select the `srl_id`
     * const srlWithSrl_idOnly = await prisma.srl.findMany({ select: { srl_id: true } })
     * 
     */
    findMany<T extends srlFindManyArgs>(args?: SelectSubset<T, srlFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$srlPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Srl.
     * @param {srlCreateArgs} args - Arguments to create a Srl.
     * @example
     * // Create one Srl
     * const Srl = await prisma.srl.create({
     *   data: {
     *     // ... data to create a Srl
     *   }
     * })
     * 
     */
    create<T extends srlCreateArgs>(args: SelectSubset<T, srlCreateArgs<ExtArgs>>): Prisma__srlClient<$Result.GetResult<Prisma.$srlPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Srls.
     * @param {srlCreateManyArgs} args - Arguments to create many Srls.
     * @example
     * // Create many Srls
     * const srl = await prisma.srl.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends srlCreateManyArgs>(args?: SelectSubset<T, srlCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Srl.
     * @param {srlDeleteArgs} args - Arguments to delete one Srl.
     * @example
     * // Delete one Srl
     * const Srl = await prisma.srl.delete({
     *   where: {
     *     // ... filter to delete one Srl
     *   }
     * })
     * 
     */
    delete<T extends srlDeleteArgs>(args: SelectSubset<T, srlDeleteArgs<ExtArgs>>): Prisma__srlClient<$Result.GetResult<Prisma.$srlPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Srl.
     * @param {srlUpdateArgs} args - Arguments to update one Srl.
     * @example
     * // Update one Srl
     * const srl = await prisma.srl.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends srlUpdateArgs>(args: SelectSubset<T, srlUpdateArgs<ExtArgs>>): Prisma__srlClient<$Result.GetResult<Prisma.$srlPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Srls.
     * @param {srlDeleteManyArgs} args - Arguments to filter Srls to delete.
     * @example
     * // Delete a few Srls
     * const { count } = await prisma.srl.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends srlDeleteManyArgs>(args?: SelectSubset<T, srlDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Srls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {srlUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Srls
     * const srl = await prisma.srl.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends srlUpdateManyArgs>(args: SelectSubset<T, srlUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Srl.
     * @param {srlUpsertArgs} args - Arguments to update or create a Srl.
     * @example
     * // Update or create a Srl
     * const srl = await prisma.srl.upsert({
     *   create: {
     *     // ... data to create a Srl
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Srl we want to update
     *   }
     * })
     */
    upsert<T extends srlUpsertArgs>(args: SelectSubset<T, srlUpsertArgs<ExtArgs>>): Prisma__srlClient<$Result.GetResult<Prisma.$srlPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Srls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {srlCountArgs} args - Arguments to filter Srls to count.
     * @example
     * // Count the number of Srls
     * const count = await prisma.srl.count({
     *   where: {
     *     // ... the filter for the Srls we want to count
     *   }
     * })
    **/
    count<T extends srlCountArgs>(
      args?: Subset<T, srlCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SrlCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Srl.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SrlAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SrlAggregateArgs>(args: Subset<T, SrlAggregateArgs>): Prisma.PrismaPromise<GetSrlAggregateType<T>>

    /**
     * Group by Srl.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {srlGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends srlGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: srlGroupByArgs['orderBy'] }
        : { orderBy?: srlGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, srlGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSrlGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the srl model
   */
  readonly fields: srlFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for srl.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__srlClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee_srl_approval1Toemployee<T extends srl$employee_srl_approval1ToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, srl$employee_srl_approval1ToemployeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    employee_srl_approval2Toemployee<T extends srl$employee_srl_approval2ToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, srl$employee_srl_approval2ToemployeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    employee<T extends srl$employeeArgs<ExtArgs> = {}>(args?: Subset<T, srl$employeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    spl<T extends srl$splArgs<ExtArgs> = {}>(args?: Subset<T, srl$splArgs<ExtArgs>>): Prisma__splClient<$Result.GetResult<Prisma.$splPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    srl_detail<T extends srl$srl_detailArgs<ExtArgs> = {}>(args?: Subset<T, srl$srl_detailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$srl_detailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the srl model
   */
  interface srlFieldRefs {
    readonly srl_id: FieldRef<"srl", 'String'>
    readonly spl_id: FieldRef<"srl", 'String'>
    readonly payroll: FieldRef<"srl", 'String'>
    readonly real_start: FieldRef<"srl", 'DateTime'>
    readonly real_end: FieldRef<"srl", 'DateTime'>
    readonly status1: FieldRef<"srl", 'srl_status1'>
    readonly approval1: FieldRef<"srl", 'String'>
    readonly status2: FieldRef<"srl", 'srl_status2'>
    readonly approval2: FieldRef<"srl", 'String'>
    readonly createdAt: FieldRef<"srl", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * srl findUnique
   */
  export type srlFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
    /**
     * Filter, which srl to fetch.
     */
    where: srlWhereUniqueInput
  }

  /**
   * srl findUniqueOrThrow
   */
  export type srlFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
    /**
     * Filter, which srl to fetch.
     */
    where: srlWhereUniqueInput
  }

  /**
   * srl findFirst
   */
  export type srlFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
    /**
     * Filter, which srl to fetch.
     */
    where?: srlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of srls to fetch.
     */
    orderBy?: srlOrderByWithRelationInput | srlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for srls.
     */
    cursor?: srlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` srls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` srls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of srls.
     */
    distinct?: SrlScalarFieldEnum | SrlScalarFieldEnum[]
  }

  /**
   * srl findFirstOrThrow
   */
  export type srlFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
    /**
     * Filter, which srl to fetch.
     */
    where?: srlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of srls to fetch.
     */
    orderBy?: srlOrderByWithRelationInput | srlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for srls.
     */
    cursor?: srlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` srls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` srls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of srls.
     */
    distinct?: SrlScalarFieldEnum | SrlScalarFieldEnum[]
  }

  /**
   * srl findMany
   */
  export type srlFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
    /**
     * Filter, which srls to fetch.
     */
    where?: srlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of srls to fetch.
     */
    orderBy?: srlOrderByWithRelationInput | srlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing srls.
     */
    cursor?: srlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` srls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` srls.
     */
    skip?: number
    distinct?: SrlScalarFieldEnum | SrlScalarFieldEnum[]
  }

  /**
   * srl create
   */
  export type srlCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
    /**
     * The data needed to create a srl.
     */
    data: XOR<srlCreateInput, srlUncheckedCreateInput>
  }

  /**
   * srl createMany
   */
  export type srlCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many srls.
     */
    data: srlCreateManyInput | srlCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * srl update
   */
  export type srlUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
    /**
     * The data needed to update a srl.
     */
    data: XOR<srlUpdateInput, srlUncheckedUpdateInput>
    /**
     * Choose, which srl to update.
     */
    where: srlWhereUniqueInput
  }

  /**
   * srl updateMany
   */
  export type srlUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update srls.
     */
    data: XOR<srlUpdateManyMutationInput, srlUncheckedUpdateManyInput>
    /**
     * Filter which srls to update
     */
    where?: srlWhereInput
    /**
     * Limit how many srls to update.
     */
    limit?: number
  }

  /**
   * srl upsert
   */
  export type srlUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
    /**
     * The filter to search for the srl to update in case it exists.
     */
    where: srlWhereUniqueInput
    /**
     * In case the srl found by the `where` argument doesn't exist, create a new srl with this data.
     */
    create: XOR<srlCreateInput, srlUncheckedCreateInput>
    /**
     * In case the srl was found with the provided `where` argument, update it with this data.
     */
    update: XOR<srlUpdateInput, srlUncheckedUpdateInput>
  }

  /**
   * srl delete
   */
  export type srlDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
    /**
     * Filter which srl to delete.
     */
    where: srlWhereUniqueInput
  }

  /**
   * srl deleteMany
   */
  export type srlDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which srls to delete
     */
    where?: srlWhereInput
    /**
     * Limit how many srls to delete.
     */
    limit?: number
  }

  /**
   * srl.employee_srl_approval1Toemployee
   */
  export type srl$employee_srl_approval1ToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * srl.employee_srl_approval2Toemployee
   */
  export type srl$employee_srl_approval2ToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * srl.employee
   */
  export type srl$employeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * srl.spl
   */
  export type srl$splArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spl
     */
    select?: splSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spl
     */
    omit?: splOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: splInclude<ExtArgs> | null
    where?: splWhereInput
  }

  /**
   * srl.srl_detail
   */
  export type srl$srl_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl_detail
     */
    select?: srl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl_detail
     */
    omit?: srl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srl_detailInclude<ExtArgs> | null
    where?: srl_detailWhereInput
    orderBy?: srl_detailOrderByWithRelationInput | srl_detailOrderByWithRelationInput[]
    cursor?: srl_detailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Srl_detailScalarFieldEnum | Srl_detailScalarFieldEnum[]
  }

  /**
   * srl without action
   */
  export type srlDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
  }


  /**
   * Model srl_detail
   */

  export type AggregateSrl_detail = {
    _count: Srl_detailCountAggregateOutputType | null
    _min: Srl_detailMinAggregateOutputType | null
    _max: Srl_detailMaxAggregateOutputType | null
  }

  export type Srl_detailMinAggregateOutputType = {
    srl_detail_id: string | null
    srl_id: string | null
    description: string | null
    status: string | null
  }

  export type Srl_detailMaxAggregateOutputType = {
    srl_detail_id: string | null
    srl_id: string | null
    description: string | null
    status: string | null
  }

  export type Srl_detailCountAggregateOutputType = {
    srl_detail_id: number
    srl_id: number
    description: number
    status: number
    _all: number
  }


  export type Srl_detailMinAggregateInputType = {
    srl_detail_id?: true
    srl_id?: true
    description?: true
    status?: true
  }

  export type Srl_detailMaxAggregateInputType = {
    srl_detail_id?: true
    srl_id?: true
    description?: true
    status?: true
  }

  export type Srl_detailCountAggregateInputType = {
    srl_detail_id?: true
    srl_id?: true
    description?: true
    status?: true
    _all?: true
  }

  export type Srl_detailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which srl_detail to aggregate.
     */
    where?: srl_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of srl_details to fetch.
     */
    orderBy?: srl_detailOrderByWithRelationInput | srl_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: srl_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` srl_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` srl_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned srl_details
    **/
    _count?: true | Srl_detailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Srl_detailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Srl_detailMaxAggregateInputType
  }

  export type GetSrl_detailAggregateType<T extends Srl_detailAggregateArgs> = {
        [P in keyof T & keyof AggregateSrl_detail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSrl_detail[P]>
      : GetScalarType<T[P], AggregateSrl_detail[P]>
  }




  export type srl_detailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: srl_detailWhereInput
    orderBy?: srl_detailOrderByWithAggregationInput | srl_detailOrderByWithAggregationInput[]
    by: Srl_detailScalarFieldEnum[] | Srl_detailScalarFieldEnum
    having?: srl_detailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Srl_detailCountAggregateInputType | true
    _min?: Srl_detailMinAggregateInputType
    _max?: Srl_detailMaxAggregateInputType
  }

  export type Srl_detailGroupByOutputType = {
    srl_detail_id: string
    srl_id: string | null
    description: string
    status: string
    _count: Srl_detailCountAggregateOutputType | null
    _min: Srl_detailMinAggregateOutputType | null
    _max: Srl_detailMaxAggregateOutputType | null
  }

  type GetSrl_detailGroupByPayload<T extends srl_detailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Srl_detailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Srl_detailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Srl_detailGroupByOutputType[P]>
            : GetScalarType<T[P], Srl_detailGroupByOutputType[P]>
        }
      >
    >


  export type srl_detailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    srl_detail_id?: boolean
    srl_id?: boolean
    description?: boolean
    status?: boolean
    srl?: boolean | srl_detail$srlArgs<ExtArgs>
  }, ExtArgs["result"]["srl_detail"]>



  export type srl_detailSelectScalar = {
    srl_detail_id?: boolean
    srl_id?: boolean
    description?: boolean
    status?: boolean
  }

  export type srl_detailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"srl_detail_id" | "srl_id" | "description" | "status", ExtArgs["result"]["srl_detail"]>
  export type srl_detailInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    srl?: boolean | srl_detail$srlArgs<ExtArgs>
  }

  export type $srl_detailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "srl_detail"
    objects: {
      srl: Prisma.$srlPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      srl_detail_id: string
      srl_id: string | null
      description: string
      status: string
    }, ExtArgs["result"]["srl_detail"]>
    composites: {}
  }

  type srl_detailGetPayload<S extends boolean | null | undefined | srl_detailDefaultArgs> = $Result.GetResult<Prisma.$srl_detailPayload, S>

  type srl_detailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<srl_detailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Srl_detailCountAggregateInputType | true
    }

  export interface srl_detailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['srl_detail'], meta: { name: 'srl_detail' } }
    /**
     * Find zero or one Srl_detail that matches the filter.
     * @param {srl_detailFindUniqueArgs} args - Arguments to find a Srl_detail
     * @example
     * // Get one Srl_detail
     * const srl_detail = await prisma.srl_detail.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends srl_detailFindUniqueArgs>(args: SelectSubset<T, srl_detailFindUniqueArgs<ExtArgs>>): Prisma__srl_detailClient<$Result.GetResult<Prisma.$srl_detailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Srl_detail that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {srl_detailFindUniqueOrThrowArgs} args - Arguments to find a Srl_detail
     * @example
     * // Get one Srl_detail
     * const srl_detail = await prisma.srl_detail.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends srl_detailFindUniqueOrThrowArgs>(args: SelectSubset<T, srl_detailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__srl_detailClient<$Result.GetResult<Prisma.$srl_detailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Srl_detail that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {srl_detailFindFirstArgs} args - Arguments to find a Srl_detail
     * @example
     * // Get one Srl_detail
     * const srl_detail = await prisma.srl_detail.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends srl_detailFindFirstArgs>(args?: SelectSubset<T, srl_detailFindFirstArgs<ExtArgs>>): Prisma__srl_detailClient<$Result.GetResult<Prisma.$srl_detailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Srl_detail that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {srl_detailFindFirstOrThrowArgs} args - Arguments to find a Srl_detail
     * @example
     * // Get one Srl_detail
     * const srl_detail = await prisma.srl_detail.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends srl_detailFindFirstOrThrowArgs>(args?: SelectSubset<T, srl_detailFindFirstOrThrowArgs<ExtArgs>>): Prisma__srl_detailClient<$Result.GetResult<Prisma.$srl_detailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Srl_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {srl_detailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Srl_details
     * const srl_details = await prisma.srl_detail.findMany()
     * 
     * // Get first 10 Srl_details
     * const srl_details = await prisma.srl_detail.findMany({ take: 10 })
     * 
     * // Only select the `srl_detail_id`
     * const srl_detailWithSrl_detail_idOnly = await prisma.srl_detail.findMany({ select: { srl_detail_id: true } })
     * 
     */
    findMany<T extends srl_detailFindManyArgs>(args?: SelectSubset<T, srl_detailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$srl_detailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Srl_detail.
     * @param {srl_detailCreateArgs} args - Arguments to create a Srl_detail.
     * @example
     * // Create one Srl_detail
     * const Srl_detail = await prisma.srl_detail.create({
     *   data: {
     *     // ... data to create a Srl_detail
     *   }
     * })
     * 
     */
    create<T extends srl_detailCreateArgs>(args: SelectSubset<T, srl_detailCreateArgs<ExtArgs>>): Prisma__srl_detailClient<$Result.GetResult<Prisma.$srl_detailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Srl_details.
     * @param {srl_detailCreateManyArgs} args - Arguments to create many Srl_details.
     * @example
     * // Create many Srl_details
     * const srl_detail = await prisma.srl_detail.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends srl_detailCreateManyArgs>(args?: SelectSubset<T, srl_detailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Srl_detail.
     * @param {srl_detailDeleteArgs} args - Arguments to delete one Srl_detail.
     * @example
     * // Delete one Srl_detail
     * const Srl_detail = await prisma.srl_detail.delete({
     *   where: {
     *     // ... filter to delete one Srl_detail
     *   }
     * })
     * 
     */
    delete<T extends srl_detailDeleteArgs>(args: SelectSubset<T, srl_detailDeleteArgs<ExtArgs>>): Prisma__srl_detailClient<$Result.GetResult<Prisma.$srl_detailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Srl_detail.
     * @param {srl_detailUpdateArgs} args - Arguments to update one Srl_detail.
     * @example
     * // Update one Srl_detail
     * const srl_detail = await prisma.srl_detail.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends srl_detailUpdateArgs>(args: SelectSubset<T, srl_detailUpdateArgs<ExtArgs>>): Prisma__srl_detailClient<$Result.GetResult<Prisma.$srl_detailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Srl_details.
     * @param {srl_detailDeleteManyArgs} args - Arguments to filter Srl_details to delete.
     * @example
     * // Delete a few Srl_details
     * const { count } = await prisma.srl_detail.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends srl_detailDeleteManyArgs>(args?: SelectSubset<T, srl_detailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Srl_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {srl_detailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Srl_details
     * const srl_detail = await prisma.srl_detail.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends srl_detailUpdateManyArgs>(args: SelectSubset<T, srl_detailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Srl_detail.
     * @param {srl_detailUpsertArgs} args - Arguments to update or create a Srl_detail.
     * @example
     * // Update or create a Srl_detail
     * const srl_detail = await prisma.srl_detail.upsert({
     *   create: {
     *     // ... data to create a Srl_detail
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Srl_detail we want to update
     *   }
     * })
     */
    upsert<T extends srl_detailUpsertArgs>(args: SelectSubset<T, srl_detailUpsertArgs<ExtArgs>>): Prisma__srl_detailClient<$Result.GetResult<Prisma.$srl_detailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Srl_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {srl_detailCountArgs} args - Arguments to filter Srl_details to count.
     * @example
     * // Count the number of Srl_details
     * const count = await prisma.srl_detail.count({
     *   where: {
     *     // ... the filter for the Srl_details we want to count
     *   }
     * })
    **/
    count<T extends srl_detailCountArgs>(
      args?: Subset<T, srl_detailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Srl_detailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Srl_detail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Srl_detailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Srl_detailAggregateArgs>(args: Subset<T, Srl_detailAggregateArgs>): Prisma.PrismaPromise<GetSrl_detailAggregateType<T>>

    /**
     * Group by Srl_detail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {srl_detailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends srl_detailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: srl_detailGroupByArgs['orderBy'] }
        : { orderBy?: srl_detailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, srl_detailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSrl_detailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the srl_detail model
   */
  readonly fields: srl_detailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for srl_detail.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__srl_detailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    srl<T extends srl_detail$srlArgs<ExtArgs> = {}>(args?: Subset<T, srl_detail$srlArgs<ExtArgs>>): Prisma__srlClient<$Result.GetResult<Prisma.$srlPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the srl_detail model
   */
  interface srl_detailFieldRefs {
    readonly srl_detail_id: FieldRef<"srl_detail", 'String'>
    readonly srl_id: FieldRef<"srl_detail", 'String'>
    readonly description: FieldRef<"srl_detail", 'String'>
    readonly status: FieldRef<"srl_detail", 'String'>
  }
    

  // Custom InputTypes
  /**
   * srl_detail findUnique
   */
  export type srl_detailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl_detail
     */
    select?: srl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl_detail
     */
    omit?: srl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srl_detailInclude<ExtArgs> | null
    /**
     * Filter, which srl_detail to fetch.
     */
    where: srl_detailWhereUniqueInput
  }

  /**
   * srl_detail findUniqueOrThrow
   */
  export type srl_detailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl_detail
     */
    select?: srl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl_detail
     */
    omit?: srl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srl_detailInclude<ExtArgs> | null
    /**
     * Filter, which srl_detail to fetch.
     */
    where: srl_detailWhereUniqueInput
  }

  /**
   * srl_detail findFirst
   */
  export type srl_detailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl_detail
     */
    select?: srl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl_detail
     */
    omit?: srl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srl_detailInclude<ExtArgs> | null
    /**
     * Filter, which srl_detail to fetch.
     */
    where?: srl_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of srl_details to fetch.
     */
    orderBy?: srl_detailOrderByWithRelationInput | srl_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for srl_details.
     */
    cursor?: srl_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` srl_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` srl_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of srl_details.
     */
    distinct?: Srl_detailScalarFieldEnum | Srl_detailScalarFieldEnum[]
  }

  /**
   * srl_detail findFirstOrThrow
   */
  export type srl_detailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl_detail
     */
    select?: srl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl_detail
     */
    omit?: srl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srl_detailInclude<ExtArgs> | null
    /**
     * Filter, which srl_detail to fetch.
     */
    where?: srl_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of srl_details to fetch.
     */
    orderBy?: srl_detailOrderByWithRelationInput | srl_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for srl_details.
     */
    cursor?: srl_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` srl_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` srl_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of srl_details.
     */
    distinct?: Srl_detailScalarFieldEnum | Srl_detailScalarFieldEnum[]
  }

  /**
   * srl_detail findMany
   */
  export type srl_detailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl_detail
     */
    select?: srl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl_detail
     */
    omit?: srl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srl_detailInclude<ExtArgs> | null
    /**
     * Filter, which srl_details to fetch.
     */
    where?: srl_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of srl_details to fetch.
     */
    orderBy?: srl_detailOrderByWithRelationInput | srl_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing srl_details.
     */
    cursor?: srl_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` srl_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` srl_details.
     */
    skip?: number
    distinct?: Srl_detailScalarFieldEnum | Srl_detailScalarFieldEnum[]
  }

  /**
   * srl_detail create
   */
  export type srl_detailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl_detail
     */
    select?: srl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl_detail
     */
    omit?: srl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srl_detailInclude<ExtArgs> | null
    /**
     * The data needed to create a srl_detail.
     */
    data: XOR<srl_detailCreateInput, srl_detailUncheckedCreateInput>
  }

  /**
   * srl_detail createMany
   */
  export type srl_detailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many srl_details.
     */
    data: srl_detailCreateManyInput | srl_detailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * srl_detail update
   */
  export type srl_detailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl_detail
     */
    select?: srl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl_detail
     */
    omit?: srl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srl_detailInclude<ExtArgs> | null
    /**
     * The data needed to update a srl_detail.
     */
    data: XOR<srl_detailUpdateInput, srl_detailUncheckedUpdateInput>
    /**
     * Choose, which srl_detail to update.
     */
    where: srl_detailWhereUniqueInput
  }

  /**
   * srl_detail updateMany
   */
  export type srl_detailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update srl_details.
     */
    data: XOR<srl_detailUpdateManyMutationInput, srl_detailUncheckedUpdateManyInput>
    /**
     * Filter which srl_details to update
     */
    where?: srl_detailWhereInput
    /**
     * Limit how many srl_details to update.
     */
    limit?: number
  }

  /**
   * srl_detail upsert
   */
  export type srl_detailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl_detail
     */
    select?: srl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl_detail
     */
    omit?: srl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srl_detailInclude<ExtArgs> | null
    /**
     * The filter to search for the srl_detail to update in case it exists.
     */
    where: srl_detailWhereUniqueInput
    /**
     * In case the srl_detail found by the `where` argument doesn't exist, create a new srl_detail with this data.
     */
    create: XOR<srl_detailCreateInput, srl_detailUncheckedCreateInput>
    /**
     * In case the srl_detail was found with the provided `where` argument, update it with this data.
     */
    update: XOR<srl_detailUpdateInput, srl_detailUncheckedUpdateInput>
  }

  /**
   * srl_detail delete
   */
  export type srl_detailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl_detail
     */
    select?: srl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl_detail
     */
    omit?: srl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srl_detailInclude<ExtArgs> | null
    /**
     * Filter which srl_detail to delete.
     */
    where: srl_detailWhereUniqueInput
  }

  /**
   * srl_detail deleteMany
   */
  export type srl_detailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which srl_details to delete
     */
    where?: srl_detailWhereInput
    /**
     * Limit how many srl_details to delete.
     */
    limit?: number
  }

  /**
   * srl_detail.srl
   */
  export type srl_detail$srlArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl
     */
    select?: srlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl
     */
    omit?: srlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srlInclude<ExtArgs> | null
    where?: srlWhereInput
  }

  /**
   * srl_detail without action
   */
  export type srl_detailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the srl_detail
     */
    select?: srl_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the srl_detail
     */
    omit?: srl_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: srl_detailInclude<ExtArgs> | null
  }


  /**
   * Model cuti
   */

  export type AggregateCuti = {
    _count: CutiCountAggregateOutputType | null
    _avg: CutiAvgAggregateOutputType | null
    _sum: CutiSumAggregateOutputType | null
    _min: CutiMinAggregateOutputType | null
    _max: CutiMaxAggregateOutputType | null
  }

  export type CutiAvgAggregateOutputType = {
    year: number | null
  }

  export type CutiSumAggregateOutputType = {
    year: number | null
  }

  export type CutiMinAggregateOutputType = {
    cuti_id: string | null
    payroll: string | null
    type: string | null
    description: string | null
    date: Date | null
    year: number | null
    status: $Enums.cuti_status | null
    approval: string | null
    createdAt: Date | null
  }

  export type CutiMaxAggregateOutputType = {
    cuti_id: string | null
    payroll: string | null
    type: string | null
    description: string | null
    date: Date | null
    year: number | null
    status: $Enums.cuti_status | null
    approval: string | null
    createdAt: Date | null
  }

  export type CutiCountAggregateOutputType = {
    cuti_id: number
    payroll: number
    type: number
    description: number
    date: number
    year: number
    status: number
    approval: number
    createdAt: number
    _all: number
  }


  export type CutiAvgAggregateInputType = {
    year?: true
  }

  export type CutiSumAggregateInputType = {
    year?: true
  }

  export type CutiMinAggregateInputType = {
    cuti_id?: true
    payroll?: true
    type?: true
    description?: true
    date?: true
    year?: true
    status?: true
    approval?: true
    createdAt?: true
  }

  export type CutiMaxAggregateInputType = {
    cuti_id?: true
    payroll?: true
    type?: true
    description?: true
    date?: true
    year?: true
    status?: true
    approval?: true
    createdAt?: true
  }

  export type CutiCountAggregateInputType = {
    cuti_id?: true
    payroll?: true
    type?: true
    description?: true
    date?: true
    year?: true
    status?: true
    approval?: true
    createdAt?: true
    _all?: true
  }

  export type CutiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cuti to aggregate.
     */
    where?: cutiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cutis to fetch.
     */
    orderBy?: cutiOrderByWithRelationInput | cutiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cutiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cutis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cutis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cutis
    **/
    _count?: true | CutiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CutiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CutiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CutiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CutiMaxAggregateInputType
  }

  export type GetCutiAggregateType<T extends CutiAggregateArgs> = {
        [P in keyof T & keyof AggregateCuti]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCuti[P]>
      : GetScalarType<T[P], AggregateCuti[P]>
  }




  export type cutiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cutiWhereInput
    orderBy?: cutiOrderByWithAggregationInput | cutiOrderByWithAggregationInput[]
    by: CutiScalarFieldEnum[] | CutiScalarFieldEnum
    having?: cutiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CutiCountAggregateInputType | true
    _avg?: CutiAvgAggregateInputType
    _sum?: CutiSumAggregateInputType
    _min?: CutiMinAggregateInputType
    _max?: CutiMaxAggregateInputType
  }

  export type CutiGroupByOutputType = {
    cuti_id: string
    payroll: string | null
    type: string
    description: string
    date: Date
    year: number
    status: $Enums.cuti_status
    approval: string | null
    createdAt: Date
    _count: CutiCountAggregateOutputType | null
    _avg: CutiAvgAggregateOutputType | null
    _sum: CutiSumAggregateOutputType | null
    _min: CutiMinAggregateOutputType | null
    _max: CutiMaxAggregateOutputType | null
  }

  type GetCutiGroupByPayload<T extends cutiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CutiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CutiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CutiGroupByOutputType[P]>
            : GetScalarType<T[P], CutiGroupByOutputType[P]>
        }
      >
    >


  export type cutiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    cuti_id?: boolean
    payroll?: boolean
    type?: boolean
    description?: boolean
    date?: boolean
    year?: boolean
    status?: boolean
    approval?: boolean
    createdAt?: boolean
    employee_cuti_approvalToemployee?: boolean | cuti$employee_cuti_approvalToemployeeArgs<ExtArgs>
    employee?: boolean | cuti$employeeArgs<ExtArgs>
  }, ExtArgs["result"]["cuti"]>



  export type cutiSelectScalar = {
    cuti_id?: boolean
    payroll?: boolean
    type?: boolean
    description?: boolean
    date?: boolean
    year?: boolean
    status?: boolean
    approval?: boolean
    createdAt?: boolean
  }

  export type cutiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"cuti_id" | "payroll" | "type" | "description" | "date" | "year" | "status" | "approval" | "createdAt", ExtArgs["result"]["cuti"]>
  export type cutiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee_cuti_approvalToemployee?: boolean | cuti$employee_cuti_approvalToemployeeArgs<ExtArgs>
    employee?: boolean | cuti$employeeArgs<ExtArgs>
  }

  export type $cutiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cuti"
    objects: {
      employee_cuti_approvalToemployee: Prisma.$employeePayload<ExtArgs> | null
      employee: Prisma.$employeePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      cuti_id: string
      payroll: string | null
      type: string
      description: string
      date: Date
      year: number
      status: $Enums.cuti_status
      approval: string | null
      createdAt: Date
    }, ExtArgs["result"]["cuti"]>
    composites: {}
  }

  type cutiGetPayload<S extends boolean | null | undefined | cutiDefaultArgs> = $Result.GetResult<Prisma.$cutiPayload, S>

  type cutiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cutiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CutiCountAggregateInputType | true
    }

  export interface cutiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cuti'], meta: { name: 'cuti' } }
    /**
     * Find zero or one Cuti that matches the filter.
     * @param {cutiFindUniqueArgs} args - Arguments to find a Cuti
     * @example
     * // Get one Cuti
     * const cuti = await prisma.cuti.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cutiFindUniqueArgs>(args: SelectSubset<T, cutiFindUniqueArgs<ExtArgs>>): Prisma__cutiClient<$Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cuti that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cutiFindUniqueOrThrowArgs} args - Arguments to find a Cuti
     * @example
     * // Get one Cuti
     * const cuti = await prisma.cuti.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cutiFindUniqueOrThrowArgs>(args: SelectSubset<T, cutiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cutiClient<$Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cuti that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cutiFindFirstArgs} args - Arguments to find a Cuti
     * @example
     * // Get one Cuti
     * const cuti = await prisma.cuti.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cutiFindFirstArgs>(args?: SelectSubset<T, cutiFindFirstArgs<ExtArgs>>): Prisma__cutiClient<$Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cuti that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cutiFindFirstOrThrowArgs} args - Arguments to find a Cuti
     * @example
     * // Get one Cuti
     * const cuti = await prisma.cuti.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cutiFindFirstOrThrowArgs>(args?: SelectSubset<T, cutiFindFirstOrThrowArgs<ExtArgs>>): Prisma__cutiClient<$Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cutis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cutiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cutis
     * const cutis = await prisma.cuti.findMany()
     * 
     * // Get first 10 Cutis
     * const cutis = await prisma.cuti.findMany({ take: 10 })
     * 
     * // Only select the `cuti_id`
     * const cutiWithCuti_idOnly = await prisma.cuti.findMany({ select: { cuti_id: true } })
     * 
     */
    findMany<T extends cutiFindManyArgs>(args?: SelectSubset<T, cutiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cuti.
     * @param {cutiCreateArgs} args - Arguments to create a Cuti.
     * @example
     * // Create one Cuti
     * const Cuti = await prisma.cuti.create({
     *   data: {
     *     // ... data to create a Cuti
     *   }
     * })
     * 
     */
    create<T extends cutiCreateArgs>(args: SelectSubset<T, cutiCreateArgs<ExtArgs>>): Prisma__cutiClient<$Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cutis.
     * @param {cutiCreateManyArgs} args - Arguments to create many Cutis.
     * @example
     * // Create many Cutis
     * const cuti = await prisma.cuti.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cutiCreateManyArgs>(args?: SelectSubset<T, cutiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Cuti.
     * @param {cutiDeleteArgs} args - Arguments to delete one Cuti.
     * @example
     * // Delete one Cuti
     * const Cuti = await prisma.cuti.delete({
     *   where: {
     *     // ... filter to delete one Cuti
     *   }
     * })
     * 
     */
    delete<T extends cutiDeleteArgs>(args: SelectSubset<T, cutiDeleteArgs<ExtArgs>>): Prisma__cutiClient<$Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cuti.
     * @param {cutiUpdateArgs} args - Arguments to update one Cuti.
     * @example
     * // Update one Cuti
     * const cuti = await prisma.cuti.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cutiUpdateArgs>(args: SelectSubset<T, cutiUpdateArgs<ExtArgs>>): Prisma__cutiClient<$Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cutis.
     * @param {cutiDeleteManyArgs} args - Arguments to filter Cutis to delete.
     * @example
     * // Delete a few Cutis
     * const { count } = await prisma.cuti.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cutiDeleteManyArgs>(args?: SelectSubset<T, cutiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cutis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cutiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cutis
     * const cuti = await prisma.cuti.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cutiUpdateManyArgs>(args: SelectSubset<T, cutiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cuti.
     * @param {cutiUpsertArgs} args - Arguments to update or create a Cuti.
     * @example
     * // Update or create a Cuti
     * const cuti = await prisma.cuti.upsert({
     *   create: {
     *     // ... data to create a Cuti
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cuti we want to update
     *   }
     * })
     */
    upsert<T extends cutiUpsertArgs>(args: SelectSubset<T, cutiUpsertArgs<ExtArgs>>): Prisma__cutiClient<$Result.GetResult<Prisma.$cutiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cutis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cutiCountArgs} args - Arguments to filter Cutis to count.
     * @example
     * // Count the number of Cutis
     * const count = await prisma.cuti.count({
     *   where: {
     *     // ... the filter for the Cutis we want to count
     *   }
     * })
    **/
    count<T extends cutiCountArgs>(
      args?: Subset<T, cutiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CutiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cuti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CutiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CutiAggregateArgs>(args: Subset<T, CutiAggregateArgs>): Prisma.PrismaPromise<GetCutiAggregateType<T>>

    /**
     * Group by Cuti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cutiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cutiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cutiGroupByArgs['orderBy'] }
        : { orderBy?: cutiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cutiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCutiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cuti model
   */
  readonly fields: cutiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cuti.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cutiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee_cuti_approvalToemployee<T extends cuti$employee_cuti_approvalToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, cuti$employee_cuti_approvalToemployeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    employee<T extends cuti$employeeArgs<ExtArgs> = {}>(args?: Subset<T, cuti$employeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cuti model
   */
  interface cutiFieldRefs {
    readonly cuti_id: FieldRef<"cuti", 'String'>
    readonly payroll: FieldRef<"cuti", 'String'>
    readonly type: FieldRef<"cuti", 'String'>
    readonly description: FieldRef<"cuti", 'String'>
    readonly date: FieldRef<"cuti", 'DateTime'>
    readonly year: FieldRef<"cuti", 'Int'>
    readonly status: FieldRef<"cuti", 'cuti_status'>
    readonly approval: FieldRef<"cuti", 'String'>
    readonly createdAt: FieldRef<"cuti", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * cuti findUnique
   */
  export type cutiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuti
     */
    select?: cutiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuti
     */
    omit?: cutiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cutiInclude<ExtArgs> | null
    /**
     * Filter, which cuti to fetch.
     */
    where: cutiWhereUniqueInput
  }

  /**
   * cuti findUniqueOrThrow
   */
  export type cutiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuti
     */
    select?: cutiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuti
     */
    omit?: cutiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cutiInclude<ExtArgs> | null
    /**
     * Filter, which cuti to fetch.
     */
    where: cutiWhereUniqueInput
  }

  /**
   * cuti findFirst
   */
  export type cutiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuti
     */
    select?: cutiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuti
     */
    omit?: cutiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cutiInclude<ExtArgs> | null
    /**
     * Filter, which cuti to fetch.
     */
    where?: cutiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cutis to fetch.
     */
    orderBy?: cutiOrderByWithRelationInput | cutiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cutis.
     */
    cursor?: cutiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cutis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cutis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cutis.
     */
    distinct?: CutiScalarFieldEnum | CutiScalarFieldEnum[]
  }

  /**
   * cuti findFirstOrThrow
   */
  export type cutiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuti
     */
    select?: cutiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuti
     */
    omit?: cutiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cutiInclude<ExtArgs> | null
    /**
     * Filter, which cuti to fetch.
     */
    where?: cutiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cutis to fetch.
     */
    orderBy?: cutiOrderByWithRelationInput | cutiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cutis.
     */
    cursor?: cutiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cutis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cutis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cutis.
     */
    distinct?: CutiScalarFieldEnum | CutiScalarFieldEnum[]
  }

  /**
   * cuti findMany
   */
  export type cutiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuti
     */
    select?: cutiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuti
     */
    omit?: cutiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cutiInclude<ExtArgs> | null
    /**
     * Filter, which cutis to fetch.
     */
    where?: cutiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cutis to fetch.
     */
    orderBy?: cutiOrderByWithRelationInput | cutiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cutis.
     */
    cursor?: cutiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cutis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cutis.
     */
    skip?: number
    distinct?: CutiScalarFieldEnum | CutiScalarFieldEnum[]
  }

  /**
   * cuti create
   */
  export type cutiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuti
     */
    select?: cutiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuti
     */
    omit?: cutiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cutiInclude<ExtArgs> | null
    /**
     * The data needed to create a cuti.
     */
    data: XOR<cutiCreateInput, cutiUncheckedCreateInput>
  }

  /**
   * cuti createMany
   */
  export type cutiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cutis.
     */
    data: cutiCreateManyInput | cutiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cuti update
   */
  export type cutiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuti
     */
    select?: cutiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuti
     */
    omit?: cutiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cutiInclude<ExtArgs> | null
    /**
     * The data needed to update a cuti.
     */
    data: XOR<cutiUpdateInput, cutiUncheckedUpdateInput>
    /**
     * Choose, which cuti to update.
     */
    where: cutiWhereUniqueInput
  }

  /**
   * cuti updateMany
   */
  export type cutiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cutis.
     */
    data: XOR<cutiUpdateManyMutationInput, cutiUncheckedUpdateManyInput>
    /**
     * Filter which cutis to update
     */
    where?: cutiWhereInput
    /**
     * Limit how many cutis to update.
     */
    limit?: number
  }

  /**
   * cuti upsert
   */
  export type cutiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuti
     */
    select?: cutiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuti
     */
    omit?: cutiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cutiInclude<ExtArgs> | null
    /**
     * The filter to search for the cuti to update in case it exists.
     */
    where: cutiWhereUniqueInput
    /**
     * In case the cuti found by the `where` argument doesn't exist, create a new cuti with this data.
     */
    create: XOR<cutiCreateInput, cutiUncheckedCreateInput>
    /**
     * In case the cuti was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cutiUpdateInput, cutiUncheckedUpdateInput>
  }

  /**
   * cuti delete
   */
  export type cutiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuti
     */
    select?: cutiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuti
     */
    omit?: cutiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cutiInclude<ExtArgs> | null
    /**
     * Filter which cuti to delete.
     */
    where: cutiWhereUniqueInput
  }

  /**
   * cuti deleteMany
   */
  export type cutiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cutis to delete
     */
    where?: cutiWhereInput
    /**
     * Limit how many cutis to delete.
     */
    limit?: number
  }

  /**
   * cuti.employee_cuti_approvalToemployee
   */
  export type cuti$employee_cuti_approvalToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * cuti.employee
   */
  export type cuti$employeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * cuti without action
   */
  export type cutiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuti
     */
    select?: cutiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuti
     */
    omit?: cutiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cutiInclude<ExtArgs> | null
  }


  /**
   * Model sppd
   */

  export type AggregateSppd = {
    _count: SppdCountAggregateOutputType | null
    _avg: SppdAvgAggregateOutputType | null
    _sum: SppdSumAggregateOutputType | null
    _min: SppdMinAggregateOutputType | null
    _max: SppdMaxAggregateOutputType | null
  }

  export type SppdAvgAggregateOutputType = {
    duration: number | null
  }

  export type SppdSumAggregateOutputType = {
    duration: number | null
  }

  export type SppdMinAggregateOutputType = {
    sppd_id: string | null
    purpose: string | null
    location: string | null
    dept: string | null
    start_date: Date | null
    end_date: Date | null
    duration: number | null
    createdBy: string | null
    createdAt: Date | null
  }

  export type SppdMaxAggregateOutputType = {
    sppd_id: string | null
    purpose: string | null
    location: string | null
    dept: string | null
    start_date: Date | null
    end_date: Date | null
    duration: number | null
    createdBy: string | null
    createdAt: Date | null
  }

  export type SppdCountAggregateOutputType = {
    sppd_id: number
    purpose: number
    location: number
    dept: number
    start_date: number
    end_date: number
    duration: number
    createdBy: number
    createdAt: number
    _all: number
  }


  export type SppdAvgAggregateInputType = {
    duration?: true
  }

  export type SppdSumAggregateInputType = {
    duration?: true
  }

  export type SppdMinAggregateInputType = {
    sppd_id?: true
    purpose?: true
    location?: true
    dept?: true
    start_date?: true
    end_date?: true
    duration?: true
    createdBy?: true
    createdAt?: true
  }

  export type SppdMaxAggregateInputType = {
    sppd_id?: true
    purpose?: true
    location?: true
    dept?: true
    start_date?: true
    end_date?: true
    duration?: true
    createdBy?: true
    createdAt?: true
  }

  export type SppdCountAggregateInputType = {
    sppd_id?: true
    purpose?: true
    location?: true
    dept?: true
    start_date?: true
    end_date?: true
    duration?: true
    createdBy?: true
    createdAt?: true
    _all?: true
  }

  export type SppdAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sppd to aggregate.
     */
    where?: sppdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sppds to fetch.
     */
    orderBy?: sppdOrderByWithRelationInput | sppdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sppdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sppds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sppds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sppds
    **/
    _count?: true | SppdCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SppdAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SppdSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SppdMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SppdMaxAggregateInputType
  }

  export type GetSppdAggregateType<T extends SppdAggregateArgs> = {
        [P in keyof T & keyof AggregateSppd]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSppd[P]>
      : GetScalarType<T[P], AggregateSppd[P]>
  }




  export type sppdGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sppdWhereInput
    orderBy?: sppdOrderByWithAggregationInput | sppdOrderByWithAggregationInput[]
    by: SppdScalarFieldEnum[] | SppdScalarFieldEnum
    having?: sppdScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SppdCountAggregateInputType | true
    _avg?: SppdAvgAggregateInputType
    _sum?: SppdSumAggregateInputType
    _min?: SppdMinAggregateInputType
    _max?: SppdMaxAggregateInputType
  }

  export type SppdGroupByOutputType = {
    sppd_id: string
    purpose: string
    location: string
    dept: string | null
    start_date: Date
    end_date: Date
    duration: number
    createdBy: string | null
    createdAt: Date
    _count: SppdCountAggregateOutputType | null
    _avg: SppdAvgAggregateOutputType | null
    _sum: SppdSumAggregateOutputType | null
    _min: SppdMinAggregateOutputType | null
    _max: SppdMaxAggregateOutputType | null
  }

  type GetSppdGroupByPayload<T extends sppdGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SppdGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SppdGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SppdGroupByOutputType[P]>
            : GetScalarType<T[P], SppdGroupByOutputType[P]>
        }
      >
    >


  export type sppdSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sppd_id?: boolean
    purpose?: boolean
    location?: boolean
    dept?: boolean
    start_date?: boolean
    end_date?: boolean
    duration?: boolean
    createdBy?: boolean
    createdAt?: boolean
    skpd?: boolean | sppd$skpdArgs<ExtArgs>
    employee?: boolean | sppd$employeeArgs<ExtArgs>
    dept_sppd_deptTodept?: boolean | sppd$dept_sppd_deptTodeptArgs<ExtArgs>
    sppd_detail?: boolean | sppd$sppd_detailArgs<ExtArgs>
    _count?: boolean | SppdCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sppd"]>



  export type sppdSelectScalar = {
    sppd_id?: boolean
    purpose?: boolean
    location?: boolean
    dept?: boolean
    start_date?: boolean
    end_date?: boolean
    duration?: boolean
    createdBy?: boolean
    createdAt?: boolean
  }

  export type sppdOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"sppd_id" | "purpose" | "location" | "dept" | "start_date" | "end_date" | "duration" | "createdBy" | "createdAt", ExtArgs["result"]["sppd"]>
  export type sppdInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    skpd?: boolean | sppd$skpdArgs<ExtArgs>
    employee?: boolean | sppd$employeeArgs<ExtArgs>
    dept_sppd_deptTodept?: boolean | sppd$dept_sppd_deptTodeptArgs<ExtArgs>
    sppd_detail?: boolean | sppd$sppd_detailArgs<ExtArgs>
    _count?: boolean | SppdCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $sppdPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sppd"
    objects: {
      skpd: Prisma.$skpdPayload<ExtArgs>[]
      employee: Prisma.$employeePayload<ExtArgs> | null
      dept_sppd_deptTodept: Prisma.$deptPayload<ExtArgs> | null
      sppd_detail: Prisma.$sppd_detailPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      sppd_id: string
      purpose: string
      location: string
      dept: string | null
      start_date: Date
      end_date: Date
      duration: number
      createdBy: string | null
      createdAt: Date
    }, ExtArgs["result"]["sppd"]>
    composites: {}
  }

  type sppdGetPayload<S extends boolean | null | undefined | sppdDefaultArgs> = $Result.GetResult<Prisma.$sppdPayload, S>

  type sppdCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sppdFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SppdCountAggregateInputType | true
    }

  export interface sppdDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sppd'], meta: { name: 'sppd' } }
    /**
     * Find zero or one Sppd that matches the filter.
     * @param {sppdFindUniqueArgs} args - Arguments to find a Sppd
     * @example
     * // Get one Sppd
     * const sppd = await prisma.sppd.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sppdFindUniqueArgs>(args: SelectSubset<T, sppdFindUniqueArgs<ExtArgs>>): Prisma__sppdClient<$Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sppd that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sppdFindUniqueOrThrowArgs} args - Arguments to find a Sppd
     * @example
     * // Get one Sppd
     * const sppd = await prisma.sppd.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sppdFindUniqueOrThrowArgs>(args: SelectSubset<T, sppdFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sppdClient<$Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sppd that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sppdFindFirstArgs} args - Arguments to find a Sppd
     * @example
     * // Get one Sppd
     * const sppd = await prisma.sppd.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sppdFindFirstArgs>(args?: SelectSubset<T, sppdFindFirstArgs<ExtArgs>>): Prisma__sppdClient<$Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sppd that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sppdFindFirstOrThrowArgs} args - Arguments to find a Sppd
     * @example
     * // Get one Sppd
     * const sppd = await prisma.sppd.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sppdFindFirstOrThrowArgs>(args?: SelectSubset<T, sppdFindFirstOrThrowArgs<ExtArgs>>): Prisma__sppdClient<$Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sppds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sppdFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sppds
     * const sppds = await prisma.sppd.findMany()
     * 
     * // Get first 10 Sppds
     * const sppds = await prisma.sppd.findMany({ take: 10 })
     * 
     * // Only select the `sppd_id`
     * const sppdWithSppd_idOnly = await prisma.sppd.findMany({ select: { sppd_id: true } })
     * 
     */
    findMany<T extends sppdFindManyArgs>(args?: SelectSubset<T, sppdFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sppd.
     * @param {sppdCreateArgs} args - Arguments to create a Sppd.
     * @example
     * // Create one Sppd
     * const Sppd = await prisma.sppd.create({
     *   data: {
     *     // ... data to create a Sppd
     *   }
     * })
     * 
     */
    create<T extends sppdCreateArgs>(args: SelectSubset<T, sppdCreateArgs<ExtArgs>>): Prisma__sppdClient<$Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sppds.
     * @param {sppdCreateManyArgs} args - Arguments to create many Sppds.
     * @example
     * // Create many Sppds
     * const sppd = await prisma.sppd.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sppdCreateManyArgs>(args?: SelectSubset<T, sppdCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sppd.
     * @param {sppdDeleteArgs} args - Arguments to delete one Sppd.
     * @example
     * // Delete one Sppd
     * const Sppd = await prisma.sppd.delete({
     *   where: {
     *     // ... filter to delete one Sppd
     *   }
     * })
     * 
     */
    delete<T extends sppdDeleteArgs>(args: SelectSubset<T, sppdDeleteArgs<ExtArgs>>): Prisma__sppdClient<$Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sppd.
     * @param {sppdUpdateArgs} args - Arguments to update one Sppd.
     * @example
     * // Update one Sppd
     * const sppd = await prisma.sppd.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sppdUpdateArgs>(args: SelectSubset<T, sppdUpdateArgs<ExtArgs>>): Prisma__sppdClient<$Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sppds.
     * @param {sppdDeleteManyArgs} args - Arguments to filter Sppds to delete.
     * @example
     * // Delete a few Sppds
     * const { count } = await prisma.sppd.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sppdDeleteManyArgs>(args?: SelectSubset<T, sppdDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sppds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sppdUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sppds
     * const sppd = await prisma.sppd.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sppdUpdateManyArgs>(args: SelectSubset<T, sppdUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sppd.
     * @param {sppdUpsertArgs} args - Arguments to update or create a Sppd.
     * @example
     * // Update or create a Sppd
     * const sppd = await prisma.sppd.upsert({
     *   create: {
     *     // ... data to create a Sppd
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sppd we want to update
     *   }
     * })
     */
    upsert<T extends sppdUpsertArgs>(args: SelectSubset<T, sppdUpsertArgs<ExtArgs>>): Prisma__sppdClient<$Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sppds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sppdCountArgs} args - Arguments to filter Sppds to count.
     * @example
     * // Count the number of Sppds
     * const count = await prisma.sppd.count({
     *   where: {
     *     // ... the filter for the Sppds we want to count
     *   }
     * })
    **/
    count<T extends sppdCountArgs>(
      args?: Subset<T, sppdCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SppdCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sppd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SppdAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SppdAggregateArgs>(args: Subset<T, SppdAggregateArgs>): Prisma.PrismaPromise<GetSppdAggregateType<T>>

    /**
     * Group by Sppd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sppdGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sppdGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sppdGroupByArgs['orderBy'] }
        : { orderBy?: sppdGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sppdGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSppdGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sppd model
   */
  readonly fields: sppdFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sppd.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sppdClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    skpd<T extends sppd$skpdArgs<ExtArgs> = {}>(args?: Subset<T, sppd$skpdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$skpdPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    employee<T extends sppd$employeeArgs<ExtArgs> = {}>(args?: Subset<T, sppd$employeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    dept_sppd_deptTodept<T extends sppd$dept_sppd_deptTodeptArgs<ExtArgs> = {}>(args?: Subset<T, sppd$dept_sppd_deptTodeptArgs<ExtArgs>>): Prisma__deptClient<$Result.GetResult<Prisma.$deptPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sppd_detail<T extends sppd$sppd_detailArgs<ExtArgs> = {}>(args?: Subset<T, sppd$sppd_detailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sppd_detailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sppd model
   */
  interface sppdFieldRefs {
    readonly sppd_id: FieldRef<"sppd", 'String'>
    readonly purpose: FieldRef<"sppd", 'String'>
    readonly location: FieldRef<"sppd", 'String'>
    readonly dept: FieldRef<"sppd", 'String'>
    readonly start_date: FieldRef<"sppd", 'DateTime'>
    readonly end_date: FieldRef<"sppd", 'DateTime'>
    readonly duration: FieldRef<"sppd", 'Int'>
    readonly createdBy: FieldRef<"sppd", 'String'>
    readonly createdAt: FieldRef<"sppd", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sppd findUnique
   */
  export type sppdFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd
     */
    select?: sppdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd
     */
    omit?: sppdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppdInclude<ExtArgs> | null
    /**
     * Filter, which sppd to fetch.
     */
    where: sppdWhereUniqueInput
  }

  /**
   * sppd findUniqueOrThrow
   */
  export type sppdFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd
     */
    select?: sppdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd
     */
    omit?: sppdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppdInclude<ExtArgs> | null
    /**
     * Filter, which sppd to fetch.
     */
    where: sppdWhereUniqueInput
  }

  /**
   * sppd findFirst
   */
  export type sppdFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd
     */
    select?: sppdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd
     */
    omit?: sppdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppdInclude<ExtArgs> | null
    /**
     * Filter, which sppd to fetch.
     */
    where?: sppdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sppds to fetch.
     */
    orderBy?: sppdOrderByWithRelationInput | sppdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sppds.
     */
    cursor?: sppdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sppds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sppds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sppds.
     */
    distinct?: SppdScalarFieldEnum | SppdScalarFieldEnum[]
  }

  /**
   * sppd findFirstOrThrow
   */
  export type sppdFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd
     */
    select?: sppdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd
     */
    omit?: sppdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppdInclude<ExtArgs> | null
    /**
     * Filter, which sppd to fetch.
     */
    where?: sppdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sppds to fetch.
     */
    orderBy?: sppdOrderByWithRelationInput | sppdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sppds.
     */
    cursor?: sppdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sppds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sppds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sppds.
     */
    distinct?: SppdScalarFieldEnum | SppdScalarFieldEnum[]
  }

  /**
   * sppd findMany
   */
  export type sppdFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd
     */
    select?: sppdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd
     */
    omit?: sppdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppdInclude<ExtArgs> | null
    /**
     * Filter, which sppds to fetch.
     */
    where?: sppdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sppds to fetch.
     */
    orderBy?: sppdOrderByWithRelationInput | sppdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sppds.
     */
    cursor?: sppdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sppds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sppds.
     */
    skip?: number
    distinct?: SppdScalarFieldEnum | SppdScalarFieldEnum[]
  }

  /**
   * sppd create
   */
  export type sppdCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd
     */
    select?: sppdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd
     */
    omit?: sppdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppdInclude<ExtArgs> | null
    /**
     * The data needed to create a sppd.
     */
    data: XOR<sppdCreateInput, sppdUncheckedCreateInput>
  }

  /**
   * sppd createMany
   */
  export type sppdCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sppds.
     */
    data: sppdCreateManyInput | sppdCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sppd update
   */
  export type sppdUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd
     */
    select?: sppdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd
     */
    omit?: sppdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppdInclude<ExtArgs> | null
    /**
     * The data needed to update a sppd.
     */
    data: XOR<sppdUpdateInput, sppdUncheckedUpdateInput>
    /**
     * Choose, which sppd to update.
     */
    where: sppdWhereUniqueInput
  }

  /**
   * sppd updateMany
   */
  export type sppdUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sppds.
     */
    data: XOR<sppdUpdateManyMutationInput, sppdUncheckedUpdateManyInput>
    /**
     * Filter which sppds to update
     */
    where?: sppdWhereInput
    /**
     * Limit how many sppds to update.
     */
    limit?: number
  }

  /**
   * sppd upsert
   */
  export type sppdUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd
     */
    select?: sppdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd
     */
    omit?: sppdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppdInclude<ExtArgs> | null
    /**
     * The filter to search for the sppd to update in case it exists.
     */
    where: sppdWhereUniqueInput
    /**
     * In case the sppd found by the `where` argument doesn't exist, create a new sppd with this data.
     */
    create: XOR<sppdCreateInput, sppdUncheckedCreateInput>
    /**
     * In case the sppd was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sppdUpdateInput, sppdUncheckedUpdateInput>
  }

  /**
   * sppd delete
   */
  export type sppdDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd
     */
    select?: sppdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd
     */
    omit?: sppdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppdInclude<ExtArgs> | null
    /**
     * Filter which sppd to delete.
     */
    where: sppdWhereUniqueInput
  }

  /**
   * sppd deleteMany
   */
  export type sppdDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sppds to delete
     */
    where?: sppdWhereInput
    /**
     * Limit how many sppds to delete.
     */
    limit?: number
  }

  /**
   * sppd.skpd
   */
  export type sppd$skpdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skpd
     */
    select?: skpdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skpd
     */
    omit?: skpdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skpdInclude<ExtArgs> | null
    where?: skpdWhereInput
    orderBy?: skpdOrderByWithRelationInput | skpdOrderByWithRelationInput[]
    cursor?: skpdWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SkpdScalarFieldEnum | SkpdScalarFieldEnum[]
  }

  /**
   * sppd.employee
   */
  export type sppd$employeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * sppd.dept_sppd_deptTodept
   */
  export type sppd$dept_sppd_deptTodeptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dept
     */
    select?: deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dept
     */
    omit?: deptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deptInclude<ExtArgs> | null
    where?: deptWhereInput
  }

  /**
   * sppd.sppd_detail
   */
  export type sppd$sppd_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd_detail
     */
    select?: sppd_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd_detail
     */
    omit?: sppd_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppd_detailInclude<ExtArgs> | null
    where?: sppd_detailWhereInput
    orderBy?: sppd_detailOrderByWithRelationInput | sppd_detailOrderByWithRelationInput[]
    cursor?: sppd_detailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Sppd_detailScalarFieldEnum | Sppd_detailScalarFieldEnum[]
  }

  /**
   * sppd without action
   */
  export type sppdDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd
     */
    select?: sppdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd
     */
    omit?: sppdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppdInclude<ExtArgs> | null
  }


  /**
   * Model sppd_detail
   */

  export type AggregateSppd_detail = {
    _count: Sppd_detailCountAggregateOutputType | null
    _avg: Sppd_detailAvgAggregateOutputType | null
    _sum: Sppd_detailSumAggregateOutputType | null
    _min: Sppd_detailMinAggregateOutputType | null
    _max: Sppd_detailMaxAggregateOutputType | null
  }

  export type Sppd_detailAvgAggregateOutputType = {
    step: number | null
  }

  export type Sppd_detailSumAggregateOutputType = {
    step: number | null
  }

  export type Sppd_detailMinAggregateOutputType = {
    sppd_detail_id: string | null
    step: number | null
    sppd_id: string | null
    payroll: string | null
    description: string | null
  }

  export type Sppd_detailMaxAggregateOutputType = {
    sppd_detail_id: string | null
    step: number | null
    sppd_id: string | null
    payroll: string | null
    description: string | null
  }

  export type Sppd_detailCountAggregateOutputType = {
    sppd_detail_id: number
    step: number
    sppd_id: number
    payroll: number
    description: number
    _all: number
  }


  export type Sppd_detailAvgAggregateInputType = {
    step?: true
  }

  export type Sppd_detailSumAggregateInputType = {
    step?: true
  }

  export type Sppd_detailMinAggregateInputType = {
    sppd_detail_id?: true
    step?: true
    sppd_id?: true
    payroll?: true
    description?: true
  }

  export type Sppd_detailMaxAggregateInputType = {
    sppd_detail_id?: true
    step?: true
    sppd_id?: true
    payroll?: true
    description?: true
  }

  export type Sppd_detailCountAggregateInputType = {
    sppd_detail_id?: true
    step?: true
    sppd_id?: true
    payroll?: true
    description?: true
    _all?: true
  }

  export type Sppd_detailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sppd_detail to aggregate.
     */
    where?: sppd_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sppd_details to fetch.
     */
    orderBy?: sppd_detailOrderByWithRelationInput | sppd_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sppd_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sppd_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sppd_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sppd_details
    **/
    _count?: true | Sppd_detailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sppd_detailAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sppd_detailSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sppd_detailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sppd_detailMaxAggregateInputType
  }

  export type GetSppd_detailAggregateType<T extends Sppd_detailAggregateArgs> = {
        [P in keyof T & keyof AggregateSppd_detail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSppd_detail[P]>
      : GetScalarType<T[P], AggregateSppd_detail[P]>
  }




  export type sppd_detailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sppd_detailWhereInput
    orderBy?: sppd_detailOrderByWithAggregationInput | sppd_detailOrderByWithAggregationInput[]
    by: Sppd_detailScalarFieldEnum[] | Sppd_detailScalarFieldEnum
    having?: sppd_detailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sppd_detailCountAggregateInputType | true
    _avg?: Sppd_detailAvgAggregateInputType
    _sum?: Sppd_detailSumAggregateInputType
    _min?: Sppd_detailMinAggregateInputType
    _max?: Sppd_detailMaxAggregateInputType
  }

  export type Sppd_detailGroupByOutputType = {
    sppd_detail_id: string
    step: number
    sppd_id: string | null
    payroll: string | null
    description: string
    _count: Sppd_detailCountAggregateOutputType | null
    _avg: Sppd_detailAvgAggregateOutputType | null
    _sum: Sppd_detailSumAggregateOutputType | null
    _min: Sppd_detailMinAggregateOutputType | null
    _max: Sppd_detailMaxAggregateOutputType | null
  }

  type GetSppd_detailGroupByPayload<T extends sppd_detailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sppd_detailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sppd_detailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sppd_detailGroupByOutputType[P]>
            : GetScalarType<T[P], Sppd_detailGroupByOutputType[P]>
        }
      >
    >


  export type sppd_detailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sppd_detail_id?: boolean
    step?: boolean
    sppd_id?: boolean
    payroll?: boolean
    description?: boolean
    employee?: boolean | sppd_detail$employeeArgs<ExtArgs>
    sppd?: boolean | sppd_detail$sppdArgs<ExtArgs>
  }, ExtArgs["result"]["sppd_detail"]>



  export type sppd_detailSelectScalar = {
    sppd_detail_id?: boolean
    step?: boolean
    sppd_id?: boolean
    payroll?: boolean
    description?: boolean
  }

  export type sppd_detailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"sppd_detail_id" | "step" | "sppd_id" | "payroll" | "description", ExtArgs["result"]["sppd_detail"]>
  export type sppd_detailInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | sppd_detail$employeeArgs<ExtArgs>
    sppd?: boolean | sppd_detail$sppdArgs<ExtArgs>
  }

  export type $sppd_detailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sppd_detail"
    objects: {
      employee: Prisma.$employeePayload<ExtArgs> | null
      sppd: Prisma.$sppdPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      sppd_detail_id: string
      step: number
      sppd_id: string | null
      payroll: string | null
      description: string
    }, ExtArgs["result"]["sppd_detail"]>
    composites: {}
  }

  type sppd_detailGetPayload<S extends boolean | null | undefined | sppd_detailDefaultArgs> = $Result.GetResult<Prisma.$sppd_detailPayload, S>

  type sppd_detailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sppd_detailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sppd_detailCountAggregateInputType | true
    }

  export interface sppd_detailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sppd_detail'], meta: { name: 'sppd_detail' } }
    /**
     * Find zero or one Sppd_detail that matches the filter.
     * @param {sppd_detailFindUniqueArgs} args - Arguments to find a Sppd_detail
     * @example
     * // Get one Sppd_detail
     * const sppd_detail = await prisma.sppd_detail.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sppd_detailFindUniqueArgs>(args: SelectSubset<T, sppd_detailFindUniqueArgs<ExtArgs>>): Prisma__sppd_detailClient<$Result.GetResult<Prisma.$sppd_detailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sppd_detail that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sppd_detailFindUniqueOrThrowArgs} args - Arguments to find a Sppd_detail
     * @example
     * // Get one Sppd_detail
     * const sppd_detail = await prisma.sppd_detail.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sppd_detailFindUniqueOrThrowArgs>(args: SelectSubset<T, sppd_detailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sppd_detailClient<$Result.GetResult<Prisma.$sppd_detailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sppd_detail that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sppd_detailFindFirstArgs} args - Arguments to find a Sppd_detail
     * @example
     * // Get one Sppd_detail
     * const sppd_detail = await prisma.sppd_detail.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sppd_detailFindFirstArgs>(args?: SelectSubset<T, sppd_detailFindFirstArgs<ExtArgs>>): Prisma__sppd_detailClient<$Result.GetResult<Prisma.$sppd_detailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sppd_detail that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sppd_detailFindFirstOrThrowArgs} args - Arguments to find a Sppd_detail
     * @example
     * // Get one Sppd_detail
     * const sppd_detail = await prisma.sppd_detail.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sppd_detailFindFirstOrThrowArgs>(args?: SelectSubset<T, sppd_detailFindFirstOrThrowArgs<ExtArgs>>): Prisma__sppd_detailClient<$Result.GetResult<Prisma.$sppd_detailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sppd_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sppd_detailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sppd_details
     * const sppd_details = await prisma.sppd_detail.findMany()
     * 
     * // Get first 10 Sppd_details
     * const sppd_details = await prisma.sppd_detail.findMany({ take: 10 })
     * 
     * // Only select the `sppd_detail_id`
     * const sppd_detailWithSppd_detail_idOnly = await prisma.sppd_detail.findMany({ select: { sppd_detail_id: true } })
     * 
     */
    findMany<T extends sppd_detailFindManyArgs>(args?: SelectSubset<T, sppd_detailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sppd_detailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sppd_detail.
     * @param {sppd_detailCreateArgs} args - Arguments to create a Sppd_detail.
     * @example
     * // Create one Sppd_detail
     * const Sppd_detail = await prisma.sppd_detail.create({
     *   data: {
     *     // ... data to create a Sppd_detail
     *   }
     * })
     * 
     */
    create<T extends sppd_detailCreateArgs>(args: SelectSubset<T, sppd_detailCreateArgs<ExtArgs>>): Prisma__sppd_detailClient<$Result.GetResult<Prisma.$sppd_detailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sppd_details.
     * @param {sppd_detailCreateManyArgs} args - Arguments to create many Sppd_details.
     * @example
     * // Create many Sppd_details
     * const sppd_detail = await prisma.sppd_detail.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sppd_detailCreateManyArgs>(args?: SelectSubset<T, sppd_detailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sppd_detail.
     * @param {sppd_detailDeleteArgs} args - Arguments to delete one Sppd_detail.
     * @example
     * // Delete one Sppd_detail
     * const Sppd_detail = await prisma.sppd_detail.delete({
     *   where: {
     *     // ... filter to delete one Sppd_detail
     *   }
     * })
     * 
     */
    delete<T extends sppd_detailDeleteArgs>(args: SelectSubset<T, sppd_detailDeleteArgs<ExtArgs>>): Prisma__sppd_detailClient<$Result.GetResult<Prisma.$sppd_detailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sppd_detail.
     * @param {sppd_detailUpdateArgs} args - Arguments to update one Sppd_detail.
     * @example
     * // Update one Sppd_detail
     * const sppd_detail = await prisma.sppd_detail.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sppd_detailUpdateArgs>(args: SelectSubset<T, sppd_detailUpdateArgs<ExtArgs>>): Prisma__sppd_detailClient<$Result.GetResult<Prisma.$sppd_detailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sppd_details.
     * @param {sppd_detailDeleteManyArgs} args - Arguments to filter Sppd_details to delete.
     * @example
     * // Delete a few Sppd_details
     * const { count } = await prisma.sppd_detail.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sppd_detailDeleteManyArgs>(args?: SelectSubset<T, sppd_detailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sppd_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sppd_detailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sppd_details
     * const sppd_detail = await prisma.sppd_detail.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sppd_detailUpdateManyArgs>(args: SelectSubset<T, sppd_detailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sppd_detail.
     * @param {sppd_detailUpsertArgs} args - Arguments to update or create a Sppd_detail.
     * @example
     * // Update or create a Sppd_detail
     * const sppd_detail = await prisma.sppd_detail.upsert({
     *   create: {
     *     // ... data to create a Sppd_detail
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sppd_detail we want to update
     *   }
     * })
     */
    upsert<T extends sppd_detailUpsertArgs>(args: SelectSubset<T, sppd_detailUpsertArgs<ExtArgs>>): Prisma__sppd_detailClient<$Result.GetResult<Prisma.$sppd_detailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sppd_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sppd_detailCountArgs} args - Arguments to filter Sppd_details to count.
     * @example
     * // Count the number of Sppd_details
     * const count = await prisma.sppd_detail.count({
     *   where: {
     *     // ... the filter for the Sppd_details we want to count
     *   }
     * })
    **/
    count<T extends sppd_detailCountArgs>(
      args?: Subset<T, sppd_detailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sppd_detailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sppd_detail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sppd_detailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sppd_detailAggregateArgs>(args: Subset<T, Sppd_detailAggregateArgs>): Prisma.PrismaPromise<GetSppd_detailAggregateType<T>>

    /**
     * Group by Sppd_detail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sppd_detailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sppd_detailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sppd_detailGroupByArgs['orderBy'] }
        : { orderBy?: sppd_detailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sppd_detailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSppd_detailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sppd_detail model
   */
  readonly fields: sppd_detailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sppd_detail.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sppd_detailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee<T extends sppd_detail$employeeArgs<ExtArgs> = {}>(args?: Subset<T, sppd_detail$employeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sppd<T extends sppd_detail$sppdArgs<ExtArgs> = {}>(args?: Subset<T, sppd_detail$sppdArgs<ExtArgs>>): Prisma__sppdClient<$Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sppd_detail model
   */
  interface sppd_detailFieldRefs {
    readonly sppd_detail_id: FieldRef<"sppd_detail", 'String'>
    readonly step: FieldRef<"sppd_detail", 'Int'>
    readonly sppd_id: FieldRef<"sppd_detail", 'String'>
    readonly payroll: FieldRef<"sppd_detail", 'String'>
    readonly description: FieldRef<"sppd_detail", 'String'>
  }
    

  // Custom InputTypes
  /**
   * sppd_detail findUnique
   */
  export type sppd_detailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd_detail
     */
    select?: sppd_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd_detail
     */
    omit?: sppd_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppd_detailInclude<ExtArgs> | null
    /**
     * Filter, which sppd_detail to fetch.
     */
    where: sppd_detailWhereUniqueInput
  }

  /**
   * sppd_detail findUniqueOrThrow
   */
  export type sppd_detailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd_detail
     */
    select?: sppd_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd_detail
     */
    omit?: sppd_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppd_detailInclude<ExtArgs> | null
    /**
     * Filter, which sppd_detail to fetch.
     */
    where: sppd_detailWhereUniqueInput
  }

  /**
   * sppd_detail findFirst
   */
  export type sppd_detailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd_detail
     */
    select?: sppd_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd_detail
     */
    omit?: sppd_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppd_detailInclude<ExtArgs> | null
    /**
     * Filter, which sppd_detail to fetch.
     */
    where?: sppd_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sppd_details to fetch.
     */
    orderBy?: sppd_detailOrderByWithRelationInput | sppd_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sppd_details.
     */
    cursor?: sppd_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sppd_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sppd_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sppd_details.
     */
    distinct?: Sppd_detailScalarFieldEnum | Sppd_detailScalarFieldEnum[]
  }

  /**
   * sppd_detail findFirstOrThrow
   */
  export type sppd_detailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd_detail
     */
    select?: sppd_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd_detail
     */
    omit?: sppd_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppd_detailInclude<ExtArgs> | null
    /**
     * Filter, which sppd_detail to fetch.
     */
    where?: sppd_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sppd_details to fetch.
     */
    orderBy?: sppd_detailOrderByWithRelationInput | sppd_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sppd_details.
     */
    cursor?: sppd_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sppd_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sppd_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sppd_details.
     */
    distinct?: Sppd_detailScalarFieldEnum | Sppd_detailScalarFieldEnum[]
  }

  /**
   * sppd_detail findMany
   */
  export type sppd_detailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd_detail
     */
    select?: sppd_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd_detail
     */
    omit?: sppd_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppd_detailInclude<ExtArgs> | null
    /**
     * Filter, which sppd_details to fetch.
     */
    where?: sppd_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sppd_details to fetch.
     */
    orderBy?: sppd_detailOrderByWithRelationInput | sppd_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sppd_details.
     */
    cursor?: sppd_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sppd_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sppd_details.
     */
    skip?: number
    distinct?: Sppd_detailScalarFieldEnum | Sppd_detailScalarFieldEnum[]
  }

  /**
   * sppd_detail create
   */
  export type sppd_detailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd_detail
     */
    select?: sppd_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd_detail
     */
    omit?: sppd_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppd_detailInclude<ExtArgs> | null
    /**
     * The data needed to create a sppd_detail.
     */
    data: XOR<sppd_detailCreateInput, sppd_detailUncheckedCreateInput>
  }

  /**
   * sppd_detail createMany
   */
  export type sppd_detailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sppd_details.
     */
    data: sppd_detailCreateManyInput | sppd_detailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sppd_detail update
   */
  export type sppd_detailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd_detail
     */
    select?: sppd_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd_detail
     */
    omit?: sppd_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppd_detailInclude<ExtArgs> | null
    /**
     * The data needed to update a sppd_detail.
     */
    data: XOR<sppd_detailUpdateInput, sppd_detailUncheckedUpdateInput>
    /**
     * Choose, which sppd_detail to update.
     */
    where: sppd_detailWhereUniqueInput
  }

  /**
   * sppd_detail updateMany
   */
  export type sppd_detailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sppd_details.
     */
    data: XOR<sppd_detailUpdateManyMutationInput, sppd_detailUncheckedUpdateManyInput>
    /**
     * Filter which sppd_details to update
     */
    where?: sppd_detailWhereInput
    /**
     * Limit how many sppd_details to update.
     */
    limit?: number
  }

  /**
   * sppd_detail upsert
   */
  export type sppd_detailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd_detail
     */
    select?: sppd_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd_detail
     */
    omit?: sppd_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppd_detailInclude<ExtArgs> | null
    /**
     * The filter to search for the sppd_detail to update in case it exists.
     */
    where: sppd_detailWhereUniqueInput
    /**
     * In case the sppd_detail found by the `where` argument doesn't exist, create a new sppd_detail with this data.
     */
    create: XOR<sppd_detailCreateInput, sppd_detailUncheckedCreateInput>
    /**
     * In case the sppd_detail was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sppd_detailUpdateInput, sppd_detailUncheckedUpdateInput>
  }

  /**
   * sppd_detail delete
   */
  export type sppd_detailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd_detail
     */
    select?: sppd_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd_detail
     */
    omit?: sppd_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppd_detailInclude<ExtArgs> | null
    /**
     * Filter which sppd_detail to delete.
     */
    where: sppd_detailWhereUniqueInput
  }

  /**
   * sppd_detail deleteMany
   */
  export type sppd_detailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sppd_details to delete
     */
    where?: sppd_detailWhereInput
    /**
     * Limit how many sppd_details to delete.
     */
    limit?: number
  }

  /**
   * sppd_detail.employee
   */
  export type sppd_detail$employeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * sppd_detail.sppd
   */
  export type sppd_detail$sppdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd
     */
    select?: sppdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd
     */
    omit?: sppdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppdInclude<ExtArgs> | null
    where?: sppdWhereInput
  }

  /**
   * sppd_detail without action
   */
  export type sppd_detailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd_detail
     */
    select?: sppd_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd_detail
     */
    omit?: sppd_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppd_detailInclude<ExtArgs> | null
  }


  /**
   * Model skpd
   */

  export type AggregateSkpd = {
    _count: SkpdCountAggregateOutputType | null
    _min: SkpdMinAggregateOutputType | null
    _max: SkpdMaxAggregateOutputType | null
  }

  export type SkpdMinAggregateOutputType = {
    skpd_id: string | null
    sppd_id: string | null
    payroll: string | null
    real_start: Date | null
    real_end: Date | null
    status: $Enums.skpd_status | null
    createdBy: string | null
    createdAt: Date | null
  }

  export type SkpdMaxAggregateOutputType = {
    skpd_id: string | null
    sppd_id: string | null
    payroll: string | null
    real_start: Date | null
    real_end: Date | null
    status: $Enums.skpd_status | null
    createdBy: string | null
    createdAt: Date | null
  }

  export type SkpdCountAggregateOutputType = {
    skpd_id: number
    sppd_id: number
    payroll: number
    real_start: number
    real_end: number
    status: number
    createdBy: number
    createdAt: number
    _all: number
  }


  export type SkpdMinAggregateInputType = {
    skpd_id?: true
    sppd_id?: true
    payroll?: true
    real_start?: true
    real_end?: true
    status?: true
    createdBy?: true
    createdAt?: true
  }

  export type SkpdMaxAggregateInputType = {
    skpd_id?: true
    sppd_id?: true
    payroll?: true
    real_start?: true
    real_end?: true
    status?: true
    createdBy?: true
    createdAt?: true
  }

  export type SkpdCountAggregateInputType = {
    skpd_id?: true
    sppd_id?: true
    payroll?: true
    real_start?: true
    real_end?: true
    status?: true
    createdBy?: true
    createdAt?: true
    _all?: true
  }

  export type SkpdAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which skpd to aggregate.
     */
    where?: skpdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of skpds to fetch.
     */
    orderBy?: skpdOrderByWithRelationInput | skpdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: skpdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` skpds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` skpds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned skpds
    **/
    _count?: true | SkpdCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SkpdMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SkpdMaxAggregateInputType
  }

  export type GetSkpdAggregateType<T extends SkpdAggregateArgs> = {
        [P in keyof T & keyof AggregateSkpd]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSkpd[P]>
      : GetScalarType<T[P], AggregateSkpd[P]>
  }




  export type skpdGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: skpdWhereInput
    orderBy?: skpdOrderByWithAggregationInput | skpdOrderByWithAggregationInput[]
    by: SkpdScalarFieldEnum[] | SkpdScalarFieldEnum
    having?: skpdScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SkpdCountAggregateInputType | true
    _min?: SkpdMinAggregateInputType
    _max?: SkpdMaxAggregateInputType
  }

  export type SkpdGroupByOutputType = {
    skpd_id: string
    sppd_id: string | null
    payroll: string | null
    real_start: Date
    real_end: Date
    status: $Enums.skpd_status
    createdBy: string | null
    createdAt: Date
    _count: SkpdCountAggregateOutputType | null
    _min: SkpdMinAggregateOutputType | null
    _max: SkpdMaxAggregateOutputType | null
  }

  type GetSkpdGroupByPayload<T extends skpdGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SkpdGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SkpdGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SkpdGroupByOutputType[P]>
            : GetScalarType<T[P], SkpdGroupByOutputType[P]>
        }
      >
    >


  export type skpdSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    skpd_id?: boolean
    sppd_id?: boolean
    payroll?: boolean
    real_start?: boolean
    real_end?: boolean
    status?: boolean
    createdBy?: boolean
    createdAt?: boolean
    employee_skpd_createdByToemployee?: boolean | skpd$employee_skpd_createdByToemployeeArgs<ExtArgs>
    employee_skpd_payrollToemployee?: boolean | skpd$employee_skpd_payrollToemployeeArgs<ExtArgs>
    sppd?: boolean | skpd$sppdArgs<ExtArgs>
  }, ExtArgs["result"]["skpd"]>



  export type skpdSelectScalar = {
    skpd_id?: boolean
    sppd_id?: boolean
    payroll?: boolean
    real_start?: boolean
    real_end?: boolean
    status?: boolean
    createdBy?: boolean
    createdAt?: boolean
  }

  export type skpdOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"skpd_id" | "sppd_id" | "payroll" | "real_start" | "real_end" | "status" | "createdBy" | "createdAt", ExtArgs["result"]["skpd"]>
  export type skpdInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee_skpd_createdByToemployee?: boolean | skpd$employee_skpd_createdByToemployeeArgs<ExtArgs>
    employee_skpd_payrollToemployee?: boolean | skpd$employee_skpd_payrollToemployeeArgs<ExtArgs>
    sppd?: boolean | skpd$sppdArgs<ExtArgs>
  }

  export type $skpdPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "skpd"
    objects: {
      employee_skpd_createdByToemployee: Prisma.$employeePayload<ExtArgs> | null
      employee_skpd_payrollToemployee: Prisma.$employeePayload<ExtArgs> | null
      sppd: Prisma.$sppdPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      skpd_id: string
      sppd_id: string | null
      payroll: string | null
      real_start: Date
      real_end: Date
      status: $Enums.skpd_status
      createdBy: string | null
      createdAt: Date
    }, ExtArgs["result"]["skpd"]>
    composites: {}
  }

  type skpdGetPayload<S extends boolean | null | undefined | skpdDefaultArgs> = $Result.GetResult<Prisma.$skpdPayload, S>

  type skpdCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<skpdFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SkpdCountAggregateInputType | true
    }

  export interface skpdDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['skpd'], meta: { name: 'skpd' } }
    /**
     * Find zero or one Skpd that matches the filter.
     * @param {skpdFindUniqueArgs} args - Arguments to find a Skpd
     * @example
     * // Get one Skpd
     * const skpd = await prisma.skpd.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends skpdFindUniqueArgs>(args: SelectSubset<T, skpdFindUniqueArgs<ExtArgs>>): Prisma__skpdClient<$Result.GetResult<Prisma.$skpdPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Skpd that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {skpdFindUniqueOrThrowArgs} args - Arguments to find a Skpd
     * @example
     * // Get one Skpd
     * const skpd = await prisma.skpd.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends skpdFindUniqueOrThrowArgs>(args: SelectSubset<T, skpdFindUniqueOrThrowArgs<ExtArgs>>): Prisma__skpdClient<$Result.GetResult<Prisma.$skpdPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Skpd that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {skpdFindFirstArgs} args - Arguments to find a Skpd
     * @example
     * // Get one Skpd
     * const skpd = await prisma.skpd.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends skpdFindFirstArgs>(args?: SelectSubset<T, skpdFindFirstArgs<ExtArgs>>): Prisma__skpdClient<$Result.GetResult<Prisma.$skpdPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Skpd that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {skpdFindFirstOrThrowArgs} args - Arguments to find a Skpd
     * @example
     * // Get one Skpd
     * const skpd = await prisma.skpd.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends skpdFindFirstOrThrowArgs>(args?: SelectSubset<T, skpdFindFirstOrThrowArgs<ExtArgs>>): Prisma__skpdClient<$Result.GetResult<Prisma.$skpdPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Skpds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {skpdFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Skpds
     * const skpds = await prisma.skpd.findMany()
     * 
     * // Get first 10 Skpds
     * const skpds = await prisma.skpd.findMany({ take: 10 })
     * 
     * // Only select the `skpd_id`
     * const skpdWithSkpd_idOnly = await prisma.skpd.findMany({ select: { skpd_id: true } })
     * 
     */
    findMany<T extends skpdFindManyArgs>(args?: SelectSubset<T, skpdFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$skpdPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Skpd.
     * @param {skpdCreateArgs} args - Arguments to create a Skpd.
     * @example
     * // Create one Skpd
     * const Skpd = await prisma.skpd.create({
     *   data: {
     *     // ... data to create a Skpd
     *   }
     * })
     * 
     */
    create<T extends skpdCreateArgs>(args: SelectSubset<T, skpdCreateArgs<ExtArgs>>): Prisma__skpdClient<$Result.GetResult<Prisma.$skpdPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Skpds.
     * @param {skpdCreateManyArgs} args - Arguments to create many Skpds.
     * @example
     * // Create many Skpds
     * const skpd = await prisma.skpd.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends skpdCreateManyArgs>(args?: SelectSubset<T, skpdCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Skpd.
     * @param {skpdDeleteArgs} args - Arguments to delete one Skpd.
     * @example
     * // Delete one Skpd
     * const Skpd = await prisma.skpd.delete({
     *   where: {
     *     // ... filter to delete one Skpd
     *   }
     * })
     * 
     */
    delete<T extends skpdDeleteArgs>(args: SelectSubset<T, skpdDeleteArgs<ExtArgs>>): Prisma__skpdClient<$Result.GetResult<Prisma.$skpdPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Skpd.
     * @param {skpdUpdateArgs} args - Arguments to update one Skpd.
     * @example
     * // Update one Skpd
     * const skpd = await prisma.skpd.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends skpdUpdateArgs>(args: SelectSubset<T, skpdUpdateArgs<ExtArgs>>): Prisma__skpdClient<$Result.GetResult<Prisma.$skpdPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Skpds.
     * @param {skpdDeleteManyArgs} args - Arguments to filter Skpds to delete.
     * @example
     * // Delete a few Skpds
     * const { count } = await prisma.skpd.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends skpdDeleteManyArgs>(args?: SelectSubset<T, skpdDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Skpds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {skpdUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Skpds
     * const skpd = await prisma.skpd.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends skpdUpdateManyArgs>(args: SelectSubset<T, skpdUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Skpd.
     * @param {skpdUpsertArgs} args - Arguments to update or create a Skpd.
     * @example
     * // Update or create a Skpd
     * const skpd = await prisma.skpd.upsert({
     *   create: {
     *     // ... data to create a Skpd
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Skpd we want to update
     *   }
     * })
     */
    upsert<T extends skpdUpsertArgs>(args: SelectSubset<T, skpdUpsertArgs<ExtArgs>>): Prisma__skpdClient<$Result.GetResult<Prisma.$skpdPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Skpds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {skpdCountArgs} args - Arguments to filter Skpds to count.
     * @example
     * // Count the number of Skpds
     * const count = await prisma.skpd.count({
     *   where: {
     *     // ... the filter for the Skpds we want to count
     *   }
     * })
    **/
    count<T extends skpdCountArgs>(
      args?: Subset<T, skpdCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SkpdCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Skpd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkpdAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SkpdAggregateArgs>(args: Subset<T, SkpdAggregateArgs>): Prisma.PrismaPromise<GetSkpdAggregateType<T>>

    /**
     * Group by Skpd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {skpdGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends skpdGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: skpdGroupByArgs['orderBy'] }
        : { orderBy?: skpdGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, skpdGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSkpdGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the skpd model
   */
  readonly fields: skpdFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for skpd.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__skpdClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee_skpd_createdByToemployee<T extends skpd$employee_skpd_createdByToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, skpd$employee_skpd_createdByToemployeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    employee_skpd_payrollToemployee<T extends skpd$employee_skpd_payrollToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, skpd$employee_skpd_payrollToemployeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sppd<T extends skpd$sppdArgs<ExtArgs> = {}>(args?: Subset<T, skpd$sppdArgs<ExtArgs>>): Prisma__sppdClient<$Result.GetResult<Prisma.$sppdPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the skpd model
   */
  interface skpdFieldRefs {
    readonly skpd_id: FieldRef<"skpd", 'String'>
    readonly sppd_id: FieldRef<"skpd", 'String'>
    readonly payroll: FieldRef<"skpd", 'String'>
    readonly real_start: FieldRef<"skpd", 'DateTime'>
    readonly real_end: FieldRef<"skpd", 'DateTime'>
    readonly status: FieldRef<"skpd", 'skpd_status'>
    readonly createdBy: FieldRef<"skpd", 'String'>
    readonly createdAt: FieldRef<"skpd", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * skpd findUnique
   */
  export type skpdFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skpd
     */
    select?: skpdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skpd
     */
    omit?: skpdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skpdInclude<ExtArgs> | null
    /**
     * Filter, which skpd to fetch.
     */
    where: skpdWhereUniqueInput
  }

  /**
   * skpd findUniqueOrThrow
   */
  export type skpdFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skpd
     */
    select?: skpdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skpd
     */
    omit?: skpdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skpdInclude<ExtArgs> | null
    /**
     * Filter, which skpd to fetch.
     */
    where: skpdWhereUniqueInput
  }

  /**
   * skpd findFirst
   */
  export type skpdFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skpd
     */
    select?: skpdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skpd
     */
    omit?: skpdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skpdInclude<ExtArgs> | null
    /**
     * Filter, which skpd to fetch.
     */
    where?: skpdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of skpds to fetch.
     */
    orderBy?: skpdOrderByWithRelationInput | skpdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for skpds.
     */
    cursor?: skpdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` skpds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` skpds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of skpds.
     */
    distinct?: SkpdScalarFieldEnum | SkpdScalarFieldEnum[]
  }

  /**
   * skpd findFirstOrThrow
   */
  export type skpdFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skpd
     */
    select?: skpdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skpd
     */
    omit?: skpdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skpdInclude<ExtArgs> | null
    /**
     * Filter, which skpd to fetch.
     */
    where?: skpdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of skpds to fetch.
     */
    orderBy?: skpdOrderByWithRelationInput | skpdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for skpds.
     */
    cursor?: skpdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` skpds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` skpds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of skpds.
     */
    distinct?: SkpdScalarFieldEnum | SkpdScalarFieldEnum[]
  }

  /**
   * skpd findMany
   */
  export type skpdFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skpd
     */
    select?: skpdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skpd
     */
    omit?: skpdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skpdInclude<ExtArgs> | null
    /**
     * Filter, which skpds to fetch.
     */
    where?: skpdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of skpds to fetch.
     */
    orderBy?: skpdOrderByWithRelationInput | skpdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing skpds.
     */
    cursor?: skpdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` skpds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` skpds.
     */
    skip?: number
    distinct?: SkpdScalarFieldEnum | SkpdScalarFieldEnum[]
  }

  /**
   * skpd create
   */
  export type skpdCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skpd
     */
    select?: skpdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skpd
     */
    omit?: skpdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skpdInclude<ExtArgs> | null
    /**
     * The data needed to create a skpd.
     */
    data: XOR<skpdCreateInput, skpdUncheckedCreateInput>
  }

  /**
   * skpd createMany
   */
  export type skpdCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many skpds.
     */
    data: skpdCreateManyInput | skpdCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * skpd update
   */
  export type skpdUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skpd
     */
    select?: skpdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skpd
     */
    omit?: skpdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skpdInclude<ExtArgs> | null
    /**
     * The data needed to update a skpd.
     */
    data: XOR<skpdUpdateInput, skpdUncheckedUpdateInput>
    /**
     * Choose, which skpd to update.
     */
    where: skpdWhereUniqueInput
  }

  /**
   * skpd updateMany
   */
  export type skpdUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update skpds.
     */
    data: XOR<skpdUpdateManyMutationInput, skpdUncheckedUpdateManyInput>
    /**
     * Filter which skpds to update
     */
    where?: skpdWhereInput
    /**
     * Limit how many skpds to update.
     */
    limit?: number
  }

  /**
   * skpd upsert
   */
  export type skpdUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skpd
     */
    select?: skpdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skpd
     */
    omit?: skpdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skpdInclude<ExtArgs> | null
    /**
     * The filter to search for the skpd to update in case it exists.
     */
    where: skpdWhereUniqueInput
    /**
     * In case the skpd found by the `where` argument doesn't exist, create a new skpd with this data.
     */
    create: XOR<skpdCreateInput, skpdUncheckedCreateInput>
    /**
     * In case the skpd was found with the provided `where` argument, update it with this data.
     */
    update: XOR<skpdUpdateInput, skpdUncheckedUpdateInput>
  }

  /**
   * skpd delete
   */
  export type skpdDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skpd
     */
    select?: skpdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skpd
     */
    omit?: skpdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skpdInclude<ExtArgs> | null
    /**
     * Filter which skpd to delete.
     */
    where: skpdWhereUniqueInput
  }

  /**
   * skpd deleteMany
   */
  export type skpdDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which skpds to delete
     */
    where?: skpdWhereInput
    /**
     * Limit how many skpds to delete.
     */
    limit?: number
  }

  /**
   * skpd.employee_skpd_createdByToemployee
   */
  export type skpd$employee_skpd_createdByToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * skpd.employee_skpd_payrollToemployee
   */
  export type skpd$employee_skpd_payrollToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * skpd.sppd
   */
  export type skpd$sppdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sppd
     */
    select?: sppdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sppd
     */
    omit?: sppdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sppdInclude<ExtArgs> | null
    where?: sppdWhereInput
  }

  /**
   * skpd without action
   */
  export type skpdDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the skpd
     */
    select?: skpdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the skpd
     */
    omit?: skpdOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: skpdInclude<ExtArgs> | null
  }


  /**
   * Model ijin
   */

  export type AggregateIjin = {
    _count: IjinCountAggregateOutputType | null
    _min: IjinMinAggregateOutputType | null
    _max: IjinMaxAggregateOutputType | null
  }

  export type IjinMinAggregateOutputType = {
    ijin_id: string | null
    payroll: string | null
    type: string | null
    description: string | null
    date: Date | null
    status: $Enums.ijin_status | null
    approval: string | null
    createdAt: Date | null
  }

  export type IjinMaxAggregateOutputType = {
    ijin_id: string | null
    payroll: string | null
    type: string | null
    description: string | null
    date: Date | null
    status: $Enums.ijin_status | null
    approval: string | null
    createdAt: Date | null
  }

  export type IjinCountAggregateOutputType = {
    ijin_id: number
    payroll: number
    type: number
    description: number
    date: number
    status: number
    approval: number
    createdAt: number
    _all: number
  }


  export type IjinMinAggregateInputType = {
    ijin_id?: true
    payroll?: true
    type?: true
    description?: true
    date?: true
    status?: true
    approval?: true
    createdAt?: true
  }

  export type IjinMaxAggregateInputType = {
    ijin_id?: true
    payroll?: true
    type?: true
    description?: true
    date?: true
    status?: true
    approval?: true
    createdAt?: true
  }

  export type IjinCountAggregateInputType = {
    ijin_id?: true
    payroll?: true
    type?: true
    description?: true
    date?: true
    status?: true
    approval?: true
    createdAt?: true
    _all?: true
  }

  export type IjinAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ijin to aggregate.
     */
    where?: ijinWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ijins to fetch.
     */
    orderBy?: ijinOrderByWithRelationInput | ijinOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ijinWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ijins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ijins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ijins
    **/
    _count?: true | IjinCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IjinMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IjinMaxAggregateInputType
  }

  export type GetIjinAggregateType<T extends IjinAggregateArgs> = {
        [P in keyof T & keyof AggregateIjin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIjin[P]>
      : GetScalarType<T[P], AggregateIjin[P]>
  }




  export type ijinGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ijinWhereInput
    orderBy?: ijinOrderByWithAggregationInput | ijinOrderByWithAggregationInput[]
    by: IjinScalarFieldEnum[] | IjinScalarFieldEnum
    having?: ijinScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IjinCountAggregateInputType | true
    _min?: IjinMinAggregateInputType
    _max?: IjinMaxAggregateInputType
  }

  export type IjinGroupByOutputType = {
    ijin_id: string
    payroll: string | null
    type: string
    description: string
    date: Date
    status: $Enums.ijin_status
    approval: string | null
    createdAt: Date
    _count: IjinCountAggregateOutputType | null
    _min: IjinMinAggregateOutputType | null
    _max: IjinMaxAggregateOutputType | null
  }

  type GetIjinGroupByPayload<T extends ijinGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IjinGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IjinGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IjinGroupByOutputType[P]>
            : GetScalarType<T[P], IjinGroupByOutputType[P]>
        }
      >
    >


  export type ijinSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ijin_id?: boolean
    payroll?: boolean
    type?: boolean
    description?: boolean
    date?: boolean
    status?: boolean
    approval?: boolean
    createdAt?: boolean
    employee_ijin_approvalToemployee?: boolean | ijin$employee_ijin_approvalToemployeeArgs<ExtArgs>
    employee?: boolean | ijin$employeeArgs<ExtArgs>
  }, ExtArgs["result"]["ijin"]>



  export type ijinSelectScalar = {
    ijin_id?: boolean
    payroll?: boolean
    type?: boolean
    description?: boolean
    date?: boolean
    status?: boolean
    approval?: boolean
    createdAt?: boolean
  }

  export type ijinOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ijin_id" | "payroll" | "type" | "description" | "date" | "status" | "approval" | "createdAt", ExtArgs["result"]["ijin"]>
  export type ijinInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee_ijin_approvalToemployee?: boolean | ijin$employee_ijin_approvalToemployeeArgs<ExtArgs>
    employee?: boolean | ijin$employeeArgs<ExtArgs>
  }

  export type $ijinPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ijin"
    objects: {
      employee_ijin_approvalToemployee: Prisma.$employeePayload<ExtArgs> | null
      employee: Prisma.$employeePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      ijin_id: string
      payroll: string | null
      type: string
      description: string
      date: Date
      status: $Enums.ijin_status
      approval: string | null
      createdAt: Date
    }, ExtArgs["result"]["ijin"]>
    composites: {}
  }

  type ijinGetPayload<S extends boolean | null | undefined | ijinDefaultArgs> = $Result.GetResult<Prisma.$ijinPayload, S>

  type ijinCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ijinFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: IjinCountAggregateInputType | true
    }

  export interface ijinDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ijin'], meta: { name: 'ijin' } }
    /**
     * Find zero or one Ijin that matches the filter.
     * @param {ijinFindUniqueArgs} args - Arguments to find a Ijin
     * @example
     * // Get one Ijin
     * const ijin = await prisma.ijin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ijinFindUniqueArgs>(args: SelectSubset<T, ijinFindUniqueArgs<ExtArgs>>): Prisma__ijinClient<$Result.GetResult<Prisma.$ijinPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ijin that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ijinFindUniqueOrThrowArgs} args - Arguments to find a Ijin
     * @example
     * // Get one Ijin
     * const ijin = await prisma.ijin.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ijinFindUniqueOrThrowArgs>(args: SelectSubset<T, ijinFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ijinClient<$Result.GetResult<Prisma.$ijinPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ijin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ijinFindFirstArgs} args - Arguments to find a Ijin
     * @example
     * // Get one Ijin
     * const ijin = await prisma.ijin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ijinFindFirstArgs>(args?: SelectSubset<T, ijinFindFirstArgs<ExtArgs>>): Prisma__ijinClient<$Result.GetResult<Prisma.$ijinPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ijin that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ijinFindFirstOrThrowArgs} args - Arguments to find a Ijin
     * @example
     * // Get one Ijin
     * const ijin = await prisma.ijin.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ijinFindFirstOrThrowArgs>(args?: SelectSubset<T, ijinFindFirstOrThrowArgs<ExtArgs>>): Prisma__ijinClient<$Result.GetResult<Prisma.$ijinPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ijins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ijinFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ijins
     * const ijins = await prisma.ijin.findMany()
     * 
     * // Get first 10 Ijins
     * const ijins = await prisma.ijin.findMany({ take: 10 })
     * 
     * // Only select the `ijin_id`
     * const ijinWithIjin_idOnly = await prisma.ijin.findMany({ select: { ijin_id: true } })
     * 
     */
    findMany<T extends ijinFindManyArgs>(args?: SelectSubset<T, ijinFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ijinPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ijin.
     * @param {ijinCreateArgs} args - Arguments to create a Ijin.
     * @example
     * // Create one Ijin
     * const Ijin = await prisma.ijin.create({
     *   data: {
     *     // ... data to create a Ijin
     *   }
     * })
     * 
     */
    create<T extends ijinCreateArgs>(args: SelectSubset<T, ijinCreateArgs<ExtArgs>>): Prisma__ijinClient<$Result.GetResult<Prisma.$ijinPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ijins.
     * @param {ijinCreateManyArgs} args - Arguments to create many Ijins.
     * @example
     * // Create many Ijins
     * const ijin = await prisma.ijin.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ijinCreateManyArgs>(args?: SelectSubset<T, ijinCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Ijin.
     * @param {ijinDeleteArgs} args - Arguments to delete one Ijin.
     * @example
     * // Delete one Ijin
     * const Ijin = await prisma.ijin.delete({
     *   where: {
     *     // ... filter to delete one Ijin
     *   }
     * })
     * 
     */
    delete<T extends ijinDeleteArgs>(args: SelectSubset<T, ijinDeleteArgs<ExtArgs>>): Prisma__ijinClient<$Result.GetResult<Prisma.$ijinPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ijin.
     * @param {ijinUpdateArgs} args - Arguments to update one Ijin.
     * @example
     * // Update one Ijin
     * const ijin = await prisma.ijin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ijinUpdateArgs>(args: SelectSubset<T, ijinUpdateArgs<ExtArgs>>): Prisma__ijinClient<$Result.GetResult<Prisma.$ijinPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ijins.
     * @param {ijinDeleteManyArgs} args - Arguments to filter Ijins to delete.
     * @example
     * // Delete a few Ijins
     * const { count } = await prisma.ijin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ijinDeleteManyArgs>(args?: SelectSubset<T, ijinDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ijins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ijinUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ijins
     * const ijin = await prisma.ijin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ijinUpdateManyArgs>(args: SelectSubset<T, ijinUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Ijin.
     * @param {ijinUpsertArgs} args - Arguments to update or create a Ijin.
     * @example
     * // Update or create a Ijin
     * const ijin = await prisma.ijin.upsert({
     *   create: {
     *     // ... data to create a Ijin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ijin we want to update
     *   }
     * })
     */
    upsert<T extends ijinUpsertArgs>(args: SelectSubset<T, ijinUpsertArgs<ExtArgs>>): Prisma__ijinClient<$Result.GetResult<Prisma.$ijinPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ijins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ijinCountArgs} args - Arguments to filter Ijins to count.
     * @example
     * // Count the number of Ijins
     * const count = await prisma.ijin.count({
     *   where: {
     *     // ... the filter for the Ijins we want to count
     *   }
     * })
    **/
    count<T extends ijinCountArgs>(
      args?: Subset<T, ijinCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IjinCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ijin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IjinAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IjinAggregateArgs>(args: Subset<T, IjinAggregateArgs>): Prisma.PrismaPromise<GetIjinAggregateType<T>>

    /**
     * Group by Ijin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ijinGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ijinGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ijinGroupByArgs['orderBy'] }
        : { orderBy?: ijinGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ijinGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIjinGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ijin model
   */
  readonly fields: ijinFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ijin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ijinClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee_ijin_approvalToemployee<T extends ijin$employee_ijin_approvalToemployeeArgs<ExtArgs> = {}>(args?: Subset<T, ijin$employee_ijin_approvalToemployeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    employee<T extends ijin$employeeArgs<ExtArgs> = {}>(args?: Subset<T, ijin$employeeArgs<ExtArgs>>): Prisma__employeeClient<$Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ijin model
   */
  interface ijinFieldRefs {
    readonly ijin_id: FieldRef<"ijin", 'String'>
    readonly payroll: FieldRef<"ijin", 'String'>
    readonly type: FieldRef<"ijin", 'String'>
    readonly description: FieldRef<"ijin", 'String'>
    readonly date: FieldRef<"ijin", 'DateTime'>
    readonly status: FieldRef<"ijin", 'ijin_status'>
    readonly approval: FieldRef<"ijin", 'String'>
    readonly createdAt: FieldRef<"ijin", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ijin findUnique
   */
  export type ijinFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ijin
     */
    select?: ijinSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ijin
     */
    omit?: ijinOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ijinInclude<ExtArgs> | null
    /**
     * Filter, which ijin to fetch.
     */
    where: ijinWhereUniqueInput
  }

  /**
   * ijin findUniqueOrThrow
   */
  export type ijinFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ijin
     */
    select?: ijinSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ijin
     */
    omit?: ijinOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ijinInclude<ExtArgs> | null
    /**
     * Filter, which ijin to fetch.
     */
    where: ijinWhereUniqueInput
  }

  /**
   * ijin findFirst
   */
  export type ijinFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ijin
     */
    select?: ijinSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ijin
     */
    omit?: ijinOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ijinInclude<ExtArgs> | null
    /**
     * Filter, which ijin to fetch.
     */
    where?: ijinWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ijins to fetch.
     */
    orderBy?: ijinOrderByWithRelationInput | ijinOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ijins.
     */
    cursor?: ijinWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ijins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ijins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ijins.
     */
    distinct?: IjinScalarFieldEnum | IjinScalarFieldEnum[]
  }

  /**
   * ijin findFirstOrThrow
   */
  export type ijinFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ijin
     */
    select?: ijinSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ijin
     */
    omit?: ijinOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ijinInclude<ExtArgs> | null
    /**
     * Filter, which ijin to fetch.
     */
    where?: ijinWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ijins to fetch.
     */
    orderBy?: ijinOrderByWithRelationInput | ijinOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ijins.
     */
    cursor?: ijinWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ijins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ijins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ijins.
     */
    distinct?: IjinScalarFieldEnum | IjinScalarFieldEnum[]
  }

  /**
   * ijin findMany
   */
  export type ijinFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ijin
     */
    select?: ijinSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ijin
     */
    omit?: ijinOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ijinInclude<ExtArgs> | null
    /**
     * Filter, which ijins to fetch.
     */
    where?: ijinWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ijins to fetch.
     */
    orderBy?: ijinOrderByWithRelationInput | ijinOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ijins.
     */
    cursor?: ijinWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ijins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ijins.
     */
    skip?: number
    distinct?: IjinScalarFieldEnum | IjinScalarFieldEnum[]
  }

  /**
   * ijin create
   */
  export type ijinCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ijin
     */
    select?: ijinSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ijin
     */
    omit?: ijinOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ijinInclude<ExtArgs> | null
    /**
     * The data needed to create a ijin.
     */
    data: XOR<ijinCreateInput, ijinUncheckedCreateInput>
  }

  /**
   * ijin createMany
   */
  export type ijinCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ijins.
     */
    data: ijinCreateManyInput | ijinCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ijin update
   */
  export type ijinUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ijin
     */
    select?: ijinSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ijin
     */
    omit?: ijinOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ijinInclude<ExtArgs> | null
    /**
     * The data needed to update a ijin.
     */
    data: XOR<ijinUpdateInput, ijinUncheckedUpdateInput>
    /**
     * Choose, which ijin to update.
     */
    where: ijinWhereUniqueInput
  }

  /**
   * ijin updateMany
   */
  export type ijinUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ijins.
     */
    data: XOR<ijinUpdateManyMutationInput, ijinUncheckedUpdateManyInput>
    /**
     * Filter which ijins to update
     */
    where?: ijinWhereInput
    /**
     * Limit how many ijins to update.
     */
    limit?: number
  }

  /**
   * ijin upsert
   */
  export type ijinUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ijin
     */
    select?: ijinSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ijin
     */
    omit?: ijinOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ijinInclude<ExtArgs> | null
    /**
     * The filter to search for the ijin to update in case it exists.
     */
    where: ijinWhereUniqueInput
    /**
     * In case the ijin found by the `where` argument doesn't exist, create a new ijin with this data.
     */
    create: XOR<ijinCreateInput, ijinUncheckedCreateInput>
    /**
     * In case the ijin was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ijinUpdateInput, ijinUncheckedUpdateInput>
  }

  /**
   * ijin delete
   */
  export type ijinDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ijin
     */
    select?: ijinSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ijin
     */
    omit?: ijinOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ijinInclude<ExtArgs> | null
    /**
     * Filter which ijin to delete.
     */
    where: ijinWhereUniqueInput
  }

  /**
   * ijin deleteMany
   */
  export type ijinDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ijins to delete
     */
    where?: ijinWhereInput
    /**
     * Limit how many ijins to delete.
     */
    limit?: number
  }

  /**
   * ijin.employee_ijin_approvalToemployee
   */
  export type ijin$employee_ijin_approvalToemployeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * ijin.employee
   */
  export type ijin$employeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee
     */
    select?: employeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee
     */
    omit?: employeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employeeInclude<ExtArgs> | null
    where?: employeeWhereInput
  }

  /**
   * ijin without action
   */
  export type ijinDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ijin
     */
    select?: ijinSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ijin
     */
    omit?: ijinOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ijinInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const EmployeeScalarFieldEnum: {
    payroll: 'payroll',
    user_id_machine: 'user_id_machine',
    profile_id: 'profile_id',
    email: 'email',
    name: 'name',
    password: 'password',
    position: 'position',
    department: 'department',
    location: 'location',
    phone: 'phone',
    workhour: 'workhour',
    approver: 'approver',
    substitute: 'substitute',
    join_date: 'join_date',
    signature: 'signature',
    status: 'status'
  };

  export type EmployeeScalarFieldEnum = (typeof EmployeeScalarFieldEnum)[keyof typeof EmployeeScalarFieldEnum]


  export const ProfileScalarFieldEnum: {
    profile_id: 'profile_id',
    name: 'name',
    description: 'description',
    level: 'level',
    user_hrd: 'user_hrd',
    access_sppd: 'access_sppd',
    access_skpd: 'access_skpd',
    access_attendance: 'access_attendance',
    access_spl: 'access_spl',
    access_srl: 'access_srl',
    access_cuti: 'access_cuti',
    access_ijin: 'access_ijin',
    access_calendar: 'access_calendar',
    access_user: 'access_user',
    access_profile: 'access_profile',
    access_dept: 'access_dept',
    access_setting: 'access_setting'
  };

  export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum]


  export const Check_ioScalarFieldEnum: {
    check_io_id: 'check_io_id',
    user_id_machine: 'user_id_machine',
    check_in: 'check_in',
    check_out: 'check_out',
    type: 'type',
    createdAt: 'createdAt'
  };

  export type Check_ioScalarFieldEnum = (typeof Check_ioScalarFieldEnum)[keyof typeof Check_ioScalarFieldEnum]


  export const AttendanceScalarFieldEnum: {
    attendance_id: 'attendance_id',
    user_id_machine: 'user_id_machine',
    check_in: 'check_in',
    check_out: 'check_out',
    check_in2: 'check_in2',
    check_out2: 'check_out2',
    type: 'type',
    ijin_info: 'ijin_info',
    description: 'description',
    attachment: 'attachment',
    createdBy: 'createdBy',
    createdAt: 'createdAt'
  };

  export type AttendanceScalarFieldEnum = (typeof AttendanceScalarFieldEnum)[keyof typeof AttendanceScalarFieldEnum]


  export const Temp_check_ioScalarFieldEnum: {
    check_io_id: 'check_io_id',
    user_id_machine: 'user_id_machine',
    datetime: 'datetime',
    type: 'type'
  };

  export type Temp_check_ioScalarFieldEnum = (typeof Temp_check_ioScalarFieldEnum)[keyof typeof Temp_check_ioScalarFieldEnum]


  export const CalendarScalarFieldEnum: {
    calendar_id: 'calendar_id',
    description: 'description',
    type: 'type',
    date: 'date'
  };

  export type CalendarScalarFieldEnum = (typeof CalendarScalarFieldEnum)[keyof typeof CalendarScalarFieldEnum]


  export const SettingScalarFieldEnum: {
    setting_id: 'setting_id',
    start_periode: 'start_periode',
    end_periode: 'end_periode'
  };

  export type SettingScalarFieldEnum = (typeof SettingScalarFieldEnum)[keyof typeof SettingScalarFieldEnum]


  export const SplScalarFieldEnum: {
    spl_id: 'spl_id',
    purpose: 'purpose',
    est_start: 'est_start',
    est_end: 'est_end',
    status1: 'status1',
    approval1: 'approval1',
    status2: 'status2',
    approval2: 'approval2',
    createdAt: 'createdAt'
  };

  export type SplScalarFieldEnum = (typeof SplScalarFieldEnum)[keyof typeof SplScalarFieldEnum]


  export const Spl_detailScalarFieldEnum: {
    spl_detail_id: 'spl_detail_id',
    step: 'step',
    spl_id: 'spl_id',
    payroll: 'payroll',
    description: 'description'
  };

  export type Spl_detailScalarFieldEnum = (typeof Spl_detailScalarFieldEnum)[keyof typeof Spl_detailScalarFieldEnum]


  export const DeptScalarFieldEnum: {
    dept_id: 'dept_id',
    dept_code: 'dept_code',
    initial: 'initial',
    name: 'name',
    status: 'status'
  };

  export type DeptScalarFieldEnum = (typeof DeptScalarFieldEnum)[keyof typeof DeptScalarFieldEnum]


  export const SrlScalarFieldEnum: {
    srl_id: 'srl_id',
    spl_id: 'spl_id',
    payroll: 'payroll',
    real_start: 'real_start',
    real_end: 'real_end',
    status1: 'status1',
    approval1: 'approval1',
    status2: 'status2',
    approval2: 'approval2',
    createdAt: 'createdAt'
  };

  export type SrlScalarFieldEnum = (typeof SrlScalarFieldEnum)[keyof typeof SrlScalarFieldEnum]


  export const Srl_detailScalarFieldEnum: {
    srl_detail_id: 'srl_detail_id',
    srl_id: 'srl_id',
    description: 'description',
    status: 'status'
  };

  export type Srl_detailScalarFieldEnum = (typeof Srl_detailScalarFieldEnum)[keyof typeof Srl_detailScalarFieldEnum]


  export const CutiScalarFieldEnum: {
    cuti_id: 'cuti_id',
    payroll: 'payroll',
    type: 'type',
    description: 'description',
    date: 'date',
    year: 'year',
    status: 'status',
    approval: 'approval',
    createdAt: 'createdAt'
  };

  export type CutiScalarFieldEnum = (typeof CutiScalarFieldEnum)[keyof typeof CutiScalarFieldEnum]


  export const SppdScalarFieldEnum: {
    sppd_id: 'sppd_id',
    purpose: 'purpose',
    location: 'location',
    dept: 'dept',
    start_date: 'start_date',
    end_date: 'end_date',
    duration: 'duration',
    createdBy: 'createdBy',
    createdAt: 'createdAt'
  };

  export type SppdScalarFieldEnum = (typeof SppdScalarFieldEnum)[keyof typeof SppdScalarFieldEnum]


  export const Sppd_detailScalarFieldEnum: {
    sppd_detail_id: 'sppd_detail_id',
    step: 'step',
    sppd_id: 'sppd_id',
    payroll: 'payroll',
    description: 'description'
  };

  export type Sppd_detailScalarFieldEnum = (typeof Sppd_detailScalarFieldEnum)[keyof typeof Sppd_detailScalarFieldEnum]


  export const SkpdScalarFieldEnum: {
    skpd_id: 'skpd_id',
    sppd_id: 'sppd_id',
    payroll: 'payroll',
    real_start: 'real_start',
    real_end: 'real_end',
    status: 'status',
    createdBy: 'createdBy',
    createdAt: 'createdAt'
  };

  export type SkpdScalarFieldEnum = (typeof SkpdScalarFieldEnum)[keyof typeof SkpdScalarFieldEnum]


  export const IjinScalarFieldEnum: {
    ijin_id: 'ijin_id',
    payroll: 'payroll',
    type: 'type',
    description: 'description',
    date: 'date',
    status: 'status',
    approval: 'approval',
    createdAt: 'createdAt'
  };

  export type IjinScalarFieldEnum = (typeof IjinScalarFieldEnum)[keyof typeof IjinScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const employeeOrderByRelevanceFieldEnum: {
    payroll: 'payroll',
    user_id_machine: 'user_id_machine',
    profile_id: 'profile_id',
    email: 'email',
    name: 'name',
    password: 'password',
    position: 'position',
    department: 'department',
    location: 'location',
    phone: 'phone',
    approver: 'approver',
    substitute: 'substitute',
    signature: 'signature'
  };

  export type employeeOrderByRelevanceFieldEnum = (typeof employeeOrderByRelevanceFieldEnum)[keyof typeof employeeOrderByRelevanceFieldEnum]


  export const profileOrderByRelevanceFieldEnum: {
    profile_id: 'profile_id',
    name: 'name',
    description: 'description',
    access_sppd: 'access_sppd',
    access_skpd: 'access_skpd',
    access_attendance: 'access_attendance',
    access_spl: 'access_spl',
    access_srl: 'access_srl',
    access_cuti: 'access_cuti',
    access_ijin: 'access_ijin',
    access_calendar: 'access_calendar',
    access_user: 'access_user',
    access_profile: 'access_profile',
    access_dept: 'access_dept',
    access_setting: 'access_setting'
  };

  export type profileOrderByRelevanceFieldEnum = (typeof profileOrderByRelevanceFieldEnum)[keyof typeof profileOrderByRelevanceFieldEnum]


  export const check_ioOrderByRelevanceFieldEnum: {
    check_io_id: 'check_io_id',
    user_id_machine: 'user_id_machine',
    type: 'type'
  };

  export type check_ioOrderByRelevanceFieldEnum = (typeof check_ioOrderByRelevanceFieldEnum)[keyof typeof check_ioOrderByRelevanceFieldEnum]


  export const attendanceOrderByRelevanceFieldEnum: {
    attendance_id: 'attendance_id',
    user_id_machine: 'user_id_machine',
    type: 'type',
    ijin_info: 'ijin_info',
    description: 'description',
    attachment: 'attachment',
    createdBy: 'createdBy'
  };

  export type attendanceOrderByRelevanceFieldEnum = (typeof attendanceOrderByRelevanceFieldEnum)[keyof typeof attendanceOrderByRelevanceFieldEnum]


  export const temp_check_ioOrderByRelevanceFieldEnum: {
    check_io_id: 'check_io_id',
    user_id_machine: 'user_id_machine',
    type: 'type'
  };

  export type temp_check_ioOrderByRelevanceFieldEnum = (typeof temp_check_ioOrderByRelevanceFieldEnum)[keyof typeof temp_check_ioOrderByRelevanceFieldEnum]


  export const calendarOrderByRelevanceFieldEnum: {
    calendar_id: 'calendar_id',
    description: 'description'
  };

  export type calendarOrderByRelevanceFieldEnum = (typeof calendarOrderByRelevanceFieldEnum)[keyof typeof calendarOrderByRelevanceFieldEnum]


  export const settingOrderByRelevanceFieldEnum: {
    setting_id: 'setting_id'
  };

  export type settingOrderByRelevanceFieldEnum = (typeof settingOrderByRelevanceFieldEnum)[keyof typeof settingOrderByRelevanceFieldEnum]


  export const splOrderByRelevanceFieldEnum: {
    spl_id: 'spl_id',
    purpose: 'purpose',
    approval1: 'approval1',
    approval2: 'approval2'
  };

  export type splOrderByRelevanceFieldEnum = (typeof splOrderByRelevanceFieldEnum)[keyof typeof splOrderByRelevanceFieldEnum]


  export const spl_detailOrderByRelevanceFieldEnum: {
    spl_detail_id: 'spl_detail_id',
    spl_id: 'spl_id',
    payroll: 'payroll',
    description: 'description'
  };

  export type spl_detailOrderByRelevanceFieldEnum = (typeof spl_detailOrderByRelevanceFieldEnum)[keyof typeof spl_detailOrderByRelevanceFieldEnum]


  export const deptOrderByRelevanceFieldEnum: {
    dept_id: 'dept_id',
    dept_code: 'dept_code',
    initial: 'initial',
    name: 'name'
  };

  export type deptOrderByRelevanceFieldEnum = (typeof deptOrderByRelevanceFieldEnum)[keyof typeof deptOrderByRelevanceFieldEnum]


  export const srlOrderByRelevanceFieldEnum: {
    srl_id: 'srl_id',
    spl_id: 'spl_id',
    payroll: 'payroll',
    approval1: 'approval1',
    approval2: 'approval2'
  };

  export type srlOrderByRelevanceFieldEnum = (typeof srlOrderByRelevanceFieldEnum)[keyof typeof srlOrderByRelevanceFieldEnum]


  export const srl_detailOrderByRelevanceFieldEnum: {
    srl_detail_id: 'srl_detail_id',
    srl_id: 'srl_id',
    description: 'description',
    status: 'status'
  };

  export type srl_detailOrderByRelevanceFieldEnum = (typeof srl_detailOrderByRelevanceFieldEnum)[keyof typeof srl_detailOrderByRelevanceFieldEnum]


  export const cutiOrderByRelevanceFieldEnum: {
    cuti_id: 'cuti_id',
    payroll: 'payroll',
    type: 'type',
    description: 'description',
    approval: 'approval'
  };

  export type cutiOrderByRelevanceFieldEnum = (typeof cutiOrderByRelevanceFieldEnum)[keyof typeof cutiOrderByRelevanceFieldEnum]


  export const sppdOrderByRelevanceFieldEnum: {
    sppd_id: 'sppd_id',
    purpose: 'purpose',
    location: 'location',
    dept: 'dept',
    createdBy: 'createdBy'
  };

  export type sppdOrderByRelevanceFieldEnum = (typeof sppdOrderByRelevanceFieldEnum)[keyof typeof sppdOrderByRelevanceFieldEnum]


  export const sppd_detailOrderByRelevanceFieldEnum: {
    sppd_detail_id: 'sppd_detail_id',
    sppd_id: 'sppd_id',
    payroll: 'payroll',
    description: 'description'
  };

  export type sppd_detailOrderByRelevanceFieldEnum = (typeof sppd_detailOrderByRelevanceFieldEnum)[keyof typeof sppd_detailOrderByRelevanceFieldEnum]


  export const skpdOrderByRelevanceFieldEnum: {
    skpd_id: 'skpd_id',
    sppd_id: 'sppd_id',
    payroll: 'payroll',
    createdBy: 'createdBy'
  };

  export type skpdOrderByRelevanceFieldEnum = (typeof skpdOrderByRelevanceFieldEnum)[keyof typeof skpdOrderByRelevanceFieldEnum]


  export const ijinOrderByRelevanceFieldEnum: {
    ijin_id: 'ijin_id',
    payroll: 'payroll',
    type: 'type',
    description: 'description',
    approval: 'approval'
  };

  export type ijinOrderByRelevanceFieldEnum = (typeof ijinOrderByRelevanceFieldEnum)[keyof typeof ijinOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'employee_status'
   */
  export type Enumemployee_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'employee_status'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'calendar_type'
   */
  export type Enumcalendar_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'calendar_type'>
    


  /**
   * Reference to a field of type 'spl_status1'
   */
  export type Enumspl_status1FieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'spl_status1'>
    


  /**
   * Reference to a field of type 'spl_status2'
   */
  export type Enumspl_status2FieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'spl_status2'>
    


  /**
   * Reference to a field of type 'dept_status'
   */
  export type Enumdept_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'dept_status'>
    


  /**
   * Reference to a field of type 'srl_status1'
   */
  export type Enumsrl_status1FieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'srl_status1'>
    


  /**
   * Reference to a field of type 'srl_status2'
   */
  export type Enumsrl_status2FieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'srl_status2'>
    


  /**
   * Reference to a field of type 'cuti_status'
   */
  export type Enumcuti_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'cuti_status'>
    


  /**
   * Reference to a field of type 'skpd_status'
   */
  export type Enumskpd_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'skpd_status'>
    


  /**
   * Reference to a field of type 'ijin_status'
   */
  export type Enumijin_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ijin_status'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type employeeWhereInput = {
    AND?: employeeWhereInput | employeeWhereInput[]
    OR?: employeeWhereInput[]
    NOT?: employeeWhereInput | employeeWhereInput[]
    payroll?: StringFilter<"employee"> | string
    user_id_machine?: StringFilter<"employee"> | string
    profile_id?: StringNullableFilter<"employee"> | string | null
    email?: StringFilter<"employee"> | string
    name?: StringFilter<"employee"> | string
    password?: StringFilter<"employee"> | string
    position?: StringFilter<"employee"> | string
    department?: StringNullableFilter<"employee"> | string | null
    location?: StringFilter<"employee"> | string
    phone?: StringFilter<"employee"> | string
    workhour?: IntFilter<"employee"> | number
    approver?: StringNullableFilter<"employee"> | string | null
    substitute?: StringNullableFilter<"employee"> | string | null
    join_date?: DateTimeFilter<"employee"> | Date | string
    signature?: StringFilter<"employee"> | string
    status?: Enumemployee_statusFilter<"employee"> | $Enums.employee_status
    attendance_attendance_createdByToemployee?: AttendanceListRelationFilter
    attendance_attendance_user_id_machineToemployee?: AttendanceListRelationFilter
    check_io?: Check_ioListRelationFilter
    cuti_cuti_approvalToemployee?: CutiListRelationFilter
    cuti?: CutiListRelationFilter
    profile?: XOR<ProfileNullableScalarRelationFilter, profileWhereInput> | null
    employee_employee_approverToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    other_employee_employee_approverToemployee?: EmployeeListRelationFilter
    dept?: XOR<DeptNullableScalarRelationFilter, deptWhereInput> | null
    employee_employee_substituteToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    other_employee_employee_substituteToemployee?: EmployeeListRelationFilter
    ijin_ijin_approvalToemployee?: IjinListRelationFilter
    ijin?: IjinListRelationFilter
    skpd_skpd_createdByToemployee?: SkpdListRelationFilter
    skpd_skpd_payrollToemployee?: SkpdListRelationFilter
    spl_spl_approval1Toemployee?: SplListRelationFilter
    spl_spl_approval2Toemployee?: SplListRelationFilter
    spl_detail?: Spl_detailListRelationFilter
    sppd?: SppdListRelationFilter
    sppd_detail?: Sppd_detailListRelationFilter
    srl_srl_approval1Toemployee?: SrlListRelationFilter
    srl_srl_approval2Toemployee?: SrlListRelationFilter
    srl?: SrlListRelationFilter
  }

  export type employeeOrderByWithRelationInput = {
    payroll?: SortOrder
    user_id_machine?: SortOrder
    profile_id?: SortOrderInput | SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    position?: SortOrder
    department?: SortOrderInput | SortOrder
    location?: SortOrder
    phone?: SortOrder
    workhour?: SortOrder
    approver?: SortOrderInput | SortOrder
    substitute?: SortOrderInput | SortOrder
    join_date?: SortOrder
    signature?: SortOrder
    status?: SortOrder
    attendance_attendance_createdByToemployee?: attendanceOrderByRelationAggregateInput
    attendance_attendance_user_id_machineToemployee?: attendanceOrderByRelationAggregateInput
    check_io?: check_ioOrderByRelationAggregateInput
    cuti_cuti_approvalToemployee?: cutiOrderByRelationAggregateInput
    cuti?: cutiOrderByRelationAggregateInput
    profile?: profileOrderByWithRelationInput
    employee_employee_approverToemployee?: employeeOrderByWithRelationInput
    other_employee_employee_approverToemployee?: employeeOrderByRelationAggregateInput
    dept?: deptOrderByWithRelationInput
    employee_employee_substituteToemployee?: employeeOrderByWithRelationInput
    other_employee_employee_substituteToemployee?: employeeOrderByRelationAggregateInput
    ijin_ijin_approvalToemployee?: ijinOrderByRelationAggregateInput
    ijin?: ijinOrderByRelationAggregateInput
    skpd_skpd_createdByToemployee?: skpdOrderByRelationAggregateInput
    skpd_skpd_payrollToemployee?: skpdOrderByRelationAggregateInput
    spl_spl_approval1Toemployee?: splOrderByRelationAggregateInput
    spl_spl_approval2Toemployee?: splOrderByRelationAggregateInput
    spl_detail?: spl_detailOrderByRelationAggregateInput
    sppd?: sppdOrderByRelationAggregateInput
    sppd_detail?: sppd_detailOrderByRelationAggregateInput
    srl_srl_approval1Toemployee?: srlOrderByRelationAggregateInput
    srl_srl_approval2Toemployee?: srlOrderByRelationAggregateInput
    srl?: srlOrderByRelationAggregateInput
    _relevance?: employeeOrderByRelevanceInput
  }

  export type employeeWhereUniqueInput = Prisma.AtLeast<{
    payroll?: string
    user_id_machine?: string
    email?: string
    AND?: employeeWhereInput | employeeWhereInput[]
    OR?: employeeWhereInput[]
    NOT?: employeeWhereInput | employeeWhereInput[]
    profile_id?: StringNullableFilter<"employee"> | string | null
    name?: StringFilter<"employee"> | string
    password?: StringFilter<"employee"> | string
    position?: StringFilter<"employee"> | string
    department?: StringNullableFilter<"employee"> | string | null
    location?: StringFilter<"employee"> | string
    phone?: StringFilter<"employee"> | string
    workhour?: IntFilter<"employee"> | number
    approver?: StringNullableFilter<"employee"> | string | null
    substitute?: StringNullableFilter<"employee"> | string | null
    join_date?: DateTimeFilter<"employee"> | Date | string
    signature?: StringFilter<"employee"> | string
    status?: Enumemployee_statusFilter<"employee"> | $Enums.employee_status
    attendance_attendance_createdByToemployee?: AttendanceListRelationFilter
    attendance_attendance_user_id_machineToemployee?: AttendanceListRelationFilter
    check_io?: Check_ioListRelationFilter
    cuti_cuti_approvalToemployee?: CutiListRelationFilter
    cuti?: CutiListRelationFilter
    profile?: XOR<ProfileNullableScalarRelationFilter, profileWhereInput> | null
    employee_employee_approverToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    other_employee_employee_approverToemployee?: EmployeeListRelationFilter
    dept?: XOR<DeptNullableScalarRelationFilter, deptWhereInput> | null
    employee_employee_substituteToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    other_employee_employee_substituteToemployee?: EmployeeListRelationFilter
    ijin_ijin_approvalToemployee?: IjinListRelationFilter
    ijin?: IjinListRelationFilter
    skpd_skpd_createdByToemployee?: SkpdListRelationFilter
    skpd_skpd_payrollToemployee?: SkpdListRelationFilter
    spl_spl_approval1Toemployee?: SplListRelationFilter
    spl_spl_approval2Toemployee?: SplListRelationFilter
    spl_detail?: Spl_detailListRelationFilter
    sppd?: SppdListRelationFilter
    sppd_detail?: Sppd_detailListRelationFilter
    srl_srl_approval1Toemployee?: SrlListRelationFilter
    srl_srl_approval2Toemployee?: SrlListRelationFilter
    srl?: SrlListRelationFilter
  }, "payroll" | "user_id_machine" | "email">

  export type employeeOrderByWithAggregationInput = {
    payroll?: SortOrder
    user_id_machine?: SortOrder
    profile_id?: SortOrderInput | SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    position?: SortOrder
    department?: SortOrderInput | SortOrder
    location?: SortOrder
    phone?: SortOrder
    workhour?: SortOrder
    approver?: SortOrderInput | SortOrder
    substitute?: SortOrderInput | SortOrder
    join_date?: SortOrder
    signature?: SortOrder
    status?: SortOrder
    _count?: employeeCountOrderByAggregateInput
    _avg?: employeeAvgOrderByAggregateInput
    _max?: employeeMaxOrderByAggregateInput
    _min?: employeeMinOrderByAggregateInput
    _sum?: employeeSumOrderByAggregateInput
  }

  export type employeeScalarWhereWithAggregatesInput = {
    AND?: employeeScalarWhereWithAggregatesInput | employeeScalarWhereWithAggregatesInput[]
    OR?: employeeScalarWhereWithAggregatesInput[]
    NOT?: employeeScalarWhereWithAggregatesInput | employeeScalarWhereWithAggregatesInput[]
    payroll?: StringWithAggregatesFilter<"employee"> | string
    user_id_machine?: StringWithAggregatesFilter<"employee"> | string
    profile_id?: StringNullableWithAggregatesFilter<"employee"> | string | null
    email?: StringWithAggregatesFilter<"employee"> | string
    name?: StringWithAggregatesFilter<"employee"> | string
    password?: StringWithAggregatesFilter<"employee"> | string
    position?: StringWithAggregatesFilter<"employee"> | string
    department?: StringNullableWithAggregatesFilter<"employee"> | string | null
    location?: StringWithAggregatesFilter<"employee"> | string
    phone?: StringWithAggregatesFilter<"employee"> | string
    workhour?: IntWithAggregatesFilter<"employee"> | number
    approver?: StringNullableWithAggregatesFilter<"employee"> | string | null
    substitute?: StringNullableWithAggregatesFilter<"employee"> | string | null
    join_date?: DateTimeWithAggregatesFilter<"employee"> | Date | string
    signature?: StringWithAggregatesFilter<"employee"> | string
    status?: Enumemployee_statusWithAggregatesFilter<"employee"> | $Enums.employee_status
  }

  export type profileWhereInput = {
    AND?: profileWhereInput | profileWhereInput[]
    OR?: profileWhereInput[]
    NOT?: profileWhereInput | profileWhereInput[]
    profile_id?: StringFilter<"profile"> | string
    name?: StringFilter<"profile"> | string
    description?: StringFilter<"profile"> | string
    level?: IntFilter<"profile"> | number
    user_hrd?: BoolFilter<"profile"> | boolean
    access_sppd?: StringFilter<"profile"> | string
    access_skpd?: StringFilter<"profile"> | string
    access_attendance?: StringFilter<"profile"> | string
    access_spl?: StringFilter<"profile"> | string
    access_srl?: StringFilter<"profile"> | string
    access_cuti?: StringFilter<"profile"> | string
    access_ijin?: StringFilter<"profile"> | string
    access_calendar?: StringFilter<"profile"> | string
    access_user?: StringFilter<"profile"> | string
    access_profile?: StringFilter<"profile"> | string
    access_dept?: StringFilter<"profile"> | string
    access_setting?: StringFilter<"profile"> | string
    employee?: EmployeeListRelationFilter
  }

  export type profileOrderByWithRelationInput = {
    profile_id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    level?: SortOrder
    user_hrd?: SortOrder
    access_sppd?: SortOrder
    access_skpd?: SortOrder
    access_attendance?: SortOrder
    access_spl?: SortOrder
    access_srl?: SortOrder
    access_cuti?: SortOrder
    access_ijin?: SortOrder
    access_calendar?: SortOrder
    access_user?: SortOrder
    access_profile?: SortOrder
    access_dept?: SortOrder
    access_setting?: SortOrder
    employee?: employeeOrderByRelationAggregateInput
    _relevance?: profileOrderByRelevanceInput
  }

  export type profileWhereUniqueInput = Prisma.AtLeast<{
    profile_id?: string
    AND?: profileWhereInput | profileWhereInput[]
    OR?: profileWhereInput[]
    NOT?: profileWhereInput | profileWhereInput[]
    name?: StringFilter<"profile"> | string
    description?: StringFilter<"profile"> | string
    level?: IntFilter<"profile"> | number
    user_hrd?: BoolFilter<"profile"> | boolean
    access_sppd?: StringFilter<"profile"> | string
    access_skpd?: StringFilter<"profile"> | string
    access_attendance?: StringFilter<"profile"> | string
    access_spl?: StringFilter<"profile"> | string
    access_srl?: StringFilter<"profile"> | string
    access_cuti?: StringFilter<"profile"> | string
    access_ijin?: StringFilter<"profile"> | string
    access_calendar?: StringFilter<"profile"> | string
    access_user?: StringFilter<"profile"> | string
    access_profile?: StringFilter<"profile"> | string
    access_dept?: StringFilter<"profile"> | string
    access_setting?: StringFilter<"profile"> | string
    employee?: EmployeeListRelationFilter
  }, "profile_id">

  export type profileOrderByWithAggregationInput = {
    profile_id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    level?: SortOrder
    user_hrd?: SortOrder
    access_sppd?: SortOrder
    access_skpd?: SortOrder
    access_attendance?: SortOrder
    access_spl?: SortOrder
    access_srl?: SortOrder
    access_cuti?: SortOrder
    access_ijin?: SortOrder
    access_calendar?: SortOrder
    access_user?: SortOrder
    access_profile?: SortOrder
    access_dept?: SortOrder
    access_setting?: SortOrder
    _count?: profileCountOrderByAggregateInput
    _avg?: profileAvgOrderByAggregateInput
    _max?: profileMaxOrderByAggregateInput
    _min?: profileMinOrderByAggregateInput
    _sum?: profileSumOrderByAggregateInput
  }

  export type profileScalarWhereWithAggregatesInput = {
    AND?: profileScalarWhereWithAggregatesInput | profileScalarWhereWithAggregatesInput[]
    OR?: profileScalarWhereWithAggregatesInput[]
    NOT?: profileScalarWhereWithAggregatesInput | profileScalarWhereWithAggregatesInput[]
    profile_id?: StringWithAggregatesFilter<"profile"> | string
    name?: StringWithAggregatesFilter<"profile"> | string
    description?: StringWithAggregatesFilter<"profile"> | string
    level?: IntWithAggregatesFilter<"profile"> | number
    user_hrd?: BoolWithAggregatesFilter<"profile"> | boolean
    access_sppd?: StringWithAggregatesFilter<"profile"> | string
    access_skpd?: StringWithAggregatesFilter<"profile"> | string
    access_attendance?: StringWithAggregatesFilter<"profile"> | string
    access_spl?: StringWithAggregatesFilter<"profile"> | string
    access_srl?: StringWithAggregatesFilter<"profile"> | string
    access_cuti?: StringWithAggregatesFilter<"profile"> | string
    access_ijin?: StringWithAggregatesFilter<"profile"> | string
    access_calendar?: StringWithAggregatesFilter<"profile"> | string
    access_user?: StringWithAggregatesFilter<"profile"> | string
    access_profile?: StringWithAggregatesFilter<"profile"> | string
    access_dept?: StringWithAggregatesFilter<"profile"> | string
    access_setting?: StringWithAggregatesFilter<"profile"> | string
  }

  export type check_ioWhereInput = {
    AND?: check_ioWhereInput | check_ioWhereInput[]
    OR?: check_ioWhereInput[]
    NOT?: check_ioWhereInput | check_ioWhereInput[]
    check_io_id?: StringFilter<"check_io"> | string
    user_id_machine?: StringNullableFilter<"check_io"> | string | null
    check_in?: DateTimeFilter<"check_io"> | Date | string
    check_out?: DateTimeFilter<"check_io"> | Date | string
    type?: StringFilter<"check_io"> | string
    createdAt?: DateTimeFilter<"check_io"> | Date | string
    employee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
  }

  export type check_ioOrderByWithRelationInput = {
    check_io_id?: SortOrder
    user_id_machine?: SortOrderInput | SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    employee?: employeeOrderByWithRelationInput
    _relevance?: check_ioOrderByRelevanceInput
  }

  export type check_ioWhereUniqueInput = Prisma.AtLeast<{
    check_io_id?: string
    AND?: check_ioWhereInput | check_ioWhereInput[]
    OR?: check_ioWhereInput[]
    NOT?: check_ioWhereInput | check_ioWhereInput[]
    user_id_machine?: StringNullableFilter<"check_io"> | string | null
    check_in?: DateTimeFilter<"check_io"> | Date | string
    check_out?: DateTimeFilter<"check_io"> | Date | string
    type?: StringFilter<"check_io"> | string
    createdAt?: DateTimeFilter<"check_io"> | Date | string
    employee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
  }, "check_io_id">

  export type check_ioOrderByWithAggregationInput = {
    check_io_id?: SortOrder
    user_id_machine?: SortOrderInput | SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    _count?: check_ioCountOrderByAggregateInput
    _max?: check_ioMaxOrderByAggregateInput
    _min?: check_ioMinOrderByAggregateInput
  }

  export type check_ioScalarWhereWithAggregatesInput = {
    AND?: check_ioScalarWhereWithAggregatesInput | check_ioScalarWhereWithAggregatesInput[]
    OR?: check_ioScalarWhereWithAggregatesInput[]
    NOT?: check_ioScalarWhereWithAggregatesInput | check_ioScalarWhereWithAggregatesInput[]
    check_io_id?: StringWithAggregatesFilter<"check_io"> | string
    user_id_machine?: StringNullableWithAggregatesFilter<"check_io"> | string | null
    check_in?: DateTimeWithAggregatesFilter<"check_io"> | Date | string
    check_out?: DateTimeWithAggregatesFilter<"check_io"> | Date | string
    type?: StringWithAggregatesFilter<"check_io"> | string
    createdAt?: DateTimeWithAggregatesFilter<"check_io"> | Date | string
  }

  export type attendanceWhereInput = {
    AND?: attendanceWhereInput | attendanceWhereInput[]
    OR?: attendanceWhereInput[]
    NOT?: attendanceWhereInput | attendanceWhereInput[]
    attendance_id?: StringFilter<"attendance"> | string
    user_id_machine?: StringNullableFilter<"attendance"> | string | null
    check_in?: DateTimeFilter<"attendance"> | Date | string
    check_out?: DateTimeFilter<"attendance"> | Date | string
    check_in2?: DateTimeNullableFilter<"attendance"> | Date | string | null
    check_out2?: DateTimeNullableFilter<"attendance"> | Date | string | null
    type?: StringFilter<"attendance"> | string
    ijin_info?: StringFilter<"attendance"> | string
    description?: StringFilter<"attendance"> | string
    attachment?: StringNullableFilter<"attendance"> | string | null
    createdBy?: StringNullableFilter<"attendance"> | string | null
    createdAt?: DateTimeFilter<"attendance"> | Date | string
    employee_attendance_createdByToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    employee_attendance_user_id_machineToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
  }

  export type attendanceOrderByWithRelationInput = {
    attendance_id?: SortOrder
    user_id_machine?: SortOrderInput | SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    check_in2?: SortOrderInput | SortOrder
    check_out2?: SortOrderInput | SortOrder
    type?: SortOrder
    ijin_info?: SortOrder
    description?: SortOrder
    attachment?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    employee_attendance_createdByToemployee?: employeeOrderByWithRelationInput
    employee_attendance_user_id_machineToemployee?: employeeOrderByWithRelationInput
    _relevance?: attendanceOrderByRelevanceInput
  }

  export type attendanceWhereUniqueInput = Prisma.AtLeast<{
    attendance_id?: string
    AND?: attendanceWhereInput | attendanceWhereInput[]
    OR?: attendanceWhereInput[]
    NOT?: attendanceWhereInput | attendanceWhereInput[]
    user_id_machine?: StringNullableFilter<"attendance"> | string | null
    check_in?: DateTimeFilter<"attendance"> | Date | string
    check_out?: DateTimeFilter<"attendance"> | Date | string
    check_in2?: DateTimeNullableFilter<"attendance"> | Date | string | null
    check_out2?: DateTimeNullableFilter<"attendance"> | Date | string | null
    type?: StringFilter<"attendance"> | string
    ijin_info?: StringFilter<"attendance"> | string
    description?: StringFilter<"attendance"> | string
    attachment?: StringNullableFilter<"attendance"> | string | null
    createdBy?: StringNullableFilter<"attendance"> | string | null
    createdAt?: DateTimeFilter<"attendance"> | Date | string
    employee_attendance_createdByToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    employee_attendance_user_id_machineToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
  }, "attendance_id">

  export type attendanceOrderByWithAggregationInput = {
    attendance_id?: SortOrder
    user_id_machine?: SortOrderInput | SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    check_in2?: SortOrderInput | SortOrder
    check_out2?: SortOrderInput | SortOrder
    type?: SortOrder
    ijin_info?: SortOrder
    description?: SortOrder
    attachment?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: attendanceCountOrderByAggregateInput
    _max?: attendanceMaxOrderByAggregateInput
    _min?: attendanceMinOrderByAggregateInput
  }

  export type attendanceScalarWhereWithAggregatesInput = {
    AND?: attendanceScalarWhereWithAggregatesInput | attendanceScalarWhereWithAggregatesInput[]
    OR?: attendanceScalarWhereWithAggregatesInput[]
    NOT?: attendanceScalarWhereWithAggregatesInput | attendanceScalarWhereWithAggregatesInput[]
    attendance_id?: StringWithAggregatesFilter<"attendance"> | string
    user_id_machine?: StringNullableWithAggregatesFilter<"attendance"> | string | null
    check_in?: DateTimeWithAggregatesFilter<"attendance"> | Date | string
    check_out?: DateTimeWithAggregatesFilter<"attendance"> | Date | string
    check_in2?: DateTimeNullableWithAggregatesFilter<"attendance"> | Date | string | null
    check_out2?: DateTimeNullableWithAggregatesFilter<"attendance"> | Date | string | null
    type?: StringWithAggregatesFilter<"attendance"> | string
    ijin_info?: StringWithAggregatesFilter<"attendance"> | string
    description?: StringWithAggregatesFilter<"attendance"> | string
    attachment?: StringNullableWithAggregatesFilter<"attendance"> | string | null
    createdBy?: StringNullableWithAggregatesFilter<"attendance"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"attendance"> | Date | string
  }

  export type temp_check_ioWhereInput = {
    AND?: temp_check_ioWhereInput | temp_check_ioWhereInput[]
    OR?: temp_check_ioWhereInput[]
    NOT?: temp_check_ioWhereInput | temp_check_ioWhereInput[]
    check_io_id?: StringFilter<"temp_check_io"> | string
    user_id_machine?: StringFilter<"temp_check_io"> | string
    datetime?: DateTimeFilter<"temp_check_io"> | Date | string
    type?: StringFilter<"temp_check_io"> | string
  }

  export type temp_check_ioOrderByWithRelationInput = {
    check_io_id?: SortOrder
    user_id_machine?: SortOrder
    datetime?: SortOrder
    type?: SortOrder
    _relevance?: temp_check_ioOrderByRelevanceInput
  }

  export type temp_check_ioWhereUniqueInput = Prisma.AtLeast<{
    check_io_id?: string
    AND?: temp_check_ioWhereInput | temp_check_ioWhereInput[]
    OR?: temp_check_ioWhereInput[]
    NOT?: temp_check_ioWhereInput | temp_check_ioWhereInput[]
    user_id_machine?: StringFilter<"temp_check_io"> | string
    datetime?: DateTimeFilter<"temp_check_io"> | Date | string
    type?: StringFilter<"temp_check_io"> | string
  }, "check_io_id">

  export type temp_check_ioOrderByWithAggregationInput = {
    check_io_id?: SortOrder
    user_id_machine?: SortOrder
    datetime?: SortOrder
    type?: SortOrder
    _count?: temp_check_ioCountOrderByAggregateInput
    _max?: temp_check_ioMaxOrderByAggregateInput
    _min?: temp_check_ioMinOrderByAggregateInput
  }

  export type temp_check_ioScalarWhereWithAggregatesInput = {
    AND?: temp_check_ioScalarWhereWithAggregatesInput | temp_check_ioScalarWhereWithAggregatesInput[]
    OR?: temp_check_ioScalarWhereWithAggregatesInput[]
    NOT?: temp_check_ioScalarWhereWithAggregatesInput | temp_check_ioScalarWhereWithAggregatesInput[]
    check_io_id?: StringWithAggregatesFilter<"temp_check_io"> | string
    user_id_machine?: StringWithAggregatesFilter<"temp_check_io"> | string
    datetime?: DateTimeWithAggregatesFilter<"temp_check_io"> | Date | string
    type?: StringWithAggregatesFilter<"temp_check_io"> | string
  }

  export type calendarWhereInput = {
    AND?: calendarWhereInput | calendarWhereInput[]
    OR?: calendarWhereInput[]
    NOT?: calendarWhereInput | calendarWhereInput[]
    calendar_id?: StringFilter<"calendar"> | string
    description?: StringNullableFilter<"calendar"> | string | null
    type?: Enumcalendar_typeNullableFilter<"calendar"> | $Enums.calendar_type | null
    date?: DateTimeNullableFilter<"calendar"> | Date | string | null
  }

  export type calendarOrderByWithRelationInput = {
    calendar_id?: SortOrder
    description?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    _relevance?: calendarOrderByRelevanceInput
  }

  export type calendarWhereUniqueInput = Prisma.AtLeast<{
    calendar_id?: string
    date?: Date | string
    AND?: calendarWhereInput | calendarWhereInput[]
    OR?: calendarWhereInput[]
    NOT?: calendarWhereInput | calendarWhereInput[]
    description?: StringNullableFilter<"calendar"> | string | null
    type?: Enumcalendar_typeNullableFilter<"calendar"> | $Enums.calendar_type | null
  }, "calendar_id" | "date">

  export type calendarOrderByWithAggregationInput = {
    calendar_id?: SortOrder
    description?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    _count?: calendarCountOrderByAggregateInput
    _max?: calendarMaxOrderByAggregateInput
    _min?: calendarMinOrderByAggregateInput
  }

  export type calendarScalarWhereWithAggregatesInput = {
    AND?: calendarScalarWhereWithAggregatesInput | calendarScalarWhereWithAggregatesInput[]
    OR?: calendarScalarWhereWithAggregatesInput[]
    NOT?: calendarScalarWhereWithAggregatesInput | calendarScalarWhereWithAggregatesInput[]
    calendar_id?: StringWithAggregatesFilter<"calendar"> | string
    description?: StringNullableWithAggregatesFilter<"calendar"> | string | null
    type?: Enumcalendar_typeNullableWithAggregatesFilter<"calendar"> | $Enums.calendar_type | null
    date?: DateTimeNullableWithAggregatesFilter<"calendar"> | Date | string | null
  }

  export type settingWhereInput = {
    AND?: settingWhereInput | settingWhereInput[]
    OR?: settingWhereInput[]
    NOT?: settingWhereInput | settingWhereInput[]
    setting_id?: StringFilter<"setting"> | string
    start_periode?: IntFilter<"setting"> | number
    end_periode?: IntFilter<"setting"> | number
  }

  export type settingOrderByWithRelationInput = {
    setting_id?: SortOrder
    start_periode?: SortOrder
    end_periode?: SortOrder
    _relevance?: settingOrderByRelevanceInput
  }

  export type settingWhereUniqueInput = Prisma.AtLeast<{
    setting_id?: string
    AND?: settingWhereInput | settingWhereInput[]
    OR?: settingWhereInput[]
    NOT?: settingWhereInput | settingWhereInput[]
    start_periode?: IntFilter<"setting"> | number
    end_periode?: IntFilter<"setting"> | number
  }, "setting_id">

  export type settingOrderByWithAggregationInput = {
    setting_id?: SortOrder
    start_periode?: SortOrder
    end_periode?: SortOrder
    _count?: settingCountOrderByAggregateInput
    _avg?: settingAvgOrderByAggregateInput
    _max?: settingMaxOrderByAggregateInput
    _min?: settingMinOrderByAggregateInput
    _sum?: settingSumOrderByAggregateInput
  }

  export type settingScalarWhereWithAggregatesInput = {
    AND?: settingScalarWhereWithAggregatesInput | settingScalarWhereWithAggregatesInput[]
    OR?: settingScalarWhereWithAggregatesInput[]
    NOT?: settingScalarWhereWithAggregatesInput | settingScalarWhereWithAggregatesInput[]
    setting_id?: StringWithAggregatesFilter<"setting"> | string
    start_periode?: IntWithAggregatesFilter<"setting"> | number
    end_periode?: IntWithAggregatesFilter<"setting"> | number
  }

  export type splWhereInput = {
    AND?: splWhereInput | splWhereInput[]
    OR?: splWhereInput[]
    NOT?: splWhereInput | splWhereInput[]
    spl_id?: StringFilter<"spl"> | string
    purpose?: StringFilter<"spl"> | string
    est_start?: DateTimeFilter<"spl"> | Date | string
    est_end?: DateTimeFilter<"spl"> | Date | string
    status1?: Enumspl_status1Filter<"spl"> | $Enums.spl_status1
    approval1?: StringNullableFilter<"spl"> | string | null
    status2?: Enumspl_status2Filter<"spl"> | $Enums.spl_status2
    approval2?: StringNullableFilter<"spl"> | string | null
    createdAt?: DateTimeFilter<"spl"> | Date | string
    employee_spl_approval1Toemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    employee_spl_approval2Toemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    spl_detail?: Spl_detailListRelationFilter
    srl?: SrlListRelationFilter
  }

  export type splOrderByWithRelationInput = {
    spl_id?: SortOrder
    purpose?: SortOrder
    est_start?: SortOrder
    est_end?: SortOrder
    status1?: SortOrder
    approval1?: SortOrderInput | SortOrder
    status2?: SortOrder
    approval2?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    employee_spl_approval1Toemployee?: employeeOrderByWithRelationInput
    employee_spl_approval2Toemployee?: employeeOrderByWithRelationInput
    spl_detail?: spl_detailOrderByRelationAggregateInput
    srl?: srlOrderByRelationAggregateInput
    _relevance?: splOrderByRelevanceInput
  }

  export type splWhereUniqueInput = Prisma.AtLeast<{
    spl_id?: string
    AND?: splWhereInput | splWhereInput[]
    OR?: splWhereInput[]
    NOT?: splWhereInput | splWhereInput[]
    purpose?: StringFilter<"spl"> | string
    est_start?: DateTimeFilter<"spl"> | Date | string
    est_end?: DateTimeFilter<"spl"> | Date | string
    status1?: Enumspl_status1Filter<"spl"> | $Enums.spl_status1
    approval1?: StringNullableFilter<"spl"> | string | null
    status2?: Enumspl_status2Filter<"spl"> | $Enums.spl_status2
    approval2?: StringNullableFilter<"spl"> | string | null
    createdAt?: DateTimeFilter<"spl"> | Date | string
    employee_spl_approval1Toemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    employee_spl_approval2Toemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    spl_detail?: Spl_detailListRelationFilter
    srl?: SrlListRelationFilter
  }, "spl_id">

  export type splOrderByWithAggregationInput = {
    spl_id?: SortOrder
    purpose?: SortOrder
    est_start?: SortOrder
    est_end?: SortOrder
    status1?: SortOrder
    approval1?: SortOrderInput | SortOrder
    status2?: SortOrder
    approval2?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: splCountOrderByAggregateInput
    _max?: splMaxOrderByAggregateInput
    _min?: splMinOrderByAggregateInput
  }

  export type splScalarWhereWithAggregatesInput = {
    AND?: splScalarWhereWithAggregatesInput | splScalarWhereWithAggregatesInput[]
    OR?: splScalarWhereWithAggregatesInput[]
    NOT?: splScalarWhereWithAggregatesInput | splScalarWhereWithAggregatesInput[]
    spl_id?: StringWithAggregatesFilter<"spl"> | string
    purpose?: StringWithAggregatesFilter<"spl"> | string
    est_start?: DateTimeWithAggregatesFilter<"spl"> | Date | string
    est_end?: DateTimeWithAggregatesFilter<"spl"> | Date | string
    status1?: Enumspl_status1WithAggregatesFilter<"spl"> | $Enums.spl_status1
    approval1?: StringNullableWithAggregatesFilter<"spl"> | string | null
    status2?: Enumspl_status2WithAggregatesFilter<"spl"> | $Enums.spl_status2
    approval2?: StringNullableWithAggregatesFilter<"spl"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"spl"> | Date | string
  }

  export type spl_detailWhereInput = {
    AND?: spl_detailWhereInput | spl_detailWhereInput[]
    OR?: spl_detailWhereInput[]
    NOT?: spl_detailWhereInput | spl_detailWhereInput[]
    spl_detail_id?: StringFilter<"spl_detail"> | string
    step?: IntFilter<"spl_detail"> | number
    spl_id?: StringFilter<"spl_detail"> | string
    payroll?: StringNullableFilter<"spl_detail"> | string | null
    description?: StringFilter<"spl_detail"> | string
    employee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    spl?: XOR<SplScalarRelationFilter, splWhereInput>
  }

  export type spl_detailOrderByWithRelationInput = {
    spl_detail_id?: SortOrder
    step?: SortOrder
    spl_id?: SortOrder
    payroll?: SortOrderInput | SortOrder
    description?: SortOrder
    employee?: employeeOrderByWithRelationInput
    spl?: splOrderByWithRelationInput
    _relevance?: spl_detailOrderByRelevanceInput
  }

  export type spl_detailWhereUniqueInput = Prisma.AtLeast<{
    spl_detail_id?: string
    AND?: spl_detailWhereInput | spl_detailWhereInput[]
    OR?: spl_detailWhereInput[]
    NOT?: spl_detailWhereInput | spl_detailWhereInput[]
    step?: IntFilter<"spl_detail"> | number
    spl_id?: StringFilter<"spl_detail"> | string
    payroll?: StringNullableFilter<"spl_detail"> | string | null
    description?: StringFilter<"spl_detail"> | string
    employee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    spl?: XOR<SplScalarRelationFilter, splWhereInput>
  }, "spl_detail_id">

  export type spl_detailOrderByWithAggregationInput = {
    spl_detail_id?: SortOrder
    step?: SortOrder
    spl_id?: SortOrder
    payroll?: SortOrderInput | SortOrder
    description?: SortOrder
    _count?: spl_detailCountOrderByAggregateInput
    _avg?: spl_detailAvgOrderByAggregateInput
    _max?: spl_detailMaxOrderByAggregateInput
    _min?: spl_detailMinOrderByAggregateInput
    _sum?: spl_detailSumOrderByAggregateInput
  }

  export type spl_detailScalarWhereWithAggregatesInput = {
    AND?: spl_detailScalarWhereWithAggregatesInput | spl_detailScalarWhereWithAggregatesInput[]
    OR?: spl_detailScalarWhereWithAggregatesInput[]
    NOT?: spl_detailScalarWhereWithAggregatesInput | spl_detailScalarWhereWithAggregatesInput[]
    spl_detail_id?: StringWithAggregatesFilter<"spl_detail"> | string
    step?: IntWithAggregatesFilter<"spl_detail"> | number
    spl_id?: StringWithAggregatesFilter<"spl_detail"> | string
    payroll?: StringNullableWithAggregatesFilter<"spl_detail"> | string | null
    description?: StringWithAggregatesFilter<"spl_detail"> | string
  }

  export type deptWhereInput = {
    AND?: deptWhereInput | deptWhereInput[]
    OR?: deptWhereInput[]
    NOT?: deptWhereInput | deptWhereInput[]
    dept_id?: StringFilter<"dept"> | string
    dept_code?: StringFilter<"dept"> | string
    initial?: StringFilter<"dept"> | string
    name?: StringFilter<"dept"> | string
    status?: Enumdept_statusFilter<"dept"> | $Enums.dept_status
    employee?: EmployeeListRelationFilter
    sppd_sppd_deptTodept?: SppdListRelationFilter
  }

  export type deptOrderByWithRelationInput = {
    dept_id?: SortOrder
    dept_code?: SortOrder
    initial?: SortOrder
    name?: SortOrder
    status?: SortOrder
    employee?: employeeOrderByRelationAggregateInput
    sppd_sppd_deptTodept?: sppdOrderByRelationAggregateInput
    _relevance?: deptOrderByRelevanceInput
  }

  export type deptWhereUniqueInput = Prisma.AtLeast<{
    dept_id?: string
    dept_code?: string
    AND?: deptWhereInput | deptWhereInput[]
    OR?: deptWhereInput[]
    NOT?: deptWhereInput | deptWhereInput[]
    initial?: StringFilter<"dept"> | string
    name?: StringFilter<"dept"> | string
    status?: Enumdept_statusFilter<"dept"> | $Enums.dept_status
    employee?: EmployeeListRelationFilter
    sppd_sppd_deptTodept?: SppdListRelationFilter
  }, "dept_id" | "dept_code">

  export type deptOrderByWithAggregationInput = {
    dept_id?: SortOrder
    dept_code?: SortOrder
    initial?: SortOrder
    name?: SortOrder
    status?: SortOrder
    _count?: deptCountOrderByAggregateInput
    _max?: deptMaxOrderByAggregateInput
    _min?: deptMinOrderByAggregateInput
  }

  export type deptScalarWhereWithAggregatesInput = {
    AND?: deptScalarWhereWithAggregatesInput | deptScalarWhereWithAggregatesInput[]
    OR?: deptScalarWhereWithAggregatesInput[]
    NOT?: deptScalarWhereWithAggregatesInput | deptScalarWhereWithAggregatesInput[]
    dept_id?: StringWithAggregatesFilter<"dept"> | string
    dept_code?: StringWithAggregatesFilter<"dept"> | string
    initial?: StringWithAggregatesFilter<"dept"> | string
    name?: StringWithAggregatesFilter<"dept"> | string
    status?: Enumdept_statusWithAggregatesFilter<"dept"> | $Enums.dept_status
  }

  export type srlWhereInput = {
    AND?: srlWhereInput | srlWhereInput[]
    OR?: srlWhereInput[]
    NOT?: srlWhereInput | srlWhereInput[]
    srl_id?: StringFilter<"srl"> | string
    spl_id?: StringNullableFilter<"srl"> | string | null
    payroll?: StringNullableFilter<"srl"> | string | null
    real_start?: DateTimeFilter<"srl"> | Date | string
    real_end?: DateTimeFilter<"srl"> | Date | string
    status1?: Enumsrl_status1Filter<"srl"> | $Enums.srl_status1
    approval1?: StringNullableFilter<"srl"> | string | null
    status2?: Enumsrl_status2Filter<"srl"> | $Enums.srl_status2
    approval2?: StringNullableFilter<"srl"> | string | null
    createdAt?: DateTimeFilter<"srl"> | Date | string
    employee_srl_approval1Toemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    employee_srl_approval2Toemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    employee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    spl?: XOR<SplNullableScalarRelationFilter, splWhereInput> | null
    srl_detail?: Srl_detailListRelationFilter
  }

  export type srlOrderByWithRelationInput = {
    srl_id?: SortOrder
    spl_id?: SortOrderInput | SortOrder
    payroll?: SortOrderInput | SortOrder
    real_start?: SortOrder
    real_end?: SortOrder
    status1?: SortOrder
    approval1?: SortOrderInput | SortOrder
    status2?: SortOrder
    approval2?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    employee_srl_approval1Toemployee?: employeeOrderByWithRelationInput
    employee_srl_approval2Toemployee?: employeeOrderByWithRelationInput
    employee?: employeeOrderByWithRelationInput
    spl?: splOrderByWithRelationInput
    srl_detail?: srl_detailOrderByRelationAggregateInput
    _relevance?: srlOrderByRelevanceInput
  }

  export type srlWhereUniqueInput = Prisma.AtLeast<{
    srl_id?: string
    AND?: srlWhereInput | srlWhereInput[]
    OR?: srlWhereInput[]
    NOT?: srlWhereInput | srlWhereInput[]
    spl_id?: StringNullableFilter<"srl"> | string | null
    payroll?: StringNullableFilter<"srl"> | string | null
    real_start?: DateTimeFilter<"srl"> | Date | string
    real_end?: DateTimeFilter<"srl"> | Date | string
    status1?: Enumsrl_status1Filter<"srl"> | $Enums.srl_status1
    approval1?: StringNullableFilter<"srl"> | string | null
    status2?: Enumsrl_status2Filter<"srl"> | $Enums.srl_status2
    approval2?: StringNullableFilter<"srl"> | string | null
    createdAt?: DateTimeFilter<"srl"> | Date | string
    employee_srl_approval1Toemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    employee_srl_approval2Toemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    employee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    spl?: XOR<SplNullableScalarRelationFilter, splWhereInput> | null
    srl_detail?: Srl_detailListRelationFilter
  }, "srl_id">

  export type srlOrderByWithAggregationInput = {
    srl_id?: SortOrder
    spl_id?: SortOrderInput | SortOrder
    payroll?: SortOrderInput | SortOrder
    real_start?: SortOrder
    real_end?: SortOrder
    status1?: SortOrder
    approval1?: SortOrderInput | SortOrder
    status2?: SortOrder
    approval2?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: srlCountOrderByAggregateInput
    _max?: srlMaxOrderByAggregateInput
    _min?: srlMinOrderByAggregateInput
  }

  export type srlScalarWhereWithAggregatesInput = {
    AND?: srlScalarWhereWithAggregatesInput | srlScalarWhereWithAggregatesInput[]
    OR?: srlScalarWhereWithAggregatesInput[]
    NOT?: srlScalarWhereWithAggregatesInput | srlScalarWhereWithAggregatesInput[]
    srl_id?: StringWithAggregatesFilter<"srl"> | string
    spl_id?: StringNullableWithAggregatesFilter<"srl"> | string | null
    payroll?: StringNullableWithAggregatesFilter<"srl"> | string | null
    real_start?: DateTimeWithAggregatesFilter<"srl"> | Date | string
    real_end?: DateTimeWithAggregatesFilter<"srl"> | Date | string
    status1?: Enumsrl_status1WithAggregatesFilter<"srl"> | $Enums.srl_status1
    approval1?: StringNullableWithAggregatesFilter<"srl"> | string | null
    status2?: Enumsrl_status2WithAggregatesFilter<"srl"> | $Enums.srl_status2
    approval2?: StringNullableWithAggregatesFilter<"srl"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"srl"> | Date | string
  }

  export type srl_detailWhereInput = {
    AND?: srl_detailWhereInput | srl_detailWhereInput[]
    OR?: srl_detailWhereInput[]
    NOT?: srl_detailWhereInput | srl_detailWhereInput[]
    srl_detail_id?: StringFilter<"srl_detail"> | string
    srl_id?: StringNullableFilter<"srl_detail"> | string | null
    description?: StringFilter<"srl_detail"> | string
    status?: StringFilter<"srl_detail"> | string
    srl?: XOR<SrlNullableScalarRelationFilter, srlWhereInput> | null
  }

  export type srl_detailOrderByWithRelationInput = {
    srl_detail_id?: SortOrder
    srl_id?: SortOrderInput | SortOrder
    description?: SortOrder
    status?: SortOrder
    srl?: srlOrderByWithRelationInput
    _relevance?: srl_detailOrderByRelevanceInput
  }

  export type srl_detailWhereUniqueInput = Prisma.AtLeast<{
    srl_detail_id?: string
    AND?: srl_detailWhereInput | srl_detailWhereInput[]
    OR?: srl_detailWhereInput[]
    NOT?: srl_detailWhereInput | srl_detailWhereInput[]
    srl_id?: StringNullableFilter<"srl_detail"> | string | null
    description?: StringFilter<"srl_detail"> | string
    status?: StringFilter<"srl_detail"> | string
    srl?: XOR<SrlNullableScalarRelationFilter, srlWhereInput> | null
  }, "srl_detail_id">

  export type srl_detailOrderByWithAggregationInput = {
    srl_detail_id?: SortOrder
    srl_id?: SortOrderInput | SortOrder
    description?: SortOrder
    status?: SortOrder
    _count?: srl_detailCountOrderByAggregateInput
    _max?: srl_detailMaxOrderByAggregateInput
    _min?: srl_detailMinOrderByAggregateInput
  }

  export type srl_detailScalarWhereWithAggregatesInput = {
    AND?: srl_detailScalarWhereWithAggregatesInput | srl_detailScalarWhereWithAggregatesInput[]
    OR?: srl_detailScalarWhereWithAggregatesInput[]
    NOT?: srl_detailScalarWhereWithAggregatesInput | srl_detailScalarWhereWithAggregatesInput[]
    srl_detail_id?: StringWithAggregatesFilter<"srl_detail"> | string
    srl_id?: StringNullableWithAggregatesFilter<"srl_detail"> | string | null
    description?: StringWithAggregatesFilter<"srl_detail"> | string
    status?: StringWithAggregatesFilter<"srl_detail"> | string
  }

  export type cutiWhereInput = {
    AND?: cutiWhereInput | cutiWhereInput[]
    OR?: cutiWhereInput[]
    NOT?: cutiWhereInput | cutiWhereInput[]
    cuti_id?: StringFilter<"cuti"> | string
    payroll?: StringNullableFilter<"cuti"> | string | null
    type?: StringFilter<"cuti"> | string
    description?: StringFilter<"cuti"> | string
    date?: DateTimeFilter<"cuti"> | Date | string
    year?: IntFilter<"cuti"> | number
    status?: Enumcuti_statusFilter<"cuti"> | $Enums.cuti_status
    approval?: StringNullableFilter<"cuti"> | string | null
    createdAt?: DateTimeFilter<"cuti"> | Date | string
    employee_cuti_approvalToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    employee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
  }

  export type cutiOrderByWithRelationInput = {
    cuti_id?: SortOrder
    payroll?: SortOrderInput | SortOrder
    type?: SortOrder
    description?: SortOrder
    date?: SortOrder
    year?: SortOrder
    status?: SortOrder
    approval?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    employee_cuti_approvalToemployee?: employeeOrderByWithRelationInput
    employee?: employeeOrderByWithRelationInput
    _relevance?: cutiOrderByRelevanceInput
  }

  export type cutiWhereUniqueInput = Prisma.AtLeast<{
    cuti_id?: string
    AND?: cutiWhereInput | cutiWhereInput[]
    OR?: cutiWhereInput[]
    NOT?: cutiWhereInput | cutiWhereInput[]
    payroll?: StringNullableFilter<"cuti"> | string | null
    type?: StringFilter<"cuti"> | string
    description?: StringFilter<"cuti"> | string
    date?: DateTimeFilter<"cuti"> | Date | string
    year?: IntFilter<"cuti"> | number
    status?: Enumcuti_statusFilter<"cuti"> | $Enums.cuti_status
    approval?: StringNullableFilter<"cuti"> | string | null
    createdAt?: DateTimeFilter<"cuti"> | Date | string
    employee_cuti_approvalToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    employee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
  }, "cuti_id">

  export type cutiOrderByWithAggregationInput = {
    cuti_id?: SortOrder
    payroll?: SortOrderInput | SortOrder
    type?: SortOrder
    description?: SortOrder
    date?: SortOrder
    year?: SortOrder
    status?: SortOrder
    approval?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: cutiCountOrderByAggregateInput
    _avg?: cutiAvgOrderByAggregateInput
    _max?: cutiMaxOrderByAggregateInput
    _min?: cutiMinOrderByAggregateInput
    _sum?: cutiSumOrderByAggregateInput
  }

  export type cutiScalarWhereWithAggregatesInput = {
    AND?: cutiScalarWhereWithAggregatesInput | cutiScalarWhereWithAggregatesInput[]
    OR?: cutiScalarWhereWithAggregatesInput[]
    NOT?: cutiScalarWhereWithAggregatesInput | cutiScalarWhereWithAggregatesInput[]
    cuti_id?: StringWithAggregatesFilter<"cuti"> | string
    payroll?: StringNullableWithAggregatesFilter<"cuti"> | string | null
    type?: StringWithAggregatesFilter<"cuti"> | string
    description?: StringWithAggregatesFilter<"cuti"> | string
    date?: DateTimeWithAggregatesFilter<"cuti"> | Date | string
    year?: IntWithAggregatesFilter<"cuti"> | number
    status?: Enumcuti_statusWithAggregatesFilter<"cuti"> | $Enums.cuti_status
    approval?: StringNullableWithAggregatesFilter<"cuti"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"cuti"> | Date | string
  }

  export type sppdWhereInput = {
    AND?: sppdWhereInput | sppdWhereInput[]
    OR?: sppdWhereInput[]
    NOT?: sppdWhereInput | sppdWhereInput[]
    sppd_id?: StringFilter<"sppd"> | string
    purpose?: StringFilter<"sppd"> | string
    location?: StringFilter<"sppd"> | string
    dept?: StringNullableFilter<"sppd"> | string | null
    start_date?: DateTimeFilter<"sppd"> | Date | string
    end_date?: DateTimeFilter<"sppd"> | Date | string
    duration?: IntFilter<"sppd"> | number
    createdBy?: StringNullableFilter<"sppd"> | string | null
    createdAt?: DateTimeFilter<"sppd"> | Date | string
    skpd?: SkpdListRelationFilter
    employee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    dept_sppd_deptTodept?: XOR<DeptNullableScalarRelationFilter, deptWhereInput> | null
    sppd_detail?: Sppd_detailListRelationFilter
  }

  export type sppdOrderByWithRelationInput = {
    sppd_id?: SortOrder
    purpose?: SortOrder
    location?: SortOrder
    dept?: SortOrderInput | SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    duration?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    skpd?: skpdOrderByRelationAggregateInput
    employee?: employeeOrderByWithRelationInput
    dept_sppd_deptTodept?: deptOrderByWithRelationInput
    sppd_detail?: sppd_detailOrderByRelationAggregateInput
    _relevance?: sppdOrderByRelevanceInput
  }

  export type sppdWhereUniqueInput = Prisma.AtLeast<{
    sppd_id?: string
    AND?: sppdWhereInput | sppdWhereInput[]
    OR?: sppdWhereInput[]
    NOT?: sppdWhereInput | sppdWhereInput[]
    purpose?: StringFilter<"sppd"> | string
    location?: StringFilter<"sppd"> | string
    dept?: StringNullableFilter<"sppd"> | string | null
    start_date?: DateTimeFilter<"sppd"> | Date | string
    end_date?: DateTimeFilter<"sppd"> | Date | string
    duration?: IntFilter<"sppd"> | number
    createdBy?: StringNullableFilter<"sppd"> | string | null
    createdAt?: DateTimeFilter<"sppd"> | Date | string
    skpd?: SkpdListRelationFilter
    employee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    dept_sppd_deptTodept?: XOR<DeptNullableScalarRelationFilter, deptWhereInput> | null
    sppd_detail?: Sppd_detailListRelationFilter
  }, "sppd_id">

  export type sppdOrderByWithAggregationInput = {
    sppd_id?: SortOrder
    purpose?: SortOrder
    location?: SortOrder
    dept?: SortOrderInput | SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    duration?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: sppdCountOrderByAggregateInput
    _avg?: sppdAvgOrderByAggregateInput
    _max?: sppdMaxOrderByAggregateInput
    _min?: sppdMinOrderByAggregateInput
    _sum?: sppdSumOrderByAggregateInput
  }

  export type sppdScalarWhereWithAggregatesInput = {
    AND?: sppdScalarWhereWithAggregatesInput | sppdScalarWhereWithAggregatesInput[]
    OR?: sppdScalarWhereWithAggregatesInput[]
    NOT?: sppdScalarWhereWithAggregatesInput | sppdScalarWhereWithAggregatesInput[]
    sppd_id?: StringWithAggregatesFilter<"sppd"> | string
    purpose?: StringWithAggregatesFilter<"sppd"> | string
    location?: StringWithAggregatesFilter<"sppd"> | string
    dept?: StringNullableWithAggregatesFilter<"sppd"> | string | null
    start_date?: DateTimeWithAggregatesFilter<"sppd"> | Date | string
    end_date?: DateTimeWithAggregatesFilter<"sppd"> | Date | string
    duration?: IntWithAggregatesFilter<"sppd"> | number
    createdBy?: StringNullableWithAggregatesFilter<"sppd"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"sppd"> | Date | string
  }

  export type sppd_detailWhereInput = {
    AND?: sppd_detailWhereInput | sppd_detailWhereInput[]
    OR?: sppd_detailWhereInput[]
    NOT?: sppd_detailWhereInput | sppd_detailWhereInput[]
    sppd_detail_id?: StringFilter<"sppd_detail"> | string
    step?: IntFilter<"sppd_detail"> | number
    sppd_id?: StringNullableFilter<"sppd_detail"> | string | null
    payroll?: StringNullableFilter<"sppd_detail"> | string | null
    description?: StringFilter<"sppd_detail"> | string
    employee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    sppd?: XOR<SppdNullableScalarRelationFilter, sppdWhereInput> | null
  }

  export type sppd_detailOrderByWithRelationInput = {
    sppd_detail_id?: SortOrder
    step?: SortOrder
    sppd_id?: SortOrderInput | SortOrder
    payroll?: SortOrderInput | SortOrder
    description?: SortOrder
    employee?: employeeOrderByWithRelationInput
    sppd?: sppdOrderByWithRelationInput
    _relevance?: sppd_detailOrderByRelevanceInput
  }

  export type sppd_detailWhereUniqueInput = Prisma.AtLeast<{
    sppd_detail_id?: string
    AND?: sppd_detailWhereInput | sppd_detailWhereInput[]
    OR?: sppd_detailWhereInput[]
    NOT?: sppd_detailWhereInput | sppd_detailWhereInput[]
    step?: IntFilter<"sppd_detail"> | number
    sppd_id?: StringNullableFilter<"sppd_detail"> | string | null
    payroll?: StringNullableFilter<"sppd_detail"> | string | null
    description?: StringFilter<"sppd_detail"> | string
    employee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    sppd?: XOR<SppdNullableScalarRelationFilter, sppdWhereInput> | null
  }, "sppd_detail_id">

  export type sppd_detailOrderByWithAggregationInput = {
    sppd_detail_id?: SortOrder
    step?: SortOrder
    sppd_id?: SortOrderInput | SortOrder
    payroll?: SortOrderInput | SortOrder
    description?: SortOrder
    _count?: sppd_detailCountOrderByAggregateInput
    _avg?: sppd_detailAvgOrderByAggregateInput
    _max?: sppd_detailMaxOrderByAggregateInput
    _min?: sppd_detailMinOrderByAggregateInput
    _sum?: sppd_detailSumOrderByAggregateInput
  }

  export type sppd_detailScalarWhereWithAggregatesInput = {
    AND?: sppd_detailScalarWhereWithAggregatesInput | sppd_detailScalarWhereWithAggregatesInput[]
    OR?: sppd_detailScalarWhereWithAggregatesInput[]
    NOT?: sppd_detailScalarWhereWithAggregatesInput | sppd_detailScalarWhereWithAggregatesInput[]
    sppd_detail_id?: StringWithAggregatesFilter<"sppd_detail"> | string
    step?: IntWithAggregatesFilter<"sppd_detail"> | number
    sppd_id?: StringNullableWithAggregatesFilter<"sppd_detail"> | string | null
    payroll?: StringNullableWithAggregatesFilter<"sppd_detail"> | string | null
    description?: StringWithAggregatesFilter<"sppd_detail"> | string
  }

  export type skpdWhereInput = {
    AND?: skpdWhereInput | skpdWhereInput[]
    OR?: skpdWhereInput[]
    NOT?: skpdWhereInput | skpdWhereInput[]
    skpd_id?: StringFilter<"skpd"> | string
    sppd_id?: StringNullableFilter<"skpd"> | string | null
    payroll?: StringNullableFilter<"skpd"> | string | null
    real_start?: DateTimeFilter<"skpd"> | Date | string
    real_end?: DateTimeFilter<"skpd"> | Date | string
    status?: Enumskpd_statusFilter<"skpd"> | $Enums.skpd_status
    createdBy?: StringNullableFilter<"skpd"> | string | null
    createdAt?: DateTimeFilter<"skpd"> | Date | string
    employee_skpd_createdByToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    employee_skpd_payrollToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    sppd?: XOR<SppdNullableScalarRelationFilter, sppdWhereInput> | null
  }

  export type skpdOrderByWithRelationInput = {
    skpd_id?: SortOrder
    sppd_id?: SortOrderInput | SortOrder
    payroll?: SortOrderInput | SortOrder
    real_start?: SortOrder
    real_end?: SortOrder
    status?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    employee_skpd_createdByToemployee?: employeeOrderByWithRelationInput
    employee_skpd_payrollToemployee?: employeeOrderByWithRelationInput
    sppd?: sppdOrderByWithRelationInput
    _relevance?: skpdOrderByRelevanceInput
  }

  export type skpdWhereUniqueInput = Prisma.AtLeast<{
    skpd_id?: string
    AND?: skpdWhereInput | skpdWhereInput[]
    OR?: skpdWhereInput[]
    NOT?: skpdWhereInput | skpdWhereInput[]
    sppd_id?: StringNullableFilter<"skpd"> | string | null
    payroll?: StringNullableFilter<"skpd"> | string | null
    real_start?: DateTimeFilter<"skpd"> | Date | string
    real_end?: DateTimeFilter<"skpd"> | Date | string
    status?: Enumskpd_statusFilter<"skpd"> | $Enums.skpd_status
    createdBy?: StringNullableFilter<"skpd"> | string | null
    createdAt?: DateTimeFilter<"skpd"> | Date | string
    employee_skpd_createdByToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    employee_skpd_payrollToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    sppd?: XOR<SppdNullableScalarRelationFilter, sppdWhereInput> | null
  }, "skpd_id">

  export type skpdOrderByWithAggregationInput = {
    skpd_id?: SortOrder
    sppd_id?: SortOrderInput | SortOrder
    payroll?: SortOrderInput | SortOrder
    real_start?: SortOrder
    real_end?: SortOrder
    status?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: skpdCountOrderByAggregateInput
    _max?: skpdMaxOrderByAggregateInput
    _min?: skpdMinOrderByAggregateInput
  }

  export type skpdScalarWhereWithAggregatesInput = {
    AND?: skpdScalarWhereWithAggregatesInput | skpdScalarWhereWithAggregatesInput[]
    OR?: skpdScalarWhereWithAggregatesInput[]
    NOT?: skpdScalarWhereWithAggregatesInput | skpdScalarWhereWithAggregatesInput[]
    skpd_id?: StringWithAggregatesFilter<"skpd"> | string
    sppd_id?: StringNullableWithAggregatesFilter<"skpd"> | string | null
    payroll?: StringNullableWithAggregatesFilter<"skpd"> | string | null
    real_start?: DateTimeWithAggregatesFilter<"skpd"> | Date | string
    real_end?: DateTimeWithAggregatesFilter<"skpd"> | Date | string
    status?: Enumskpd_statusWithAggregatesFilter<"skpd"> | $Enums.skpd_status
    createdBy?: StringNullableWithAggregatesFilter<"skpd"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"skpd"> | Date | string
  }

  export type ijinWhereInput = {
    AND?: ijinWhereInput | ijinWhereInput[]
    OR?: ijinWhereInput[]
    NOT?: ijinWhereInput | ijinWhereInput[]
    ijin_id?: StringFilter<"ijin"> | string
    payroll?: StringNullableFilter<"ijin"> | string | null
    type?: StringFilter<"ijin"> | string
    description?: StringFilter<"ijin"> | string
    date?: DateTimeFilter<"ijin"> | Date | string
    status?: Enumijin_statusFilter<"ijin"> | $Enums.ijin_status
    approval?: StringNullableFilter<"ijin"> | string | null
    createdAt?: DateTimeFilter<"ijin"> | Date | string
    employee_ijin_approvalToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    employee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
  }

  export type ijinOrderByWithRelationInput = {
    ijin_id?: SortOrder
    payroll?: SortOrderInput | SortOrder
    type?: SortOrder
    description?: SortOrder
    date?: SortOrder
    status?: SortOrder
    approval?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    employee_ijin_approvalToemployee?: employeeOrderByWithRelationInput
    employee?: employeeOrderByWithRelationInput
    _relevance?: ijinOrderByRelevanceInput
  }

  export type ijinWhereUniqueInput = Prisma.AtLeast<{
    ijin_id?: string
    AND?: ijinWhereInput | ijinWhereInput[]
    OR?: ijinWhereInput[]
    NOT?: ijinWhereInput | ijinWhereInput[]
    payroll?: StringNullableFilter<"ijin"> | string | null
    type?: StringFilter<"ijin"> | string
    description?: StringFilter<"ijin"> | string
    date?: DateTimeFilter<"ijin"> | Date | string
    status?: Enumijin_statusFilter<"ijin"> | $Enums.ijin_status
    approval?: StringNullableFilter<"ijin"> | string | null
    createdAt?: DateTimeFilter<"ijin"> | Date | string
    employee_ijin_approvalToemployee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
    employee?: XOR<EmployeeNullableScalarRelationFilter, employeeWhereInput> | null
  }, "ijin_id">

  export type ijinOrderByWithAggregationInput = {
    ijin_id?: SortOrder
    payroll?: SortOrderInput | SortOrder
    type?: SortOrder
    description?: SortOrder
    date?: SortOrder
    status?: SortOrder
    approval?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: ijinCountOrderByAggregateInput
    _max?: ijinMaxOrderByAggregateInput
    _min?: ijinMinOrderByAggregateInput
  }

  export type ijinScalarWhereWithAggregatesInput = {
    AND?: ijinScalarWhereWithAggregatesInput | ijinScalarWhereWithAggregatesInput[]
    OR?: ijinScalarWhereWithAggregatesInput[]
    NOT?: ijinScalarWhereWithAggregatesInput | ijinScalarWhereWithAggregatesInput[]
    ijin_id?: StringWithAggregatesFilter<"ijin"> | string
    payroll?: StringNullableWithAggregatesFilter<"ijin"> | string | null
    type?: StringWithAggregatesFilter<"ijin"> | string
    description?: StringWithAggregatesFilter<"ijin"> | string
    date?: DateTimeWithAggregatesFilter<"ijin"> | Date | string
    status?: Enumijin_statusWithAggregatesFilter<"ijin"> | $Enums.ijin_status
    approval?: StringNullableWithAggregatesFilter<"ijin"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ijin"> | Date | string
  }

  export type employeeCreateInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUpdateInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeCreateManyInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
  }

  export type employeeUpdateManyMutationInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
  }

  export type employeeUncheckedUpdateManyInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
  }

  export type profileCreateInput = {
    profile_id: string
    name: string
    description: string
    level: number
    user_hrd: boolean
    access_sppd: string
    access_skpd: string
    access_attendance: string
    access_spl: string
    access_srl: string
    access_cuti: string
    access_ijin: string
    access_calendar: string
    access_user: string
    access_profile: string
    access_dept: string
    access_setting: string
    employee?: employeeCreateNestedManyWithoutProfileInput
  }

  export type profileUncheckedCreateInput = {
    profile_id: string
    name: string
    description: string
    level: number
    user_hrd: boolean
    access_sppd: string
    access_skpd: string
    access_attendance: string
    access_spl: string
    access_srl: string
    access_cuti: string
    access_ijin: string
    access_calendar: string
    access_user: string
    access_profile: string
    access_dept: string
    access_setting: string
    employee?: employeeUncheckedCreateNestedManyWithoutProfileInput
  }

  export type profileUpdateInput = {
    profile_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    user_hrd?: BoolFieldUpdateOperationsInput | boolean
    access_sppd?: StringFieldUpdateOperationsInput | string
    access_skpd?: StringFieldUpdateOperationsInput | string
    access_attendance?: StringFieldUpdateOperationsInput | string
    access_spl?: StringFieldUpdateOperationsInput | string
    access_srl?: StringFieldUpdateOperationsInput | string
    access_cuti?: StringFieldUpdateOperationsInput | string
    access_ijin?: StringFieldUpdateOperationsInput | string
    access_calendar?: StringFieldUpdateOperationsInput | string
    access_user?: StringFieldUpdateOperationsInput | string
    access_profile?: StringFieldUpdateOperationsInput | string
    access_dept?: StringFieldUpdateOperationsInput | string
    access_setting?: StringFieldUpdateOperationsInput | string
    employee?: employeeUpdateManyWithoutProfileNestedInput
  }

  export type profileUncheckedUpdateInput = {
    profile_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    user_hrd?: BoolFieldUpdateOperationsInput | boolean
    access_sppd?: StringFieldUpdateOperationsInput | string
    access_skpd?: StringFieldUpdateOperationsInput | string
    access_attendance?: StringFieldUpdateOperationsInput | string
    access_spl?: StringFieldUpdateOperationsInput | string
    access_srl?: StringFieldUpdateOperationsInput | string
    access_cuti?: StringFieldUpdateOperationsInput | string
    access_ijin?: StringFieldUpdateOperationsInput | string
    access_calendar?: StringFieldUpdateOperationsInput | string
    access_user?: StringFieldUpdateOperationsInput | string
    access_profile?: StringFieldUpdateOperationsInput | string
    access_dept?: StringFieldUpdateOperationsInput | string
    access_setting?: StringFieldUpdateOperationsInput | string
    employee?: employeeUncheckedUpdateManyWithoutProfileNestedInput
  }

  export type profileCreateManyInput = {
    profile_id: string
    name: string
    description: string
    level: number
    user_hrd: boolean
    access_sppd: string
    access_skpd: string
    access_attendance: string
    access_spl: string
    access_srl: string
    access_cuti: string
    access_ijin: string
    access_calendar: string
    access_user: string
    access_profile: string
    access_dept: string
    access_setting: string
  }

  export type profileUpdateManyMutationInput = {
    profile_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    user_hrd?: BoolFieldUpdateOperationsInput | boolean
    access_sppd?: StringFieldUpdateOperationsInput | string
    access_skpd?: StringFieldUpdateOperationsInput | string
    access_attendance?: StringFieldUpdateOperationsInput | string
    access_spl?: StringFieldUpdateOperationsInput | string
    access_srl?: StringFieldUpdateOperationsInput | string
    access_cuti?: StringFieldUpdateOperationsInput | string
    access_ijin?: StringFieldUpdateOperationsInput | string
    access_calendar?: StringFieldUpdateOperationsInput | string
    access_user?: StringFieldUpdateOperationsInput | string
    access_profile?: StringFieldUpdateOperationsInput | string
    access_dept?: StringFieldUpdateOperationsInput | string
    access_setting?: StringFieldUpdateOperationsInput | string
  }

  export type profileUncheckedUpdateManyInput = {
    profile_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    user_hrd?: BoolFieldUpdateOperationsInput | boolean
    access_sppd?: StringFieldUpdateOperationsInput | string
    access_skpd?: StringFieldUpdateOperationsInput | string
    access_attendance?: StringFieldUpdateOperationsInput | string
    access_spl?: StringFieldUpdateOperationsInput | string
    access_srl?: StringFieldUpdateOperationsInput | string
    access_cuti?: StringFieldUpdateOperationsInput | string
    access_ijin?: StringFieldUpdateOperationsInput | string
    access_calendar?: StringFieldUpdateOperationsInput | string
    access_user?: StringFieldUpdateOperationsInput | string
    access_profile?: StringFieldUpdateOperationsInput | string
    access_dept?: StringFieldUpdateOperationsInput | string
    access_setting?: StringFieldUpdateOperationsInput | string
  }

  export type check_ioCreateInput = {
    check_io_id: string
    check_in: Date | string
    check_out: Date | string
    type: string
    createdAt?: Date | string
    employee?: employeeCreateNestedOneWithoutCheck_ioInput
  }

  export type check_ioUncheckedCreateInput = {
    check_io_id: string
    user_id_machine?: string | null
    check_in: Date | string
    check_out: Date | string
    type: string
    createdAt?: Date | string
  }

  export type check_ioUpdateInput = {
    check_io_id?: StringFieldUpdateOperationsInput | string
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: employeeUpdateOneWithoutCheck_ioNestedInput
  }

  export type check_ioUncheckedUpdateInput = {
    check_io_id?: StringFieldUpdateOperationsInput | string
    user_id_machine?: NullableStringFieldUpdateOperationsInput | string | null
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type check_ioCreateManyInput = {
    check_io_id: string
    user_id_machine?: string | null
    check_in: Date | string
    check_out: Date | string
    type: string
    createdAt?: Date | string
  }

  export type check_ioUpdateManyMutationInput = {
    check_io_id?: StringFieldUpdateOperationsInput | string
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type check_ioUncheckedUpdateManyInput = {
    check_io_id?: StringFieldUpdateOperationsInput | string
    user_id_machine?: NullableStringFieldUpdateOperationsInput | string | null
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attendanceCreateInput = {
    attendance_id: string
    check_in: Date | string
    check_out: Date | string
    check_in2?: Date | string | null
    check_out2?: Date | string | null
    type: string
    ijin_info: string
    description: string
    attachment?: string | null
    createdAt?: Date | string
    employee_attendance_createdByToemployee?: employeeCreateNestedOneWithoutAttendance_attendance_createdByToemployeeInput
    employee_attendance_user_id_machineToemployee?: employeeCreateNestedOneWithoutAttendance_attendance_user_id_machineToemployeeInput
  }

  export type attendanceUncheckedCreateInput = {
    attendance_id: string
    user_id_machine?: string | null
    check_in: Date | string
    check_out: Date | string
    check_in2?: Date | string | null
    check_out2?: Date | string | null
    type: string
    ijin_info: string
    description: string
    attachment?: string | null
    createdBy?: string | null
    createdAt?: Date | string
  }

  export type attendanceUpdateInput = {
    attendance_id?: StringFieldUpdateOperationsInput | string
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    check_in2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StringFieldUpdateOperationsInput | string
    ijin_info?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_attendance_createdByToemployee?: employeeUpdateOneWithoutAttendance_attendance_createdByToemployeeNestedInput
    employee_attendance_user_id_machineToemployee?: employeeUpdateOneWithoutAttendance_attendance_user_id_machineToemployeeNestedInput
  }

  export type attendanceUncheckedUpdateInput = {
    attendance_id?: StringFieldUpdateOperationsInput | string
    user_id_machine?: NullableStringFieldUpdateOperationsInput | string | null
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    check_in2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StringFieldUpdateOperationsInput | string
    ijin_info?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attendanceCreateManyInput = {
    attendance_id: string
    user_id_machine?: string | null
    check_in: Date | string
    check_out: Date | string
    check_in2?: Date | string | null
    check_out2?: Date | string | null
    type: string
    ijin_info: string
    description: string
    attachment?: string | null
    createdBy?: string | null
    createdAt?: Date | string
  }

  export type attendanceUpdateManyMutationInput = {
    attendance_id?: StringFieldUpdateOperationsInput | string
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    check_in2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StringFieldUpdateOperationsInput | string
    ijin_info?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attendanceUncheckedUpdateManyInput = {
    attendance_id?: StringFieldUpdateOperationsInput | string
    user_id_machine?: NullableStringFieldUpdateOperationsInput | string | null
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    check_in2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StringFieldUpdateOperationsInput | string
    ijin_info?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type temp_check_ioCreateInput = {
    check_io_id: string
    user_id_machine: string
    datetime: Date | string
    type: string
  }

  export type temp_check_ioUncheckedCreateInput = {
    check_io_id: string
    user_id_machine: string
    datetime: Date | string
    type: string
  }

  export type temp_check_ioUpdateInput = {
    check_io_id?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    datetime?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
  }

  export type temp_check_ioUncheckedUpdateInput = {
    check_io_id?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    datetime?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
  }

  export type temp_check_ioCreateManyInput = {
    check_io_id: string
    user_id_machine: string
    datetime: Date | string
    type: string
  }

  export type temp_check_ioUpdateManyMutationInput = {
    check_io_id?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    datetime?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
  }

  export type temp_check_ioUncheckedUpdateManyInput = {
    check_io_id?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    datetime?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
  }

  export type calendarCreateInput = {
    calendar_id: string
    description?: string | null
    type?: $Enums.calendar_type | null
    date?: Date | string | null
  }

  export type calendarUncheckedCreateInput = {
    calendar_id: string
    description?: string | null
    type?: $Enums.calendar_type | null
    date?: Date | string | null
  }

  export type calendarUpdateInput = {
    calendar_id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumcalendar_typeFieldUpdateOperationsInput | $Enums.calendar_type | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type calendarUncheckedUpdateInput = {
    calendar_id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumcalendar_typeFieldUpdateOperationsInput | $Enums.calendar_type | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type calendarCreateManyInput = {
    calendar_id: string
    description?: string | null
    type?: $Enums.calendar_type | null
    date?: Date | string | null
  }

  export type calendarUpdateManyMutationInput = {
    calendar_id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumcalendar_typeFieldUpdateOperationsInput | $Enums.calendar_type | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type calendarUncheckedUpdateManyInput = {
    calendar_id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumcalendar_typeFieldUpdateOperationsInput | $Enums.calendar_type | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type settingCreateInput = {
    setting_id: string
    start_periode?: number
    end_periode?: number
  }

  export type settingUncheckedCreateInput = {
    setting_id: string
    start_periode?: number
    end_periode?: number
  }

  export type settingUpdateInput = {
    setting_id?: StringFieldUpdateOperationsInput | string
    start_periode?: IntFieldUpdateOperationsInput | number
    end_periode?: IntFieldUpdateOperationsInput | number
  }

  export type settingUncheckedUpdateInput = {
    setting_id?: StringFieldUpdateOperationsInput | string
    start_periode?: IntFieldUpdateOperationsInput | number
    end_periode?: IntFieldUpdateOperationsInput | number
  }

  export type settingCreateManyInput = {
    setting_id: string
    start_periode?: number
    end_periode?: number
  }

  export type settingUpdateManyMutationInput = {
    setting_id?: StringFieldUpdateOperationsInput | string
    start_periode?: IntFieldUpdateOperationsInput | number
    end_periode?: IntFieldUpdateOperationsInput | number
  }

  export type settingUncheckedUpdateManyInput = {
    setting_id?: StringFieldUpdateOperationsInput | string
    start_periode?: IntFieldUpdateOperationsInput | number
    end_periode?: IntFieldUpdateOperationsInput | number
  }

  export type splCreateInput = {
    spl_id: string
    purpose: string
    est_start: Date | string
    est_end: Date | string
    status1?: $Enums.spl_status1
    status2?: $Enums.spl_status2
    createdAt?: Date | string
    employee_spl_approval1Toemployee?: employeeCreateNestedOneWithoutSpl_spl_approval1ToemployeeInput
    employee_spl_approval2Toemployee?: employeeCreateNestedOneWithoutSpl_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutSplInput
    srl?: srlCreateNestedManyWithoutSplInput
  }

  export type splUncheckedCreateInput = {
    spl_id: string
    purpose: string
    est_start: Date | string
    est_end: Date | string
    status1?: $Enums.spl_status1
    approval1?: string | null
    status2?: $Enums.spl_status2
    approval2?: string | null
    createdAt?: Date | string
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutSplInput
    srl?: srlUncheckedCreateNestedManyWithoutSplInput
  }

  export type splUpdateInput = {
    spl_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    est_start?: DateTimeFieldUpdateOperationsInput | Date | string
    est_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumspl_status1FieldUpdateOperationsInput | $Enums.spl_status1
    status2?: Enumspl_status2FieldUpdateOperationsInput | $Enums.spl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_spl_approval1Toemployee?: employeeUpdateOneWithoutSpl_spl_approval1ToemployeeNestedInput
    employee_spl_approval2Toemployee?: employeeUpdateOneWithoutSpl_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutSplNestedInput
    srl?: srlUpdateManyWithoutSplNestedInput
  }

  export type splUncheckedUpdateInput = {
    spl_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    est_start?: DateTimeFieldUpdateOperationsInput | Date | string
    est_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumspl_status1FieldUpdateOperationsInput | $Enums.spl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumspl_status2FieldUpdateOperationsInput | $Enums.spl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    spl_detail?: spl_detailUncheckedUpdateManyWithoutSplNestedInput
    srl?: srlUncheckedUpdateManyWithoutSplNestedInput
  }

  export type splCreateManyInput = {
    spl_id: string
    purpose: string
    est_start: Date | string
    est_end: Date | string
    status1?: $Enums.spl_status1
    approval1?: string | null
    status2?: $Enums.spl_status2
    approval2?: string | null
    createdAt?: Date | string
  }

  export type splUpdateManyMutationInput = {
    spl_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    est_start?: DateTimeFieldUpdateOperationsInput | Date | string
    est_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumspl_status1FieldUpdateOperationsInput | $Enums.spl_status1
    status2?: Enumspl_status2FieldUpdateOperationsInput | $Enums.spl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type splUncheckedUpdateManyInput = {
    spl_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    est_start?: DateTimeFieldUpdateOperationsInput | Date | string
    est_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumspl_status1FieldUpdateOperationsInput | $Enums.spl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumspl_status2FieldUpdateOperationsInput | $Enums.spl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type spl_detailCreateInput = {
    spl_detail_id: string
    step: number
    description: string
    employee?: employeeCreateNestedOneWithoutSpl_detailInput
    spl: splCreateNestedOneWithoutSpl_detailInput
  }

  export type spl_detailUncheckedCreateInput = {
    spl_detail_id: string
    step: number
    spl_id: string
    payroll?: string | null
    description: string
  }

  export type spl_detailUpdateInput = {
    spl_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    employee?: employeeUpdateOneWithoutSpl_detailNestedInput
    spl?: splUpdateOneRequiredWithoutSpl_detailNestedInput
  }

  export type spl_detailUncheckedUpdateInput = {
    spl_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    spl_id?: StringFieldUpdateOperationsInput | string
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
  }

  export type spl_detailCreateManyInput = {
    spl_detail_id: string
    step: number
    spl_id: string
    payroll?: string | null
    description: string
  }

  export type spl_detailUpdateManyMutationInput = {
    spl_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
  }

  export type spl_detailUncheckedUpdateManyInput = {
    spl_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    spl_id?: StringFieldUpdateOperationsInput | string
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
  }

  export type deptCreateInput = {
    dept_id: string
    dept_code: string
    initial: string
    name: string
    status: $Enums.dept_status
    employee?: employeeCreateNestedManyWithoutDeptInput
    sppd_sppd_deptTodept?: sppdCreateNestedManyWithoutDept_sppd_deptTodeptInput
  }

  export type deptUncheckedCreateInput = {
    dept_id: string
    dept_code: string
    initial: string
    name: string
    status: $Enums.dept_status
    employee?: employeeUncheckedCreateNestedManyWithoutDeptInput
    sppd_sppd_deptTodept?: sppdUncheckedCreateNestedManyWithoutDept_sppd_deptTodeptInput
  }

  export type deptUpdateInput = {
    dept_id?: StringFieldUpdateOperationsInput | string
    dept_code?: StringFieldUpdateOperationsInput | string
    initial?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: Enumdept_statusFieldUpdateOperationsInput | $Enums.dept_status
    employee?: employeeUpdateManyWithoutDeptNestedInput
    sppd_sppd_deptTodept?: sppdUpdateManyWithoutDept_sppd_deptTodeptNestedInput
  }

  export type deptUncheckedUpdateInput = {
    dept_id?: StringFieldUpdateOperationsInput | string
    dept_code?: StringFieldUpdateOperationsInput | string
    initial?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: Enumdept_statusFieldUpdateOperationsInput | $Enums.dept_status
    employee?: employeeUncheckedUpdateManyWithoutDeptNestedInput
    sppd_sppd_deptTodept?: sppdUncheckedUpdateManyWithoutDept_sppd_deptTodeptNestedInput
  }

  export type deptCreateManyInput = {
    dept_id: string
    dept_code: string
    initial: string
    name: string
    status: $Enums.dept_status
  }

  export type deptUpdateManyMutationInput = {
    dept_id?: StringFieldUpdateOperationsInput | string
    dept_code?: StringFieldUpdateOperationsInput | string
    initial?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: Enumdept_statusFieldUpdateOperationsInput | $Enums.dept_status
  }

  export type deptUncheckedUpdateManyInput = {
    dept_id?: StringFieldUpdateOperationsInput | string
    dept_code?: StringFieldUpdateOperationsInput | string
    initial?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: Enumdept_statusFieldUpdateOperationsInput | $Enums.dept_status
  }

  export type srlCreateInput = {
    srl_id: string
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    status2?: $Enums.srl_status2
    createdAt: Date | string
    employee_srl_approval1Toemployee?: employeeCreateNestedOneWithoutSrl_srl_approval1ToemployeeInput
    employee_srl_approval2Toemployee?: employeeCreateNestedOneWithoutSrl_srl_approval2ToemployeeInput
    employee?: employeeCreateNestedOneWithoutSrlInput
    spl?: splCreateNestedOneWithoutSrlInput
    srl_detail?: srl_detailCreateNestedManyWithoutSrlInput
  }

  export type srlUncheckedCreateInput = {
    srl_id: string
    spl_id?: string | null
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    approval1?: string | null
    status2?: $Enums.srl_status2
    approval2?: string | null
    createdAt: Date | string
    srl_detail?: srl_detailUncheckedCreateNestedManyWithoutSrlInput
  }

  export type srlUpdateInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_srl_approval1Toemployee?: employeeUpdateOneWithoutSrl_srl_approval1ToemployeeNestedInput
    employee_srl_approval2Toemployee?: employeeUpdateOneWithoutSrl_srl_approval2ToemployeeNestedInput
    employee?: employeeUpdateOneWithoutSrlNestedInput
    spl?: splUpdateOneWithoutSrlNestedInput
    srl_detail?: srl_detailUpdateManyWithoutSrlNestedInput
  }

  export type srlUncheckedUpdateInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    spl_id?: NullableStringFieldUpdateOperationsInput | string | null
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    srl_detail?: srl_detailUncheckedUpdateManyWithoutSrlNestedInput
  }

  export type srlCreateManyInput = {
    srl_id: string
    spl_id?: string | null
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    approval1?: string | null
    status2?: $Enums.srl_status2
    approval2?: string | null
    createdAt: Date | string
  }

  export type srlUpdateManyMutationInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type srlUncheckedUpdateManyInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    spl_id?: NullableStringFieldUpdateOperationsInput | string | null
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type srl_detailCreateInput = {
    srl_detail_id: string
    description: string
    status: string
    srl?: srlCreateNestedOneWithoutSrl_detailInput
  }

  export type srl_detailUncheckedCreateInput = {
    srl_detail_id: string
    srl_id?: string | null
    description: string
    status: string
  }

  export type srl_detailUpdateInput = {
    srl_detail_id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    srl?: srlUpdateOneWithoutSrl_detailNestedInput
  }

  export type srl_detailUncheckedUpdateInput = {
    srl_detail_id?: StringFieldUpdateOperationsInput | string
    srl_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type srl_detailCreateManyInput = {
    srl_detail_id: string
    srl_id?: string | null
    description: string
    status: string
  }

  export type srl_detailUpdateManyMutationInput = {
    srl_detail_id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type srl_detailUncheckedUpdateManyInput = {
    srl_detail_id?: StringFieldUpdateOperationsInput | string
    srl_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type cutiCreateInput = {
    cuti_id: string
    type: string
    description: string
    date: Date | string
    year: number
    status: $Enums.cuti_status
    createdAt: Date | string
    employee_cuti_approvalToemployee?: employeeCreateNestedOneWithoutCuti_cuti_approvalToemployeeInput
    employee?: employeeCreateNestedOneWithoutCutiInput
  }

  export type cutiUncheckedCreateInput = {
    cuti_id: string
    payroll?: string | null
    type: string
    description: string
    date: Date | string
    year: number
    status: $Enums.cuti_status
    approval?: string | null
    createdAt: Date | string
  }

  export type cutiUpdateInput = {
    cuti_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    year?: IntFieldUpdateOperationsInput | number
    status?: Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_cuti_approvalToemployee?: employeeUpdateOneWithoutCuti_cuti_approvalToemployeeNestedInput
    employee?: employeeUpdateOneWithoutCutiNestedInput
  }

  export type cutiUncheckedUpdateInput = {
    cuti_id?: StringFieldUpdateOperationsInput | string
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    year?: IntFieldUpdateOperationsInput | number
    status?: Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
    approval?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cutiCreateManyInput = {
    cuti_id: string
    payroll?: string | null
    type: string
    description: string
    date: Date | string
    year: number
    status: $Enums.cuti_status
    approval?: string | null
    createdAt: Date | string
  }

  export type cutiUpdateManyMutationInput = {
    cuti_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    year?: IntFieldUpdateOperationsInput | number
    status?: Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cutiUncheckedUpdateManyInput = {
    cuti_id?: StringFieldUpdateOperationsInput | string
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    year?: IntFieldUpdateOperationsInput | number
    status?: Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
    approval?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sppdCreateInput = {
    sppd_id: string
    purpose: string
    location: string
    start_date: Date | string
    end_date: Date | string
    duration: number
    createdAt: Date | string
    skpd?: skpdCreateNestedManyWithoutSppdInput
    employee?: employeeCreateNestedOneWithoutSppdInput
    dept_sppd_deptTodept?: deptCreateNestedOneWithoutSppd_sppd_deptTodeptInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutSppdInput
  }

  export type sppdUncheckedCreateInput = {
    sppd_id: string
    purpose: string
    location: string
    dept?: string | null
    start_date: Date | string
    end_date: Date | string
    duration: number
    createdBy?: string | null
    createdAt: Date | string
    skpd?: skpdUncheckedCreateNestedManyWithoutSppdInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutSppdInput
  }

  export type sppdUpdateInput = {
    sppd_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skpd?: skpdUpdateManyWithoutSppdNestedInput
    employee?: employeeUpdateOneWithoutSppdNestedInput
    dept_sppd_deptTodept?: deptUpdateOneWithoutSppd_sppd_deptTodeptNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutSppdNestedInput
  }

  export type sppdUncheckedUpdateInput = {
    sppd_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    dept?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skpd?: skpdUncheckedUpdateManyWithoutSppdNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutSppdNestedInput
  }

  export type sppdCreateManyInput = {
    sppd_id: string
    purpose: string
    location: string
    dept?: string | null
    start_date: Date | string
    end_date: Date | string
    duration: number
    createdBy?: string | null
    createdAt: Date | string
  }

  export type sppdUpdateManyMutationInput = {
    sppd_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sppdUncheckedUpdateManyInput = {
    sppd_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    dept?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sppd_detailCreateInput = {
    sppd_detail_id: string
    step: number
    description: string
    employee?: employeeCreateNestedOneWithoutSppd_detailInput
    sppd?: sppdCreateNestedOneWithoutSppd_detailInput
  }

  export type sppd_detailUncheckedCreateInput = {
    sppd_detail_id: string
    step: number
    sppd_id?: string | null
    payroll?: string | null
    description: string
  }

  export type sppd_detailUpdateInput = {
    sppd_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    employee?: employeeUpdateOneWithoutSppd_detailNestedInput
    sppd?: sppdUpdateOneWithoutSppd_detailNestedInput
  }

  export type sppd_detailUncheckedUpdateInput = {
    sppd_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    sppd_id?: NullableStringFieldUpdateOperationsInput | string | null
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
  }

  export type sppd_detailCreateManyInput = {
    sppd_detail_id: string
    step: number
    sppd_id?: string | null
    payroll?: string | null
    description: string
  }

  export type sppd_detailUpdateManyMutationInput = {
    sppd_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
  }

  export type sppd_detailUncheckedUpdateManyInput = {
    sppd_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    sppd_id?: NullableStringFieldUpdateOperationsInput | string | null
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
  }

  export type skpdCreateInput = {
    skpd_id?: string
    real_start: Date | string
    real_end: Date | string
    status: $Enums.skpd_status
    createdAt: Date | string
    employee_skpd_createdByToemployee?: employeeCreateNestedOneWithoutSkpd_skpd_createdByToemployeeInput
    employee_skpd_payrollToemployee?: employeeCreateNestedOneWithoutSkpd_skpd_payrollToemployeeInput
    sppd?: sppdCreateNestedOneWithoutSkpdInput
  }

  export type skpdUncheckedCreateInput = {
    skpd_id?: string
    sppd_id?: string | null
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status: $Enums.skpd_status
    createdBy?: string | null
    createdAt: Date | string
  }

  export type skpdUpdateInput = {
    skpd_id?: StringFieldUpdateOperationsInput | string
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumskpd_statusFieldUpdateOperationsInput | $Enums.skpd_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_skpd_createdByToemployee?: employeeUpdateOneWithoutSkpd_skpd_createdByToemployeeNestedInput
    employee_skpd_payrollToemployee?: employeeUpdateOneWithoutSkpd_skpd_payrollToemployeeNestedInput
    sppd?: sppdUpdateOneWithoutSkpdNestedInput
  }

  export type skpdUncheckedUpdateInput = {
    skpd_id?: StringFieldUpdateOperationsInput | string
    sppd_id?: NullableStringFieldUpdateOperationsInput | string | null
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumskpd_statusFieldUpdateOperationsInput | $Enums.skpd_status
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type skpdCreateManyInput = {
    skpd_id?: string
    sppd_id?: string | null
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status: $Enums.skpd_status
    createdBy?: string | null
    createdAt: Date | string
  }

  export type skpdUpdateManyMutationInput = {
    skpd_id?: StringFieldUpdateOperationsInput | string
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumskpd_statusFieldUpdateOperationsInput | $Enums.skpd_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type skpdUncheckedUpdateManyInput = {
    skpd_id?: StringFieldUpdateOperationsInput | string
    sppd_id?: NullableStringFieldUpdateOperationsInput | string | null
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumskpd_statusFieldUpdateOperationsInput | $Enums.skpd_status
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ijinCreateInput = {
    ijin_id: string
    type: string
    description: string
    date: Date | string
    status: $Enums.ijin_status
    createdAt: Date | string
    employee_ijin_approvalToemployee?: employeeCreateNestedOneWithoutIjin_ijin_approvalToemployeeInput
    employee?: employeeCreateNestedOneWithoutIjinInput
  }

  export type ijinUncheckedCreateInput = {
    ijin_id: string
    payroll?: string | null
    type: string
    description: string
    date: Date | string
    status: $Enums.ijin_status
    approval?: string | null
    createdAt: Date | string
  }

  export type ijinUpdateInput = {
    ijin_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumijin_statusFieldUpdateOperationsInput | $Enums.ijin_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_ijin_approvalToemployee?: employeeUpdateOneWithoutIjin_ijin_approvalToemployeeNestedInput
    employee?: employeeUpdateOneWithoutIjinNestedInput
  }

  export type ijinUncheckedUpdateInput = {
    ijin_id?: StringFieldUpdateOperationsInput | string
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumijin_statusFieldUpdateOperationsInput | $Enums.ijin_status
    approval?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ijinCreateManyInput = {
    ijin_id: string
    payroll?: string | null
    type: string
    description: string
    date: Date | string
    status: $Enums.ijin_status
    approval?: string | null
    createdAt: Date | string
  }

  export type ijinUpdateManyMutationInput = {
    ijin_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumijin_statusFieldUpdateOperationsInput | $Enums.ijin_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ijinUncheckedUpdateManyInput = {
    ijin_id?: StringFieldUpdateOperationsInput | string
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumijin_statusFieldUpdateOperationsInput | $Enums.ijin_status
    approval?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Enumemployee_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.employee_status | Enumemployee_statusFieldRefInput<$PrismaModel>
    in?: $Enums.employee_status[]
    notIn?: $Enums.employee_status[]
    not?: NestedEnumemployee_statusFilter<$PrismaModel> | $Enums.employee_status
  }

  export type AttendanceListRelationFilter = {
    every?: attendanceWhereInput
    some?: attendanceWhereInput
    none?: attendanceWhereInput
  }

  export type Check_ioListRelationFilter = {
    every?: check_ioWhereInput
    some?: check_ioWhereInput
    none?: check_ioWhereInput
  }

  export type CutiListRelationFilter = {
    every?: cutiWhereInput
    some?: cutiWhereInput
    none?: cutiWhereInput
  }

  export type ProfileNullableScalarRelationFilter = {
    is?: profileWhereInput | null
    isNot?: profileWhereInput | null
  }

  export type EmployeeNullableScalarRelationFilter = {
    is?: employeeWhereInput | null
    isNot?: employeeWhereInput | null
  }

  export type EmployeeListRelationFilter = {
    every?: employeeWhereInput
    some?: employeeWhereInput
    none?: employeeWhereInput
  }

  export type DeptNullableScalarRelationFilter = {
    is?: deptWhereInput | null
    isNot?: deptWhereInput | null
  }

  export type IjinListRelationFilter = {
    every?: ijinWhereInput
    some?: ijinWhereInput
    none?: ijinWhereInput
  }

  export type SkpdListRelationFilter = {
    every?: skpdWhereInput
    some?: skpdWhereInput
    none?: skpdWhereInput
  }

  export type SplListRelationFilter = {
    every?: splWhereInput
    some?: splWhereInput
    none?: splWhereInput
  }

  export type Spl_detailListRelationFilter = {
    every?: spl_detailWhereInput
    some?: spl_detailWhereInput
    none?: spl_detailWhereInput
  }

  export type SppdListRelationFilter = {
    every?: sppdWhereInput
    some?: sppdWhereInput
    none?: sppdWhereInput
  }

  export type Sppd_detailListRelationFilter = {
    every?: sppd_detailWhereInput
    some?: sppd_detailWhereInput
    none?: sppd_detailWhereInput
  }

  export type SrlListRelationFilter = {
    every?: srlWhereInput
    some?: srlWhereInput
    none?: srlWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type attendanceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type check_ioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cutiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type employeeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ijinOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type skpdOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type splOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type spl_detailOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sppdOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sppd_detailOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type srlOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type employeeOrderByRelevanceInput = {
    fields: employeeOrderByRelevanceFieldEnum | employeeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type employeeCountOrderByAggregateInput = {
    payroll?: SortOrder
    user_id_machine?: SortOrder
    profile_id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    position?: SortOrder
    department?: SortOrder
    location?: SortOrder
    phone?: SortOrder
    workhour?: SortOrder
    approver?: SortOrder
    substitute?: SortOrder
    join_date?: SortOrder
    signature?: SortOrder
    status?: SortOrder
  }

  export type employeeAvgOrderByAggregateInput = {
    workhour?: SortOrder
  }

  export type employeeMaxOrderByAggregateInput = {
    payroll?: SortOrder
    user_id_machine?: SortOrder
    profile_id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    position?: SortOrder
    department?: SortOrder
    location?: SortOrder
    phone?: SortOrder
    workhour?: SortOrder
    approver?: SortOrder
    substitute?: SortOrder
    join_date?: SortOrder
    signature?: SortOrder
    status?: SortOrder
  }

  export type employeeMinOrderByAggregateInput = {
    payroll?: SortOrder
    user_id_machine?: SortOrder
    profile_id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    position?: SortOrder
    department?: SortOrder
    location?: SortOrder
    phone?: SortOrder
    workhour?: SortOrder
    approver?: SortOrder
    substitute?: SortOrder
    join_date?: SortOrder
    signature?: SortOrder
    status?: SortOrder
  }

  export type employeeSumOrderByAggregateInput = {
    workhour?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Enumemployee_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.employee_status | Enumemployee_statusFieldRefInput<$PrismaModel>
    in?: $Enums.employee_status[]
    notIn?: $Enums.employee_status[]
    not?: NestedEnumemployee_statusWithAggregatesFilter<$PrismaModel> | $Enums.employee_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumemployee_statusFilter<$PrismaModel>
    _max?: NestedEnumemployee_statusFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type profileOrderByRelevanceInput = {
    fields: profileOrderByRelevanceFieldEnum | profileOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type profileCountOrderByAggregateInput = {
    profile_id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    level?: SortOrder
    user_hrd?: SortOrder
    access_sppd?: SortOrder
    access_skpd?: SortOrder
    access_attendance?: SortOrder
    access_spl?: SortOrder
    access_srl?: SortOrder
    access_cuti?: SortOrder
    access_ijin?: SortOrder
    access_calendar?: SortOrder
    access_user?: SortOrder
    access_profile?: SortOrder
    access_dept?: SortOrder
    access_setting?: SortOrder
  }

  export type profileAvgOrderByAggregateInput = {
    level?: SortOrder
  }

  export type profileMaxOrderByAggregateInput = {
    profile_id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    level?: SortOrder
    user_hrd?: SortOrder
    access_sppd?: SortOrder
    access_skpd?: SortOrder
    access_attendance?: SortOrder
    access_spl?: SortOrder
    access_srl?: SortOrder
    access_cuti?: SortOrder
    access_ijin?: SortOrder
    access_calendar?: SortOrder
    access_user?: SortOrder
    access_profile?: SortOrder
    access_dept?: SortOrder
    access_setting?: SortOrder
  }

  export type profileMinOrderByAggregateInput = {
    profile_id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    level?: SortOrder
    user_hrd?: SortOrder
    access_sppd?: SortOrder
    access_skpd?: SortOrder
    access_attendance?: SortOrder
    access_spl?: SortOrder
    access_srl?: SortOrder
    access_cuti?: SortOrder
    access_ijin?: SortOrder
    access_calendar?: SortOrder
    access_user?: SortOrder
    access_profile?: SortOrder
    access_dept?: SortOrder
    access_setting?: SortOrder
  }

  export type profileSumOrderByAggregateInput = {
    level?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type check_ioOrderByRelevanceInput = {
    fields: check_ioOrderByRelevanceFieldEnum | check_ioOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type check_ioCountOrderByAggregateInput = {
    check_io_id?: SortOrder
    user_id_machine?: SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
  }

  export type check_ioMaxOrderByAggregateInput = {
    check_io_id?: SortOrder
    user_id_machine?: SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
  }

  export type check_ioMinOrderByAggregateInput = {
    check_io_id?: SortOrder
    user_id_machine?: SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type attendanceOrderByRelevanceInput = {
    fields: attendanceOrderByRelevanceFieldEnum | attendanceOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type attendanceCountOrderByAggregateInput = {
    attendance_id?: SortOrder
    user_id_machine?: SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    check_in2?: SortOrder
    check_out2?: SortOrder
    type?: SortOrder
    ijin_info?: SortOrder
    description?: SortOrder
    attachment?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type attendanceMaxOrderByAggregateInput = {
    attendance_id?: SortOrder
    user_id_machine?: SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    check_in2?: SortOrder
    check_out2?: SortOrder
    type?: SortOrder
    ijin_info?: SortOrder
    description?: SortOrder
    attachment?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type attendanceMinOrderByAggregateInput = {
    attendance_id?: SortOrder
    user_id_machine?: SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    check_in2?: SortOrder
    check_out2?: SortOrder
    type?: SortOrder
    ijin_info?: SortOrder
    description?: SortOrder
    attachment?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type temp_check_ioOrderByRelevanceInput = {
    fields: temp_check_ioOrderByRelevanceFieldEnum | temp_check_ioOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type temp_check_ioCountOrderByAggregateInput = {
    check_io_id?: SortOrder
    user_id_machine?: SortOrder
    datetime?: SortOrder
    type?: SortOrder
  }

  export type temp_check_ioMaxOrderByAggregateInput = {
    check_io_id?: SortOrder
    user_id_machine?: SortOrder
    datetime?: SortOrder
    type?: SortOrder
  }

  export type temp_check_ioMinOrderByAggregateInput = {
    check_io_id?: SortOrder
    user_id_machine?: SortOrder
    datetime?: SortOrder
    type?: SortOrder
  }

  export type Enumcalendar_typeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.calendar_type | Enumcalendar_typeFieldRefInput<$PrismaModel> | null
    in?: $Enums.calendar_type[] | null
    notIn?: $Enums.calendar_type[] | null
    not?: NestedEnumcalendar_typeNullableFilter<$PrismaModel> | $Enums.calendar_type | null
  }

  export type calendarOrderByRelevanceInput = {
    fields: calendarOrderByRelevanceFieldEnum | calendarOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type calendarCountOrderByAggregateInput = {
    calendar_id?: SortOrder
    description?: SortOrder
    type?: SortOrder
    date?: SortOrder
  }

  export type calendarMaxOrderByAggregateInput = {
    calendar_id?: SortOrder
    description?: SortOrder
    type?: SortOrder
    date?: SortOrder
  }

  export type calendarMinOrderByAggregateInput = {
    calendar_id?: SortOrder
    description?: SortOrder
    type?: SortOrder
    date?: SortOrder
  }

  export type Enumcalendar_typeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.calendar_type | Enumcalendar_typeFieldRefInput<$PrismaModel> | null
    in?: $Enums.calendar_type[] | null
    notIn?: $Enums.calendar_type[] | null
    not?: NestedEnumcalendar_typeNullableWithAggregatesFilter<$PrismaModel> | $Enums.calendar_type | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumcalendar_typeNullableFilter<$PrismaModel>
    _max?: NestedEnumcalendar_typeNullableFilter<$PrismaModel>
  }

  export type settingOrderByRelevanceInput = {
    fields: settingOrderByRelevanceFieldEnum | settingOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type settingCountOrderByAggregateInput = {
    setting_id?: SortOrder
    start_periode?: SortOrder
    end_periode?: SortOrder
  }

  export type settingAvgOrderByAggregateInput = {
    start_periode?: SortOrder
    end_periode?: SortOrder
  }

  export type settingMaxOrderByAggregateInput = {
    setting_id?: SortOrder
    start_periode?: SortOrder
    end_periode?: SortOrder
  }

  export type settingMinOrderByAggregateInput = {
    setting_id?: SortOrder
    start_periode?: SortOrder
    end_periode?: SortOrder
  }

  export type settingSumOrderByAggregateInput = {
    start_periode?: SortOrder
    end_periode?: SortOrder
  }

  export type Enumspl_status1Filter<$PrismaModel = never> = {
    equals?: $Enums.spl_status1 | Enumspl_status1FieldRefInput<$PrismaModel>
    in?: $Enums.spl_status1[]
    notIn?: $Enums.spl_status1[]
    not?: NestedEnumspl_status1Filter<$PrismaModel> | $Enums.spl_status1
  }

  export type Enumspl_status2Filter<$PrismaModel = never> = {
    equals?: $Enums.spl_status2 | Enumspl_status2FieldRefInput<$PrismaModel>
    in?: $Enums.spl_status2[]
    notIn?: $Enums.spl_status2[]
    not?: NestedEnumspl_status2Filter<$PrismaModel> | $Enums.spl_status2
  }

  export type splOrderByRelevanceInput = {
    fields: splOrderByRelevanceFieldEnum | splOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type splCountOrderByAggregateInput = {
    spl_id?: SortOrder
    purpose?: SortOrder
    est_start?: SortOrder
    est_end?: SortOrder
    status1?: SortOrder
    approval1?: SortOrder
    status2?: SortOrder
    approval2?: SortOrder
    createdAt?: SortOrder
  }

  export type splMaxOrderByAggregateInput = {
    spl_id?: SortOrder
    purpose?: SortOrder
    est_start?: SortOrder
    est_end?: SortOrder
    status1?: SortOrder
    approval1?: SortOrder
    status2?: SortOrder
    approval2?: SortOrder
    createdAt?: SortOrder
  }

  export type splMinOrderByAggregateInput = {
    spl_id?: SortOrder
    purpose?: SortOrder
    est_start?: SortOrder
    est_end?: SortOrder
    status1?: SortOrder
    approval1?: SortOrder
    status2?: SortOrder
    approval2?: SortOrder
    createdAt?: SortOrder
  }

  export type Enumspl_status1WithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.spl_status1 | Enumspl_status1FieldRefInput<$PrismaModel>
    in?: $Enums.spl_status1[]
    notIn?: $Enums.spl_status1[]
    not?: NestedEnumspl_status1WithAggregatesFilter<$PrismaModel> | $Enums.spl_status1
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumspl_status1Filter<$PrismaModel>
    _max?: NestedEnumspl_status1Filter<$PrismaModel>
  }

  export type Enumspl_status2WithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.spl_status2 | Enumspl_status2FieldRefInput<$PrismaModel>
    in?: $Enums.spl_status2[]
    notIn?: $Enums.spl_status2[]
    not?: NestedEnumspl_status2WithAggregatesFilter<$PrismaModel> | $Enums.spl_status2
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumspl_status2Filter<$PrismaModel>
    _max?: NestedEnumspl_status2Filter<$PrismaModel>
  }

  export type SplScalarRelationFilter = {
    is?: splWhereInput
    isNot?: splWhereInput
  }

  export type spl_detailOrderByRelevanceInput = {
    fields: spl_detailOrderByRelevanceFieldEnum | spl_detailOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type spl_detailCountOrderByAggregateInput = {
    spl_detail_id?: SortOrder
    step?: SortOrder
    spl_id?: SortOrder
    payroll?: SortOrder
    description?: SortOrder
  }

  export type spl_detailAvgOrderByAggregateInput = {
    step?: SortOrder
  }

  export type spl_detailMaxOrderByAggregateInput = {
    spl_detail_id?: SortOrder
    step?: SortOrder
    spl_id?: SortOrder
    payroll?: SortOrder
    description?: SortOrder
  }

  export type spl_detailMinOrderByAggregateInput = {
    spl_detail_id?: SortOrder
    step?: SortOrder
    spl_id?: SortOrder
    payroll?: SortOrder
    description?: SortOrder
  }

  export type spl_detailSumOrderByAggregateInput = {
    step?: SortOrder
  }

  export type Enumdept_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.dept_status | Enumdept_statusFieldRefInput<$PrismaModel>
    in?: $Enums.dept_status[]
    notIn?: $Enums.dept_status[]
    not?: NestedEnumdept_statusFilter<$PrismaModel> | $Enums.dept_status
  }

  export type deptOrderByRelevanceInput = {
    fields: deptOrderByRelevanceFieldEnum | deptOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type deptCountOrderByAggregateInput = {
    dept_id?: SortOrder
    dept_code?: SortOrder
    initial?: SortOrder
    name?: SortOrder
    status?: SortOrder
  }

  export type deptMaxOrderByAggregateInput = {
    dept_id?: SortOrder
    dept_code?: SortOrder
    initial?: SortOrder
    name?: SortOrder
    status?: SortOrder
  }

  export type deptMinOrderByAggregateInput = {
    dept_id?: SortOrder
    dept_code?: SortOrder
    initial?: SortOrder
    name?: SortOrder
    status?: SortOrder
  }

  export type Enumdept_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.dept_status | Enumdept_statusFieldRefInput<$PrismaModel>
    in?: $Enums.dept_status[]
    notIn?: $Enums.dept_status[]
    not?: NestedEnumdept_statusWithAggregatesFilter<$PrismaModel> | $Enums.dept_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdept_statusFilter<$PrismaModel>
    _max?: NestedEnumdept_statusFilter<$PrismaModel>
  }

  export type Enumsrl_status1Filter<$PrismaModel = never> = {
    equals?: $Enums.srl_status1 | Enumsrl_status1FieldRefInput<$PrismaModel>
    in?: $Enums.srl_status1[]
    notIn?: $Enums.srl_status1[]
    not?: NestedEnumsrl_status1Filter<$PrismaModel> | $Enums.srl_status1
  }

  export type Enumsrl_status2Filter<$PrismaModel = never> = {
    equals?: $Enums.srl_status2 | Enumsrl_status2FieldRefInput<$PrismaModel>
    in?: $Enums.srl_status2[]
    notIn?: $Enums.srl_status2[]
    not?: NestedEnumsrl_status2Filter<$PrismaModel> | $Enums.srl_status2
  }

  export type SplNullableScalarRelationFilter = {
    is?: splWhereInput | null
    isNot?: splWhereInput | null
  }

  export type Srl_detailListRelationFilter = {
    every?: srl_detailWhereInput
    some?: srl_detailWhereInput
    none?: srl_detailWhereInput
  }

  export type srl_detailOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type srlOrderByRelevanceInput = {
    fields: srlOrderByRelevanceFieldEnum | srlOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type srlCountOrderByAggregateInput = {
    srl_id?: SortOrder
    spl_id?: SortOrder
    payroll?: SortOrder
    real_start?: SortOrder
    real_end?: SortOrder
    status1?: SortOrder
    approval1?: SortOrder
    status2?: SortOrder
    approval2?: SortOrder
    createdAt?: SortOrder
  }

  export type srlMaxOrderByAggregateInput = {
    srl_id?: SortOrder
    spl_id?: SortOrder
    payroll?: SortOrder
    real_start?: SortOrder
    real_end?: SortOrder
    status1?: SortOrder
    approval1?: SortOrder
    status2?: SortOrder
    approval2?: SortOrder
    createdAt?: SortOrder
  }

  export type srlMinOrderByAggregateInput = {
    srl_id?: SortOrder
    spl_id?: SortOrder
    payroll?: SortOrder
    real_start?: SortOrder
    real_end?: SortOrder
    status1?: SortOrder
    approval1?: SortOrder
    status2?: SortOrder
    approval2?: SortOrder
    createdAt?: SortOrder
  }

  export type Enumsrl_status1WithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.srl_status1 | Enumsrl_status1FieldRefInput<$PrismaModel>
    in?: $Enums.srl_status1[]
    notIn?: $Enums.srl_status1[]
    not?: NestedEnumsrl_status1WithAggregatesFilter<$PrismaModel> | $Enums.srl_status1
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumsrl_status1Filter<$PrismaModel>
    _max?: NestedEnumsrl_status1Filter<$PrismaModel>
  }

  export type Enumsrl_status2WithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.srl_status2 | Enumsrl_status2FieldRefInput<$PrismaModel>
    in?: $Enums.srl_status2[]
    notIn?: $Enums.srl_status2[]
    not?: NestedEnumsrl_status2WithAggregatesFilter<$PrismaModel> | $Enums.srl_status2
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumsrl_status2Filter<$PrismaModel>
    _max?: NestedEnumsrl_status2Filter<$PrismaModel>
  }

  export type SrlNullableScalarRelationFilter = {
    is?: srlWhereInput | null
    isNot?: srlWhereInput | null
  }

  export type srl_detailOrderByRelevanceInput = {
    fields: srl_detailOrderByRelevanceFieldEnum | srl_detailOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type srl_detailCountOrderByAggregateInput = {
    srl_detail_id?: SortOrder
    srl_id?: SortOrder
    description?: SortOrder
    status?: SortOrder
  }

  export type srl_detailMaxOrderByAggregateInput = {
    srl_detail_id?: SortOrder
    srl_id?: SortOrder
    description?: SortOrder
    status?: SortOrder
  }

  export type srl_detailMinOrderByAggregateInput = {
    srl_detail_id?: SortOrder
    srl_id?: SortOrder
    description?: SortOrder
    status?: SortOrder
  }

  export type Enumcuti_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.cuti_status | Enumcuti_statusFieldRefInput<$PrismaModel>
    in?: $Enums.cuti_status[]
    notIn?: $Enums.cuti_status[]
    not?: NestedEnumcuti_statusFilter<$PrismaModel> | $Enums.cuti_status
  }

  export type cutiOrderByRelevanceInput = {
    fields: cutiOrderByRelevanceFieldEnum | cutiOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type cutiCountOrderByAggregateInput = {
    cuti_id?: SortOrder
    payroll?: SortOrder
    type?: SortOrder
    description?: SortOrder
    date?: SortOrder
    year?: SortOrder
    status?: SortOrder
    approval?: SortOrder
    createdAt?: SortOrder
  }

  export type cutiAvgOrderByAggregateInput = {
    year?: SortOrder
  }

  export type cutiMaxOrderByAggregateInput = {
    cuti_id?: SortOrder
    payroll?: SortOrder
    type?: SortOrder
    description?: SortOrder
    date?: SortOrder
    year?: SortOrder
    status?: SortOrder
    approval?: SortOrder
    createdAt?: SortOrder
  }

  export type cutiMinOrderByAggregateInput = {
    cuti_id?: SortOrder
    payroll?: SortOrder
    type?: SortOrder
    description?: SortOrder
    date?: SortOrder
    year?: SortOrder
    status?: SortOrder
    approval?: SortOrder
    createdAt?: SortOrder
  }

  export type cutiSumOrderByAggregateInput = {
    year?: SortOrder
  }

  export type Enumcuti_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.cuti_status | Enumcuti_statusFieldRefInput<$PrismaModel>
    in?: $Enums.cuti_status[]
    notIn?: $Enums.cuti_status[]
    not?: NestedEnumcuti_statusWithAggregatesFilter<$PrismaModel> | $Enums.cuti_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumcuti_statusFilter<$PrismaModel>
    _max?: NestedEnumcuti_statusFilter<$PrismaModel>
  }

  export type sppdOrderByRelevanceInput = {
    fields: sppdOrderByRelevanceFieldEnum | sppdOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sppdCountOrderByAggregateInput = {
    sppd_id?: SortOrder
    purpose?: SortOrder
    location?: SortOrder
    dept?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    duration?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type sppdAvgOrderByAggregateInput = {
    duration?: SortOrder
  }

  export type sppdMaxOrderByAggregateInput = {
    sppd_id?: SortOrder
    purpose?: SortOrder
    location?: SortOrder
    dept?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    duration?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type sppdMinOrderByAggregateInput = {
    sppd_id?: SortOrder
    purpose?: SortOrder
    location?: SortOrder
    dept?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    duration?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type sppdSumOrderByAggregateInput = {
    duration?: SortOrder
  }

  export type SppdNullableScalarRelationFilter = {
    is?: sppdWhereInput | null
    isNot?: sppdWhereInput | null
  }

  export type sppd_detailOrderByRelevanceInput = {
    fields: sppd_detailOrderByRelevanceFieldEnum | sppd_detailOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sppd_detailCountOrderByAggregateInput = {
    sppd_detail_id?: SortOrder
    step?: SortOrder
    sppd_id?: SortOrder
    payroll?: SortOrder
    description?: SortOrder
  }

  export type sppd_detailAvgOrderByAggregateInput = {
    step?: SortOrder
  }

  export type sppd_detailMaxOrderByAggregateInput = {
    sppd_detail_id?: SortOrder
    step?: SortOrder
    sppd_id?: SortOrder
    payroll?: SortOrder
    description?: SortOrder
  }

  export type sppd_detailMinOrderByAggregateInput = {
    sppd_detail_id?: SortOrder
    step?: SortOrder
    sppd_id?: SortOrder
    payroll?: SortOrder
    description?: SortOrder
  }

  export type sppd_detailSumOrderByAggregateInput = {
    step?: SortOrder
  }

  export type Enumskpd_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.skpd_status | Enumskpd_statusFieldRefInput<$PrismaModel>
    in?: $Enums.skpd_status[]
    notIn?: $Enums.skpd_status[]
    not?: NestedEnumskpd_statusFilter<$PrismaModel> | $Enums.skpd_status
  }

  export type skpdOrderByRelevanceInput = {
    fields: skpdOrderByRelevanceFieldEnum | skpdOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type skpdCountOrderByAggregateInput = {
    skpd_id?: SortOrder
    sppd_id?: SortOrder
    payroll?: SortOrder
    real_start?: SortOrder
    real_end?: SortOrder
    status?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type skpdMaxOrderByAggregateInput = {
    skpd_id?: SortOrder
    sppd_id?: SortOrder
    payroll?: SortOrder
    real_start?: SortOrder
    real_end?: SortOrder
    status?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type skpdMinOrderByAggregateInput = {
    skpd_id?: SortOrder
    sppd_id?: SortOrder
    payroll?: SortOrder
    real_start?: SortOrder
    real_end?: SortOrder
    status?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type Enumskpd_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.skpd_status | Enumskpd_statusFieldRefInput<$PrismaModel>
    in?: $Enums.skpd_status[]
    notIn?: $Enums.skpd_status[]
    not?: NestedEnumskpd_statusWithAggregatesFilter<$PrismaModel> | $Enums.skpd_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumskpd_statusFilter<$PrismaModel>
    _max?: NestedEnumskpd_statusFilter<$PrismaModel>
  }

  export type Enumijin_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.ijin_status | Enumijin_statusFieldRefInput<$PrismaModel>
    in?: $Enums.ijin_status[]
    notIn?: $Enums.ijin_status[]
    not?: NestedEnumijin_statusFilter<$PrismaModel> | $Enums.ijin_status
  }

  export type ijinOrderByRelevanceInput = {
    fields: ijinOrderByRelevanceFieldEnum | ijinOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ijinCountOrderByAggregateInput = {
    ijin_id?: SortOrder
    payroll?: SortOrder
    type?: SortOrder
    description?: SortOrder
    date?: SortOrder
    status?: SortOrder
    approval?: SortOrder
    createdAt?: SortOrder
  }

  export type ijinMaxOrderByAggregateInput = {
    ijin_id?: SortOrder
    payroll?: SortOrder
    type?: SortOrder
    description?: SortOrder
    date?: SortOrder
    status?: SortOrder
    approval?: SortOrder
    createdAt?: SortOrder
  }

  export type ijinMinOrderByAggregateInput = {
    ijin_id?: SortOrder
    payroll?: SortOrder
    type?: SortOrder
    description?: SortOrder
    date?: SortOrder
    status?: SortOrder
    approval?: SortOrder
    createdAt?: SortOrder
  }

  export type Enumijin_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ijin_status | Enumijin_statusFieldRefInput<$PrismaModel>
    in?: $Enums.ijin_status[]
    notIn?: $Enums.ijin_status[]
    not?: NestedEnumijin_statusWithAggregatesFilter<$PrismaModel> | $Enums.ijin_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumijin_statusFilter<$PrismaModel>
    _max?: NestedEnumijin_statusFilter<$PrismaModel>
  }

  export type attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput = {
    create?: XOR<attendanceCreateWithoutEmployee_attendance_createdByToemployeeInput, attendanceUncheckedCreateWithoutEmployee_attendance_createdByToemployeeInput> | attendanceCreateWithoutEmployee_attendance_createdByToemployeeInput[] | attendanceUncheckedCreateWithoutEmployee_attendance_createdByToemployeeInput[]
    connectOrCreate?: attendanceCreateOrConnectWithoutEmployee_attendance_createdByToemployeeInput | attendanceCreateOrConnectWithoutEmployee_attendance_createdByToemployeeInput[]
    createMany?: attendanceCreateManyEmployee_attendance_createdByToemployeeInputEnvelope
    connect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
  }

  export type attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput = {
    create?: XOR<attendanceCreateWithoutEmployee_attendance_user_id_machineToemployeeInput, attendanceUncheckedCreateWithoutEmployee_attendance_user_id_machineToemployeeInput> | attendanceCreateWithoutEmployee_attendance_user_id_machineToemployeeInput[] | attendanceUncheckedCreateWithoutEmployee_attendance_user_id_machineToemployeeInput[]
    connectOrCreate?: attendanceCreateOrConnectWithoutEmployee_attendance_user_id_machineToemployeeInput | attendanceCreateOrConnectWithoutEmployee_attendance_user_id_machineToemployeeInput[]
    createMany?: attendanceCreateManyEmployee_attendance_user_id_machineToemployeeInputEnvelope
    connect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
  }

  export type check_ioCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<check_ioCreateWithoutEmployeeInput, check_ioUncheckedCreateWithoutEmployeeInput> | check_ioCreateWithoutEmployeeInput[] | check_ioUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: check_ioCreateOrConnectWithoutEmployeeInput | check_ioCreateOrConnectWithoutEmployeeInput[]
    createMany?: check_ioCreateManyEmployeeInputEnvelope
    connect?: check_ioWhereUniqueInput | check_ioWhereUniqueInput[]
  }

  export type cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput = {
    create?: XOR<cutiCreateWithoutEmployee_cuti_approvalToemployeeInput, cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput> | cutiCreateWithoutEmployee_cuti_approvalToemployeeInput[] | cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput[]
    connectOrCreate?: cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput | cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput[]
    createMany?: cutiCreateManyEmployee_cuti_approvalToemployeeInputEnvelope
    connect?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
  }

  export type cutiCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<cutiCreateWithoutEmployeeInput, cutiUncheckedCreateWithoutEmployeeInput> | cutiCreateWithoutEmployeeInput[] | cutiUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: cutiCreateOrConnectWithoutEmployeeInput | cutiCreateOrConnectWithoutEmployeeInput[]
    createMany?: cutiCreateManyEmployeeInputEnvelope
    connect?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
  }

  export type profileCreateNestedOneWithoutEmployeeInput = {
    create?: XOR<profileCreateWithoutEmployeeInput, profileUncheckedCreateWithoutEmployeeInput>
    connectOrCreate?: profileCreateOrConnectWithoutEmployeeInput
    connect?: profileWhereUniqueInput
  }

  export type employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput = {
    create?: XOR<employeeCreateWithoutOther_employee_employee_approverToemployeeInput, employeeUncheckedCreateWithoutOther_employee_employee_approverToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutOther_employee_employee_approverToemployeeInput
    connect?: employeeWhereUniqueInput
  }

  export type employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput = {
    create?: XOR<employeeCreateWithoutEmployee_employee_approverToemployeeInput, employeeUncheckedCreateWithoutEmployee_employee_approverToemployeeInput> | employeeCreateWithoutEmployee_employee_approverToemployeeInput[] | employeeUncheckedCreateWithoutEmployee_employee_approverToemployeeInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutEmployee_employee_approverToemployeeInput | employeeCreateOrConnectWithoutEmployee_employee_approverToemployeeInput[]
    createMany?: employeeCreateManyEmployee_employee_approverToemployeeInputEnvelope
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
  }

  export type deptCreateNestedOneWithoutEmployeeInput = {
    create?: XOR<deptCreateWithoutEmployeeInput, deptUncheckedCreateWithoutEmployeeInput>
    connectOrCreate?: deptCreateOrConnectWithoutEmployeeInput
    connect?: deptWhereUniqueInput
  }

  export type employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput = {
    create?: XOR<employeeCreateWithoutOther_employee_employee_substituteToemployeeInput, employeeUncheckedCreateWithoutOther_employee_employee_substituteToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutOther_employee_employee_substituteToemployeeInput
    connect?: employeeWhereUniqueInput
  }

  export type employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput = {
    create?: XOR<employeeCreateWithoutEmployee_employee_substituteToemployeeInput, employeeUncheckedCreateWithoutEmployee_employee_substituteToemployeeInput> | employeeCreateWithoutEmployee_employee_substituteToemployeeInput[] | employeeUncheckedCreateWithoutEmployee_employee_substituteToemployeeInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutEmployee_employee_substituteToemployeeInput | employeeCreateOrConnectWithoutEmployee_employee_substituteToemployeeInput[]
    createMany?: employeeCreateManyEmployee_employee_substituteToemployeeInputEnvelope
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
  }

  export type ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput = {
    create?: XOR<ijinCreateWithoutEmployee_ijin_approvalToemployeeInput, ijinUncheckedCreateWithoutEmployee_ijin_approvalToemployeeInput> | ijinCreateWithoutEmployee_ijin_approvalToemployeeInput[] | ijinUncheckedCreateWithoutEmployee_ijin_approvalToemployeeInput[]
    connectOrCreate?: ijinCreateOrConnectWithoutEmployee_ijin_approvalToemployeeInput | ijinCreateOrConnectWithoutEmployee_ijin_approvalToemployeeInput[]
    createMany?: ijinCreateManyEmployee_ijin_approvalToemployeeInputEnvelope
    connect?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
  }

  export type ijinCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<ijinCreateWithoutEmployeeInput, ijinUncheckedCreateWithoutEmployeeInput> | ijinCreateWithoutEmployeeInput[] | ijinUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ijinCreateOrConnectWithoutEmployeeInput | ijinCreateOrConnectWithoutEmployeeInput[]
    createMany?: ijinCreateManyEmployeeInputEnvelope
    connect?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
  }

  export type skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput = {
    create?: XOR<skpdCreateWithoutEmployee_skpd_createdByToemployeeInput, skpdUncheckedCreateWithoutEmployee_skpd_createdByToemployeeInput> | skpdCreateWithoutEmployee_skpd_createdByToemployeeInput[] | skpdUncheckedCreateWithoutEmployee_skpd_createdByToemployeeInput[]
    connectOrCreate?: skpdCreateOrConnectWithoutEmployee_skpd_createdByToemployeeInput | skpdCreateOrConnectWithoutEmployee_skpd_createdByToemployeeInput[]
    createMany?: skpdCreateManyEmployee_skpd_createdByToemployeeInputEnvelope
    connect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
  }

  export type skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput = {
    create?: XOR<skpdCreateWithoutEmployee_skpd_payrollToemployeeInput, skpdUncheckedCreateWithoutEmployee_skpd_payrollToemployeeInput> | skpdCreateWithoutEmployee_skpd_payrollToemployeeInput[] | skpdUncheckedCreateWithoutEmployee_skpd_payrollToemployeeInput[]
    connectOrCreate?: skpdCreateOrConnectWithoutEmployee_skpd_payrollToemployeeInput | skpdCreateOrConnectWithoutEmployee_skpd_payrollToemployeeInput[]
    createMany?: skpdCreateManyEmployee_skpd_payrollToemployeeInputEnvelope
    connect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
  }

  export type splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput = {
    create?: XOR<splCreateWithoutEmployee_spl_approval1ToemployeeInput, splUncheckedCreateWithoutEmployee_spl_approval1ToemployeeInput> | splCreateWithoutEmployee_spl_approval1ToemployeeInput[] | splUncheckedCreateWithoutEmployee_spl_approval1ToemployeeInput[]
    connectOrCreate?: splCreateOrConnectWithoutEmployee_spl_approval1ToemployeeInput | splCreateOrConnectWithoutEmployee_spl_approval1ToemployeeInput[]
    createMany?: splCreateManyEmployee_spl_approval1ToemployeeInputEnvelope
    connect?: splWhereUniqueInput | splWhereUniqueInput[]
  }

  export type splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput = {
    create?: XOR<splCreateWithoutEmployee_spl_approval2ToemployeeInput, splUncheckedCreateWithoutEmployee_spl_approval2ToemployeeInput> | splCreateWithoutEmployee_spl_approval2ToemployeeInput[] | splUncheckedCreateWithoutEmployee_spl_approval2ToemployeeInput[]
    connectOrCreate?: splCreateOrConnectWithoutEmployee_spl_approval2ToemployeeInput | splCreateOrConnectWithoutEmployee_spl_approval2ToemployeeInput[]
    createMany?: splCreateManyEmployee_spl_approval2ToemployeeInputEnvelope
    connect?: splWhereUniqueInput | splWhereUniqueInput[]
  }

  export type spl_detailCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<spl_detailCreateWithoutEmployeeInput, spl_detailUncheckedCreateWithoutEmployeeInput> | spl_detailCreateWithoutEmployeeInput[] | spl_detailUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: spl_detailCreateOrConnectWithoutEmployeeInput | spl_detailCreateOrConnectWithoutEmployeeInput[]
    createMany?: spl_detailCreateManyEmployeeInputEnvelope
    connect?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
  }

  export type sppdCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<sppdCreateWithoutEmployeeInput, sppdUncheckedCreateWithoutEmployeeInput> | sppdCreateWithoutEmployeeInput[] | sppdUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: sppdCreateOrConnectWithoutEmployeeInput | sppdCreateOrConnectWithoutEmployeeInput[]
    createMany?: sppdCreateManyEmployeeInputEnvelope
    connect?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
  }

  export type sppd_detailCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<sppd_detailCreateWithoutEmployeeInput, sppd_detailUncheckedCreateWithoutEmployeeInput> | sppd_detailCreateWithoutEmployeeInput[] | sppd_detailUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: sppd_detailCreateOrConnectWithoutEmployeeInput | sppd_detailCreateOrConnectWithoutEmployeeInput[]
    createMany?: sppd_detailCreateManyEmployeeInputEnvelope
    connect?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
  }

  export type srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput = {
    create?: XOR<srlCreateWithoutEmployee_srl_approval1ToemployeeInput, srlUncheckedCreateWithoutEmployee_srl_approval1ToemployeeInput> | srlCreateWithoutEmployee_srl_approval1ToemployeeInput[] | srlUncheckedCreateWithoutEmployee_srl_approval1ToemployeeInput[]
    connectOrCreate?: srlCreateOrConnectWithoutEmployee_srl_approval1ToemployeeInput | srlCreateOrConnectWithoutEmployee_srl_approval1ToemployeeInput[]
    createMany?: srlCreateManyEmployee_srl_approval1ToemployeeInputEnvelope
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
  }

  export type srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput = {
    create?: XOR<srlCreateWithoutEmployee_srl_approval2ToemployeeInput, srlUncheckedCreateWithoutEmployee_srl_approval2ToemployeeInput> | srlCreateWithoutEmployee_srl_approval2ToemployeeInput[] | srlUncheckedCreateWithoutEmployee_srl_approval2ToemployeeInput[]
    connectOrCreate?: srlCreateOrConnectWithoutEmployee_srl_approval2ToemployeeInput | srlCreateOrConnectWithoutEmployee_srl_approval2ToemployeeInput[]
    createMany?: srlCreateManyEmployee_srl_approval2ToemployeeInputEnvelope
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
  }

  export type srlCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<srlCreateWithoutEmployeeInput, srlUncheckedCreateWithoutEmployeeInput> | srlCreateWithoutEmployeeInput[] | srlUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: srlCreateOrConnectWithoutEmployeeInput | srlCreateOrConnectWithoutEmployeeInput[]
    createMany?: srlCreateManyEmployeeInputEnvelope
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
  }

  export type attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput = {
    create?: XOR<attendanceCreateWithoutEmployee_attendance_createdByToemployeeInput, attendanceUncheckedCreateWithoutEmployee_attendance_createdByToemployeeInput> | attendanceCreateWithoutEmployee_attendance_createdByToemployeeInput[] | attendanceUncheckedCreateWithoutEmployee_attendance_createdByToemployeeInput[]
    connectOrCreate?: attendanceCreateOrConnectWithoutEmployee_attendance_createdByToemployeeInput | attendanceCreateOrConnectWithoutEmployee_attendance_createdByToemployeeInput[]
    createMany?: attendanceCreateManyEmployee_attendance_createdByToemployeeInputEnvelope
    connect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
  }

  export type attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput = {
    create?: XOR<attendanceCreateWithoutEmployee_attendance_user_id_machineToemployeeInput, attendanceUncheckedCreateWithoutEmployee_attendance_user_id_machineToemployeeInput> | attendanceCreateWithoutEmployee_attendance_user_id_machineToemployeeInput[] | attendanceUncheckedCreateWithoutEmployee_attendance_user_id_machineToemployeeInput[]
    connectOrCreate?: attendanceCreateOrConnectWithoutEmployee_attendance_user_id_machineToemployeeInput | attendanceCreateOrConnectWithoutEmployee_attendance_user_id_machineToemployeeInput[]
    createMany?: attendanceCreateManyEmployee_attendance_user_id_machineToemployeeInputEnvelope
    connect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
  }

  export type check_ioUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<check_ioCreateWithoutEmployeeInput, check_ioUncheckedCreateWithoutEmployeeInput> | check_ioCreateWithoutEmployeeInput[] | check_ioUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: check_ioCreateOrConnectWithoutEmployeeInput | check_ioCreateOrConnectWithoutEmployeeInput[]
    createMany?: check_ioCreateManyEmployeeInputEnvelope
    connect?: check_ioWhereUniqueInput | check_ioWhereUniqueInput[]
  }

  export type cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput = {
    create?: XOR<cutiCreateWithoutEmployee_cuti_approvalToemployeeInput, cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput> | cutiCreateWithoutEmployee_cuti_approvalToemployeeInput[] | cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput[]
    connectOrCreate?: cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput | cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput[]
    createMany?: cutiCreateManyEmployee_cuti_approvalToemployeeInputEnvelope
    connect?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
  }

  export type cutiUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<cutiCreateWithoutEmployeeInput, cutiUncheckedCreateWithoutEmployeeInput> | cutiCreateWithoutEmployeeInput[] | cutiUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: cutiCreateOrConnectWithoutEmployeeInput | cutiCreateOrConnectWithoutEmployeeInput[]
    createMany?: cutiCreateManyEmployeeInputEnvelope
    connect?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
  }

  export type employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput = {
    create?: XOR<employeeCreateWithoutEmployee_employee_approverToemployeeInput, employeeUncheckedCreateWithoutEmployee_employee_approverToemployeeInput> | employeeCreateWithoutEmployee_employee_approverToemployeeInput[] | employeeUncheckedCreateWithoutEmployee_employee_approverToemployeeInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutEmployee_employee_approverToemployeeInput | employeeCreateOrConnectWithoutEmployee_employee_approverToemployeeInput[]
    createMany?: employeeCreateManyEmployee_employee_approverToemployeeInputEnvelope
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
  }

  export type employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput = {
    create?: XOR<employeeCreateWithoutEmployee_employee_substituteToemployeeInput, employeeUncheckedCreateWithoutEmployee_employee_substituteToemployeeInput> | employeeCreateWithoutEmployee_employee_substituteToemployeeInput[] | employeeUncheckedCreateWithoutEmployee_employee_substituteToemployeeInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutEmployee_employee_substituteToemployeeInput | employeeCreateOrConnectWithoutEmployee_employee_substituteToemployeeInput[]
    createMany?: employeeCreateManyEmployee_employee_substituteToemployeeInputEnvelope
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
  }

  export type ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput = {
    create?: XOR<ijinCreateWithoutEmployee_ijin_approvalToemployeeInput, ijinUncheckedCreateWithoutEmployee_ijin_approvalToemployeeInput> | ijinCreateWithoutEmployee_ijin_approvalToemployeeInput[] | ijinUncheckedCreateWithoutEmployee_ijin_approvalToemployeeInput[]
    connectOrCreate?: ijinCreateOrConnectWithoutEmployee_ijin_approvalToemployeeInput | ijinCreateOrConnectWithoutEmployee_ijin_approvalToemployeeInput[]
    createMany?: ijinCreateManyEmployee_ijin_approvalToemployeeInputEnvelope
    connect?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
  }

  export type ijinUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<ijinCreateWithoutEmployeeInput, ijinUncheckedCreateWithoutEmployeeInput> | ijinCreateWithoutEmployeeInput[] | ijinUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ijinCreateOrConnectWithoutEmployeeInput | ijinCreateOrConnectWithoutEmployeeInput[]
    createMany?: ijinCreateManyEmployeeInputEnvelope
    connect?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
  }

  export type skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput = {
    create?: XOR<skpdCreateWithoutEmployee_skpd_createdByToemployeeInput, skpdUncheckedCreateWithoutEmployee_skpd_createdByToemployeeInput> | skpdCreateWithoutEmployee_skpd_createdByToemployeeInput[] | skpdUncheckedCreateWithoutEmployee_skpd_createdByToemployeeInput[]
    connectOrCreate?: skpdCreateOrConnectWithoutEmployee_skpd_createdByToemployeeInput | skpdCreateOrConnectWithoutEmployee_skpd_createdByToemployeeInput[]
    createMany?: skpdCreateManyEmployee_skpd_createdByToemployeeInputEnvelope
    connect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
  }

  export type skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput = {
    create?: XOR<skpdCreateWithoutEmployee_skpd_payrollToemployeeInput, skpdUncheckedCreateWithoutEmployee_skpd_payrollToemployeeInput> | skpdCreateWithoutEmployee_skpd_payrollToemployeeInput[] | skpdUncheckedCreateWithoutEmployee_skpd_payrollToemployeeInput[]
    connectOrCreate?: skpdCreateOrConnectWithoutEmployee_skpd_payrollToemployeeInput | skpdCreateOrConnectWithoutEmployee_skpd_payrollToemployeeInput[]
    createMany?: skpdCreateManyEmployee_skpd_payrollToemployeeInputEnvelope
    connect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
  }

  export type splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput = {
    create?: XOR<splCreateWithoutEmployee_spl_approval1ToemployeeInput, splUncheckedCreateWithoutEmployee_spl_approval1ToemployeeInput> | splCreateWithoutEmployee_spl_approval1ToemployeeInput[] | splUncheckedCreateWithoutEmployee_spl_approval1ToemployeeInput[]
    connectOrCreate?: splCreateOrConnectWithoutEmployee_spl_approval1ToemployeeInput | splCreateOrConnectWithoutEmployee_spl_approval1ToemployeeInput[]
    createMany?: splCreateManyEmployee_spl_approval1ToemployeeInputEnvelope
    connect?: splWhereUniqueInput | splWhereUniqueInput[]
  }

  export type splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput = {
    create?: XOR<splCreateWithoutEmployee_spl_approval2ToemployeeInput, splUncheckedCreateWithoutEmployee_spl_approval2ToemployeeInput> | splCreateWithoutEmployee_spl_approval2ToemployeeInput[] | splUncheckedCreateWithoutEmployee_spl_approval2ToemployeeInput[]
    connectOrCreate?: splCreateOrConnectWithoutEmployee_spl_approval2ToemployeeInput | splCreateOrConnectWithoutEmployee_spl_approval2ToemployeeInput[]
    createMany?: splCreateManyEmployee_spl_approval2ToemployeeInputEnvelope
    connect?: splWhereUniqueInput | splWhereUniqueInput[]
  }

  export type spl_detailUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<spl_detailCreateWithoutEmployeeInput, spl_detailUncheckedCreateWithoutEmployeeInput> | spl_detailCreateWithoutEmployeeInput[] | spl_detailUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: spl_detailCreateOrConnectWithoutEmployeeInput | spl_detailCreateOrConnectWithoutEmployeeInput[]
    createMany?: spl_detailCreateManyEmployeeInputEnvelope
    connect?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
  }

  export type sppdUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<sppdCreateWithoutEmployeeInput, sppdUncheckedCreateWithoutEmployeeInput> | sppdCreateWithoutEmployeeInput[] | sppdUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: sppdCreateOrConnectWithoutEmployeeInput | sppdCreateOrConnectWithoutEmployeeInput[]
    createMany?: sppdCreateManyEmployeeInputEnvelope
    connect?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
  }

  export type sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<sppd_detailCreateWithoutEmployeeInput, sppd_detailUncheckedCreateWithoutEmployeeInput> | sppd_detailCreateWithoutEmployeeInput[] | sppd_detailUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: sppd_detailCreateOrConnectWithoutEmployeeInput | sppd_detailCreateOrConnectWithoutEmployeeInput[]
    createMany?: sppd_detailCreateManyEmployeeInputEnvelope
    connect?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
  }

  export type srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput = {
    create?: XOR<srlCreateWithoutEmployee_srl_approval1ToemployeeInput, srlUncheckedCreateWithoutEmployee_srl_approval1ToemployeeInput> | srlCreateWithoutEmployee_srl_approval1ToemployeeInput[] | srlUncheckedCreateWithoutEmployee_srl_approval1ToemployeeInput[]
    connectOrCreate?: srlCreateOrConnectWithoutEmployee_srl_approval1ToemployeeInput | srlCreateOrConnectWithoutEmployee_srl_approval1ToemployeeInput[]
    createMany?: srlCreateManyEmployee_srl_approval1ToemployeeInputEnvelope
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
  }

  export type srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput = {
    create?: XOR<srlCreateWithoutEmployee_srl_approval2ToemployeeInput, srlUncheckedCreateWithoutEmployee_srl_approval2ToemployeeInput> | srlCreateWithoutEmployee_srl_approval2ToemployeeInput[] | srlUncheckedCreateWithoutEmployee_srl_approval2ToemployeeInput[]
    connectOrCreate?: srlCreateOrConnectWithoutEmployee_srl_approval2ToemployeeInput | srlCreateOrConnectWithoutEmployee_srl_approval2ToemployeeInput[]
    createMany?: srlCreateManyEmployee_srl_approval2ToemployeeInputEnvelope
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
  }

  export type srlUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<srlCreateWithoutEmployeeInput, srlUncheckedCreateWithoutEmployeeInput> | srlCreateWithoutEmployeeInput[] | srlUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: srlCreateOrConnectWithoutEmployeeInput | srlCreateOrConnectWithoutEmployeeInput[]
    createMany?: srlCreateManyEmployeeInputEnvelope
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type Enumemployee_statusFieldUpdateOperationsInput = {
    set?: $Enums.employee_status
  }

  export type attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput = {
    create?: XOR<attendanceCreateWithoutEmployee_attendance_createdByToemployeeInput, attendanceUncheckedCreateWithoutEmployee_attendance_createdByToemployeeInput> | attendanceCreateWithoutEmployee_attendance_createdByToemployeeInput[] | attendanceUncheckedCreateWithoutEmployee_attendance_createdByToemployeeInput[]
    connectOrCreate?: attendanceCreateOrConnectWithoutEmployee_attendance_createdByToemployeeInput | attendanceCreateOrConnectWithoutEmployee_attendance_createdByToemployeeInput[]
    upsert?: attendanceUpsertWithWhereUniqueWithoutEmployee_attendance_createdByToemployeeInput | attendanceUpsertWithWhereUniqueWithoutEmployee_attendance_createdByToemployeeInput[]
    createMany?: attendanceCreateManyEmployee_attendance_createdByToemployeeInputEnvelope
    set?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    disconnect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    delete?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    connect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    update?: attendanceUpdateWithWhereUniqueWithoutEmployee_attendance_createdByToemployeeInput | attendanceUpdateWithWhereUniqueWithoutEmployee_attendance_createdByToemployeeInput[]
    updateMany?: attendanceUpdateManyWithWhereWithoutEmployee_attendance_createdByToemployeeInput | attendanceUpdateManyWithWhereWithoutEmployee_attendance_createdByToemployeeInput[]
    deleteMany?: attendanceScalarWhereInput | attendanceScalarWhereInput[]
  }

  export type attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput = {
    create?: XOR<attendanceCreateWithoutEmployee_attendance_user_id_machineToemployeeInput, attendanceUncheckedCreateWithoutEmployee_attendance_user_id_machineToemployeeInput> | attendanceCreateWithoutEmployee_attendance_user_id_machineToemployeeInput[] | attendanceUncheckedCreateWithoutEmployee_attendance_user_id_machineToemployeeInput[]
    connectOrCreate?: attendanceCreateOrConnectWithoutEmployee_attendance_user_id_machineToemployeeInput | attendanceCreateOrConnectWithoutEmployee_attendance_user_id_machineToemployeeInput[]
    upsert?: attendanceUpsertWithWhereUniqueWithoutEmployee_attendance_user_id_machineToemployeeInput | attendanceUpsertWithWhereUniqueWithoutEmployee_attendance_user_id_machineToemployeeInput[]
    createMany?: attendanceCreateManyEmployee_attendance_user_id_machineToemployeeInputEnvelope
    set?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    disconnect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    delete?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    connect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    update?: attendanceUpdateWithWhereUniqueWithoutEmployee_attendance_user_id_machineToemployeeInput | attendanceUpdateWithWhereUniqueWithoutEmployee_attendance_user_id_machineToemployeeInput[]
    updateMany?: attendanceUpdateManyWithWhereWithoutEmployee_attendance_user_id_machineToemployeeInput | attendanceUpdateManyWithWhereWithoutEmployee_attendance_user_id_machineToemployeeInput[]
    deleteMany?: attendanceScalarWhereInput | attendanceScalarWhereInput[]
  }

  export type check_ioUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<check_ioCreateWithoutEmployeeInput, check_ioUncheckedCreateWithoutEmployeeInput> | check_ioCreateWithoutEmployeeInput[] | check_ioUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: check_ioCreateOrConnectWithoutEmployeeInput | check_ioCreateOrConnectWithoutEmployeeInput[]
    upsert?: check_ioUpsertWithWhereUniqueWithoutEmployeeInput | check_ioUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: check_ioCreateManyEmployeeInputEnvelope
    set?: check_ioWhereUniqueInput | check_ioWhereUniqueInput[]
    disconnect?: check_ioWhereUniqueInput | check_ioWhereUniqueInput[]
    delete?: check_ioWhereUniqueInput | check_ioWhereUniqueInput[]
    connect?: check_ioWhereUniqueInput | check_ioWhereUniqueInput[]
    update?: check_ioUpdateWithWhereUniqueWithoutEmployeeInput | check_ioUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: check_ioUpdateManyWithWhereWithoutEmployeeInput | check_ioUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: check_ioScalarWhereInput | check_ioScalarWhereInput[]
  }

  export type cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput = {
    create?: XOR<cutiCreateWithoutEmployee_cuti_approvalToemployeeInput, cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput> | cutiCreateWithoutEmployee_cuti_approvalToemployeeInput[] | cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput[]
    connectOrCreate?: cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput | cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput[]
    upsert?: cutiUpsertWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput | cutiUpsertWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput[]
    createMany?: cutiCreateManyEmployee_cuti_approvalToemployeeInputEnvelope
    set?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    disconnect?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    delete?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    connect?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    update?: cutiUpdateWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput | cutiUpdateWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput[]
    updateMany?: cutiUpdateManyWithWhereWithoutEmployee_cuti_approvalToemployeeInput | cutiUpdateManyWithWhereWithoutEmployee_cuti_approvalToemployeeInput[]
    deleteMany?: cutiScalarWhereInput | cutiScalarWhereInput[]
  }

  export type cutiUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<cutiCreateWithoutEmployeeInput, cutiUncheckedCreateWithoutEmployeeInput> | cutiCreateWithoutEmployeeInput[] | cutiUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: cutiCreateOrConnectWithoutEmployeeInput | cutiCreateOrConnectWithoutEmployeeInput[]
    upsert?: cutiUpsertWithWhereUniqueWithoutEmployeeInput | cutiUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: cutiCreateManyEmployeeInputEnvelope
    set?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    disconnect?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    delete?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    connect?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    update?: cutiUpdateWithWhereUniqueWithoutEmployeeInput | cutiUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: cutiUpdateManyWithWhereWithoutEmployeeInput | cutiUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: cutiScalarWhereInput | cutiScalarWhereInput[]
  }

  export type profileUpdateOneWithoutEmployeeNestedInput = {
    create?: XOR<profileCreateWithoutEmployeeInput, profileUncheckedCreateWithoutEmployeeInput>
    connectOrCreate?: profileCreateOrConnectWithoutEmployeeInput
    upsert?: profileUpsertWithoutEmployeeInput
    disconnect?: profileWhereInput | boolean
    delete?: profileWhereInput | boolean
    connect?: profileWhereUniqueInput
    update?: XOR<XOR<profileUpdateToOneWithWhereWithoutEmployeeInput, profileUpdateWithoutEmployeeInput>, profileUncheckedUpdateWithoutEmployeeInput>
  }

  export type employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutOther_employee_employee_approverToemployeeInput, employeeUncheckedCreateWithoutOther_employee_employee_approverToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutOther_employee_employee_approverToemployeeInput
    upsert?: employeeUpsertWithoutOther_employee_employee_approverToemployeeInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutOther_employee_employee_approverToemployeeInput, employeeUpdateWithoutOther_employee_employee_approverToemployeeInput>, employeeUncheckedUpdateWithoutOther_employee_employee_approverToemployeeInput>
  }

  export type employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutEmployee_employee_approverToemployeeInput, employeeUncheckedCreateWithoutEmployee_employee_approverToemployeeInput> | employeeCreateWithoutEmployee_employee_approverToemployeeInput[] | employeeUncheckedCreateWithoutEmployee_employee_approverToemployeeInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutEmployee_employee_approverToemployeeInput | employeeCreateOrConnectWithoutEmployee_employee_approverToemployeeInput[]
    upsert?: employeeUpsertWithWhereUniqueWithoutEmployee_employee_approverToemployeeInput | employeeUpsertWithWhereUniqueWithoutEmployee_employee_approverToemployeeInput[]
    createMany?: employeeCreateManyEmployee_employee_approverToemployeeInputEnvelope
    set?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    disconnect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    delete?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    update?: employeeUpdateWithWhereUniqueWithoutEmployee_employee_approverToemployeeInput | employeeUpdateWithWhereUniqueWithoutEmployee_employee_approverToemployeeInput[]
    updateMany?: employeeUpdateManyWithWhereWithoutEmployee_employee_approverToemployeeInput | employeeUpdateManyWithWhereWithoutEmployee_employee_approverToemployeeInput[]
    deleteMany?: employeeScalarWhereInput | employeeScalarWhereInput[]
  }

  export type deptUpdateOneWithoutEmployeeNestedInput = {
    create?: XOR<deptCreateWithoutEmployeeInput, deptUncheckedCreateWithoutEmployeeInput>
    connectOrCreate?: deptCreateOrConnectWithoutEmployeeInput
    upsert?: deptUpsertWithoutEmployeeInput
    disconnect?: deptWhereInput | boolean
    delete?: deptWhereInput | boolean
    connect?: deptWhereUniqueInput
    update?: XOR<XOR<deptUpdateToOneWithWhereWithoutEmployeeInput, deptUpdateWithoutEmployeeInput>, deptUncheckedUpdateWithoutEmployeeInput>
  }

  export type employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutOther_employee_employee_substituteToemployeeInput, employeeUncheckedCreateWithoutOther_employee_employee_substituteToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutOther_employee_employee_substituteToemployeeInput
    upsert?: employeeUpsertWithoutOther_employee_employee_substituteToemployeeInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutOther_employee_employee_substituteToemployeeInput, employeeUpdateWithoutOther_employee_employee_substituteToemployeeInput>, employeeUncheckedUpdateWithoutOther_employee_employee_substituteToemployeeInput>
  }

  export type employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutEmployee_employee_substituteToemployeeInput, employeeUncheckedCreateWithoutEmployee_employee_substituteToemployeeInput> | employeeCreateWithoutEmployee_employee_substituteToemployeeInput[] | employeeUncheckedCreateWithoutEmployee_employee_substituteToemployeeInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutEmployee_employee_substituteToemployeeInput | employeeCreateOrConnectWithoutEmployee_employee_substituteToemployeeInput[]
    upsert?: employeeUpsertWithWhereUniqueWithoutEmployee_employee_substituteToemployeeInput | employeeUpsertWithWhereUniqueWithoutEmployee_employee_substituteToemployeeInput[]
    createMany?: employeeCreateManyEmployee_employee_substituteToemployeeInputEnvelope
    set?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    disconnect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    delete?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    update?: employeeUpdateWithWhereUniqueWithoutEmployee_employee_substituteToemployeeInput | employeeUpdateWithWhereUniqueWithoutEmployee_employee_substituteToemployeeInput[]
    updateMany?: employeeUpdateManyWithWhereWithoutEmployee_employee_substituteToemployeeInput | employeeUpdateManyWithWhereWithoutEmployee_employee_substituteToemployeeInput[]
    deleteMany?: employeeScalarWhereInput | employeeScalarWhereInput[]
  }

  export type ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput = {
    create?: XOR<ijinCreateWithoutEmployee_ijin_approvalToemployeeInput, ijinUncheckedCreateWithoutEmployee_ijin_approvalToemployeeInput> | ijinCreateWithoutEmployee_ijin_approvalToemployeeInput[] | ijinUncheckedCreateWithoutEmployee_ijin_approvalToemployeeInput[]
    connectOrCreate?: ijinCreateOrConnectWithoutEmployee_ijin_approvalToemployeeInput | ijinCreateOrConnectWithoutEmployee_ijin_approvalToemployeeInput[]
    upsert?: ijinUpsertWithWhereUniqueWithoutEmployee_ijin_approvalToemployeeInput | ijinUpsertWithWhereUniqueWithoutEmployee_ijin_approvalToemployeeInput[]
    createMany?: ijinCreateManyEmployee_ijin_approvalToemployeeInputEnvelope
    set?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    disconnect?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    delete?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    connect?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    update?: ijinUpdateWithWhereUniqueWithoutEmployee_ijin_approvalToemployeeInput | ijinUpdateWithWhereUniqueWithoutEmployee_ijin_approvalToemployeeInput[]
    updateMany?: ijinUpdateManyWithWhereWithoutEmployee_ijin_approvalToemployeeInput | ijinUpdateManyWithWhereWithoutEmployee_ijin_approvalToemployeeInput[]
    deleteMany?: ijinScalarWhereInput | ijinScalarWhereInput[]
  }

  export type ijinUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<ijinCreateWithoutEmployeeInput, ijinUncheckedCreateWithoutEmployeeInput> | ijinCreateWithoutEmployeeInput[] | ijinUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ijinCreateOrConnectWithoutEmployeeInput | ijinCreateOrConnectWithoutEmployeeInput[]
    upsert?: ijinUpsertWithWhereUniqueWithoutEmployeeInput | ijinUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: ijinCreateManyEmployeeInputEnvelope
    set?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    disconnect?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    delete?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    connect?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    update?: ijinUpdateWithWhereUniqueWithoutEmployeeInput | ijinUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: ijinUpdateManyWithWhereWithoutEmployeeInput | ijinUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: ijinScalarWhereInput | ijinScalarWhereInput[]
  }

  export type skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput = {
    create?: XOR<skpdCreateWithoutEmployee_skpd_createdByToemployeeInput, skpdUncheckedCreateWithoutEmployee_skpd_createdByToemployeeInput> | skpdCreateWithoutEmployee_skpd_createdByToemployeeInput[] | skpdUncheckedCreateWithoutEmployee_skpd_createdByToemployeeInput[]
    connectOrCreate?: skpdCreateOrConnectWithoutEmployee_skpd_createdByToemployeeInput | skpdCreateOrConnectWithoutEmployee_skpd_createdByToemployeeInput[]
    upsert?: skpdUpsertWithWhereUniqueWithoutEmployee_skpd_createdByToemployeeInput | skpdUpsertWithWhereUniqueWithoutEmployee_skpd_createdByToemployeeInput[]
    createMany?: skpdCreateManyEmployee_skpd_createdByToemployeeInputEnvelope
    set?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    disconnect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    delete?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    connect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    update?: skpdUpdateWithWhereUniqueWithoutEmployee_skpd_createdByToemployeeInput | skpdUpdateWithWhereUniqueWithoutEmployee_skpd_createdByToemployeeInput[]
    updateMany?: skpdUpdateManyWithWhereWithoutEmployee_skpd_createdByToemployeeInput | skpdUpdateManyWithWhereWithoutEmployee_skpd_createdByToemployeeInput[]
    deleteMany?: skpdScalarWhereInput | skpdScalarWhereInput[]
  }

  export type skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput = {
    create?: XOR<skpdCreateWithoutEmployee_skpd_payrollToemployeeInput, skpdUncheckedCreateWithoutEmployee_skpd_payrollToemployeeInput> | skpdCreateWithoutEmployee_skpd_payrollToemployeeInput[] | skpdUncheckedCreateWithoutEmployee_skpd_payrollToemployeeInput[]
    connectOrCreate?: skpdCreateOrConnectWithoutEmployee_skpd_payrollToemployeeInput | skpdCreateOrConnectWithoutEmployee_skpd_payrollToemployeeInput[]
    upsert?: skpdUpsertWithWhereUniqueWithoutEmployee_skpd_payrollToemployeeInput | skpdUpsertWithWhereUniqueWithoutEmployee_skpd_payrollToemployeeInput[]
    createMany?: skpdCreateManyEmployee_skpd_payrollToemployeeInputEnvelope
    set?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    disconnect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    delete?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    connect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    update?: skpdUpdateWithWhereUniqueWithoutEmployee_skpd_payrollToemployeeInput | skpdUpdateWithWhereUniqueWithoutEmployee_skpd_payrollToemployeeInput[]
    updateMany?: skpdUpdateManyWithWhereWithoutEmployee_skpd_payrollToemployeeInput | skpdUpdateManyWithWhereWithoutEmployee_skpd_payrollToemployeeInput[]
    deleteMany?: skpdScalarWhereInput | skpdScalarWhereInput[]
  }

  export type splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput = {
    create?: XOR<splCreateWithoutEmployee_spl_approval1ToemployeeInput, splUncheckedCreateWithoutEmployee_spl_approval1ToemployeeInput> | splCreateWithoutEmployee_spl_approval1ToemployeeInput[] | splUncheckedCreateWithoutEmployee_spl_approval1ToemployeeInput[]
    connectOrCreate?: splCreateOrConnectWithoutEmployee_spl_approval1ToemployeeInput | splCreateOrConnectWithoutEmployee_spl_approval1ToemployeeInput[]
    upsert?: splUpsertWithWhereUniqueWithoutEmployee_spl_approval1ToemployeeInput | splUpsertWithWhereUniqueWithoutEmployee_spl_approval1ToemployeeInput[]
    createMany?: splCreateManyEmployee_spl_approval1ToemployeeInputEnvelope
    set?: splWhereUniqueInput | splWhereUniqueInput[]
    disconnect?: splWhereUniqueInput | splWhereUniqueInput[]
    delete?: splWhereUniqueInput | splWhereUniqueInput[]
    connect?: splWhereUniqueInput | splWhereUniqueInput[]
    update?: splUpdateWithWhereUniqueWithoutEmployee_spl_approval1ToemployeeInput | splUpdateWithWhereUniqueWithoutEmployee_spl_approval1ToemployeeInput[]
    updateMany?: splUpdateManyWithWhereWithoutEmployee_spl_approval1ToemployeeInput | splUpdateManyWithWhereWithoutEmployee_spl_approval1ToemployeeInput[]
    deleteMany?: splScalarWhereInput | splScalarWhereInput[]
  }

  export type splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput = {
    create?: XOR<splCreateWithoutEmployee_spl_approval2ToemployeeInput, splUncheckedCreateWithoutEmployee_spl_approval2ToemployeeInput> | splCreateWithoutEmployee_spl_approval2ToemployeeInput[] | splUncheckedCreateWithoutEmployee_spl_approval2ToemployeeInput[]
    connectOrCreate?: splCreateOrConnectWithoutEmployee_spl_approval2ToemployeeInput | splCreateOrConnectWithoutEmployee_spl_approval2ToemployeeInput[]
    upsert?: splUpsertWithWhereUniqueWithoutEmployee_spl_approval2ToemployeeInput | splUpsertWithWhereUniqueWithoutEmployee_spl_approval2ToemployeeInput[]
    createMany?: splCreateManyEmployee_spl_approval2ToemployeeInputEnvelope
    set?: splWhereUniqueInput | splWhereUniqueInput[]
    disconnect?: splWhereUniqueInput | splWhereUniqueInput[]
    delete?: splWhereUniqueInput | splWhereUniqueInput[]
    connect?: splWhereUniqueInput | splWhereUniqueInput[]
    update?: splUpdateWithWhereUniqueWithoutEmployee_spl_approval2ToemployeeInput | splUpdateWithWhereUniqueWithoutEmployee_spl_approval2ToemployeeInput[]
    updateMany?: splUpdateManyWithWhereWithoutEmployee_spl_approval2ToemployeeInput | splUpdateManyWithWhereWithoutEmployee_spl_approval2ToemployeeInput[]
    deleteMany?: splScalarWhereInput | splScalarWhereInput[]
  }

  export type spl_detailUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<spl_detailCreateWithoutEmployeeInput, spl_detailUncheckedCreateWithoutEmployeeInput> | spl_detailCreateWithoutEmployeeInput[] | spl_detailUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: spl_detailCreateOrConnectWithoutEmployeeInput | spl_detailCreateOrConnectWithoutEmployeeInput[]
    upsert?: spl_detailUpsertWithWhereUniqueWithoutEmployeeInput | spl_detailUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: spl_detailCreateManyEmployeeInputEnvelope
    set?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    disconnect?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    delete?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    connect?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    update?: spl_detailUpdateWithWhereUniqueWithoutEmployeeInput | spl_detailUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: spl_detailUpdateManyWithWhereWithoutEmployeeInput | spl_detailUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: spl_detailScalarWhereInput | spl_detailScalarWhereInput[]
  }

  export type sppdUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<sppdCreateWithoutEmployeeInput, sppdUncheckedCreateWithoutEmployeeInput> | sppdCreateWithoutEmployeeInput[] | sppdUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: sppdCreateOrConnectWithoutEmployeeInput | sppdCreateOrConnectWithoutEmployeeInput[]
    upsert?: sppdUpsertWithWhereUniqueWithoutEmployeeInput | sppdUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: sppdCreateManyEmployeeInputEnvelope
    set?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    disconnect?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    delete?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    connect?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    update?: sppdUpdateWithWhereUniqueWithoutEmployeeInput | sppdUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: sppdUpdateManyWithWhereWithoutEmployeeInput | sppdUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: sppdScalarWhereInput | sppdScalarWhereInput[]
  }

  export type sppd_detailUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<sppd_detailCreateWithoutEmployeeInput, sppd_detailUncheckedCreateWithoutEmployeeInput> | sppd_detailCreateWithoutEmployeeInput[] | sppd_detailUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: sppd_detailCreateOrConnectWithoutEmployeeInput | sppd_detailCreateOrConnectWithoutEmployeeInput[]
    upsert?: sppd_detailUpsertWithWhereUniqueWithoutEmployeeInput | sppd_detailUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: sppd_detailCreateManyEmployeeInputEnvelope
    set?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    disconnect?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    delete?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    connect?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    update?: sppd_detailUpdateWithWhereUniqueWithoutEmployeeInput | sppd_detailUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: sppd_detailUpdateManyWithWhereWithoutEmployeeInput | sppd_detailUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: sppd_detailScalarWhereInput | sppd_detailScalarWhereInput[]
  }

  export type srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput = {
    create?: XOR<srlCreateWithoutEmployee_srl_approval1ToemployeeInput, srlUncheckedCreateWithoutEmployee_srl_approval1ToemployeeInput> | srlCreateWithoutEmployee_srl_approval1ToemployeeInput[] | srlUncheckedCreateWithoutEmployee_srl_approval1ToemployeeInput[]
    connectOrCreate?: srlCreateOrConnectWithoutEmployee_srl_approval1ToemployeeInput | srlCreateOrConnectWithoutEmployee_srl_approval1ToemployeeInput[]
    upsert?: srlUpsertWithWhereUniqueWithoutEmployee_srl_approval1ToemployeeInput | srlUpsertWithWhereUniqueWithoutEmployee_srl_approval1ToemployeeInput[]
    createMany?: srlCreateManyEmployee_srl_approval1ToemployeeInputEnvelope
    set?: srlWhereUniqueInput | srlWhereUniqueInput[]
    disconnect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    delete?: srlWhereUniqueInput | srlWhereUniqueInput[]
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    update?: srlUpdateWithWhereUniqueWithoutEmployee_srl_approval1ToemployeeInput | srlUpdateWithWhereUniqueWithoutEmployee_srl_approval1ToemployeeInput[]
    updateMany?: srlUpdateManyWithWhereWithoutEmployee_srl_approval1ToemployeeInput | srlUpdateManyWithWhereWithoutEmployee_srl_approval1ToemployeeInput[]
    deleteMany?: srlScalarWhereInput | srlScalarWhereInput[]
  }

  export type srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput = {
    create?: XOR<srlCreateWithoutEmployee_srl_approval2ToemployeeInput, srlUncheckedCreateWithoutEmployee_srl_approval2ToemployeeInput> | srlCreateWithoutEmployee_srl_approval2ToemployeeInput[] | srlUncheckedCreateWithoutEmployee_srl_approval2ToemployeeInput[]
    connectOrCreate?: srlCreateOrConnectWithoutEmployee_srl_approval2ToemployeeInput | srlCreateOrConnectWithoutEmployee_srl_approval2ToemployeeInput[]
    upsert?: srlUpsertWithWhereUniqueWithoutEmployee_srl_approval2ToemployeeInput | srlUpsertWithWhereUniqueWithoutEmployee_srl_approval2ToemployeeInput[]
    createMany?: srlCreateManyEmployee_srl_approval2ToemployeeInputEnvelope
    set?: srlWhereUniqueInput | srlWhereUniqueInput[]
    disconnect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    delete?: srlWhereUniqueInput | srlWhereUniqueInput[]
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    update?: srlUpdateWithWhereUniqueWithoutEmployee_srl_approval2ToemployeeInput | srlUpdateWithWhereUniqueWithoutEmployee_srl_approval2ToemployeeInput[]
    updateMany?: srlUpdateManyWithWhereWithoutEmployee_srl_approval2ToemployeeInput | srlUpdateManyWithWhereWithoutEmployee_srl_approval2ToemployeeInput[]
    deleteMany?: srlScalarWhereInput | srlScalarWhereInput[]
  }

  export type srlUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<srlCreateWithoutEmployeeInput, srlUncheckedCreateWithoutEmployeeInput> | srlCreateWithoutEmployeeInput[] | srlUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: srlCreateOrConnectWithoutEmployeeInput | srlCreateOrConnectWithoutEmployeeInput[]
    upsert?: srlUpsertWithWhereUniqueWithoutEmployeeInput | srlUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: srlCreateManyEmployeeInputEnvelope
    set?: srlWhereUniqueInput | srlWhereUniqueInput[]
    disconnect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    delete?: srlWhereUniqueInput | srlWhereUniqueInput[]
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    update?: srlUpdateWithWhereUniqueWithoutEmployeeInput | srlUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: srlUpdateManyWithWhereWithoutEmployeeInput | srlUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: srlScalarWhereInput | srlScalarWhereInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput = {
    create?: XOR<attendanceCreateWithoutEmployee_attendance_createdByToemployeeInput, attendanceUncheckedCreateWithoutEmployee_attendance_createdByToemployeeInput> | attendanceCreateWithoutEmployee_attendance_createdByToemployeeInput[] | attendanceUncheckedCreateWithoutEmployee_attendance_createdByToemployeeInput[]
    connectOrCreate?: attendanceCreateOrConnectWithoutEmployee_attendance_createdByToemployeeInput | attendanceCreateOrConnectWithoutEmployee_attendance_createdByToemployeeInput[]
    upsert?: attendanceUpsertWithWhereUniqueWithoutEmployee_attendance_createdByToemployeeInput | attendanceUpsertWithWhereUniqueWithoutEmployee_attendance_createdByToemployeeInput[]
    createMany?: attendanceCreateManyEmployee_attendance_createdByToemployeeInputEnvelope
    set?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    disconnect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    delete?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    connect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    update?: attendanceUpdateWithWhereUniqueWithoutEmployee_attendance_createdByToemployeeInput | attendanceUpdateWithWhereUniqueWithoutEmployee_attendance_createdByToemployeeInput[]
    updateMany?: attendanceUpdateManyWithWhereWithoutEmployee_attendance_createdByToemployeeInput | attendanceUpdateManyWithWhereWithoutEmployee_attendance_createdByToemployeeInput[]
    deleteMany?: attendanceScalarWhereInput | attendanceScalarWhereInput[]
  }

  export type attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput = {
    create?: XOR<attendanceCreateWithoutEmployee_attendance_user_id_machineToemployeeInput, attendanceUncheckedCreateWithoutEmployee_attendance_user_id_machineToemployeeInput> | attendanceCreateWithoutEmployee_attendance_user_id_machineToemployeeInput[] | attendanceUncheckedCreateWithoutEmployee_attendance_user_id_machineToemployeeInput[]
    connectOrCreate?: attendanceCreateOrConnectWithoutEmployee_attendance_user_id_machineToemployeeInput | attendanceCreateOrConnectWithoutEmployee_attendance_user_id_machineToemployeeInput[]
    upsert?: attendanceUpsertWithWhereUniqueWithoutEmployee_attendance_user_id_machineToemployeeInput | attendanceUpsertWithWhereUniqueWithoutEmployee_attendance_user_id_machineToemployeeInput[]
    createMany?: attendanceCreateManyEmployee_attendance_user_id_machineToemployeeInputEnvelope
    set?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    disconnect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    delete?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    connect?: attendanceWhereUniqueInput | attendanceWhereUniqueInput[]
    update?: attendanceUpdateWithWhereUniqueWithoutEmployee_attendance_user_id_machineToemployeeInput | attendanceUpdateWithWhereUniqueWithoutEmployee_attendance_user_id_machineToemployeeInput[]
    updateMany?: attendanceUpdateManyWithWhereWithoutEmployee_attendance_user_id_machineToemployeeInput | attendanceUpdateManyWithWhereWithoutEmployee_attendance_user_id_machineToemployeeInput[]
    deleteMany?: attendanceScalarWhereInput | attendanceScalarWhereInput[]
  }

  export type check_ioUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<check_ioCreateWithoutEmployeeInput, check_ioUncheckedCreateWithoutEmployeeInput> | check_ioCreateWithoutEmployeeInput[] | check_ioUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: check_ioCreateOrConnectWithoutEmployeeInput | check_ioCreateOrConnectWithoutEmployeeInput[]
    upsert?: check_ioUpsertWithWhereUniqueWithoutEmployeeInput | check_ioUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: check_ioCreateManyEmployeeInputEnvelope
    set?: check_ioWhereUniqueInput | check_ioWhereUniqueInput[]
    disconnect?: check_ioWhereUniqueInput | check_ioWhereUniqueInput[]
    delete?: check_ioWhereUniqueInput | check_ioWhereUniqueInput[]
    connect?: check_ioWhereUniqueInput | check_ioWhereUniqueInput[]
    update?: check_ioUpdateWithWhereUniqueWithoutEmployeeInput | check_ioUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: check_ioUpdateManyWithWhereWithoutEmployeeInput | check_ioUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: check_ioScalarWhereInput | check_ioScalarWhereInput[]
  }

  export type cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput = {
    create?: XOR<cutiCreateWithoutEmployee_cuti_approvalToemployeeInput, cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput> | cutiCreateWithoutEmployee_cuti_approvalToemployeeInput[] | cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput[]
    connectOrCreate?: cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput | cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput[]
    upsert?: cutiUpsertWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput | cutiUpsertWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput[]
    createMany?: cutiCreateManyEmployee_cuti_approvalToemployeeInputEnvelope
    set?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    disconnect?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    delete?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    connect?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    update?: cutiUpdateWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput | cutiUpdateWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput[]
    updateMany?: cutiUpdateManyWithWhereWithoutEmployee_cuti_approvalToemployeeInput | cutiUpdateManyWithWhereWithoutEmployee_cuti_approvalToemployeeInput[]
    deleteMany?: cutiScalarWhereInput | cutiScalarWhereInput[]
  }

  export type cutiUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<cutiCreateWithoutEmployeeInput, cutiUncheckedCreateWithoutEmployeeInput> | cutiCreateWithoutEmployeeInput[] | cutiUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: cutiCreateOrConnectWithoutEmployeeInput | cutiCreateOrConnectWithoutEmployeeInput[]
    upsert?: cutiUpsertWithWhereUniqueWithoutEmployeeInput | cutiUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: cutiCreateManyEmployeeInputEnvelope
    set?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    disconnect?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    delete?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    connect?: cutiWhereUniqueInput | cutiWhereUniqueInput[]
    update?: cutiUpdateWithWhereUniqueWithoutEmployeeInput | cutiUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: cutiUpdateManyWithWhereWithoutEmployeeInput | cutiUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: cutiScalarWhereInput | cutiScalarWhereInput[]
  }

  export type employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutEmployee_employee_approverToemployeeInput, employeeUncheckedCreateWithoutEmployee_employee_approverToemployeeInput> | employeeCreateWithoutEmployee_employee_approverToemployeeInput[] | employeeUncheckedCreateWithoutEmployee_employee_approverToemployeeInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutEmployee_employee_approverToemployeeInput | employeeCreateOrConnectWithoutEmployee_employee_approverToemployeeInput[]
    upsert?: employeeUpsertWithWhereUniqueWithoutEmployee_employee_approverToemployeeInput | employeeUpsertWithWhereUniqueWithoutEmployee_employee_approverToemployeeInput[]
    createMany?: employeeCreateManyEmployee_employee_approverToemployeeInputEnvelope
    set?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    disconnect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    delete?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    update?: employeeUpdateWithWhereUniqueWithoutEmployee_employee_approverToemployeeInput | employeeUpdateWithWhereUniqueWithoutEmployee_employee_approverToemployeeInput[]
    updateMany?: employeeUpdateManyWithWhereWithoutEmployee_employee_approverToemployeeInput | employeeUpdateManyWithWhereWithoutEmployee_employee_approverToemployeeInput[]
    deleteMany?: employeeScalarWhereInput | employeeScalarWhereInput[]
  }

  export type employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutEmployee_employee_substituteToemployeeInput, employeeUncheckedCreateWithoutEmployee_employee_substituteToemployeeInput> | employeeCreateWithoutEmployee_employee_substituteToemployeeInput[] | employeeUncheckedCreateWithoutEmployee_employee_substituteToemployeeInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutEmployee_employee_substituteToemployeeInput | employeeCreateOrConnectWithoutEmployee_employee_substituteToemployeeInput[]
    upsert?: employeeUpsertWithWhereUniqueWithoutEmployee_employee_substituteToemployeeInput | employeeUpsertWithWhereUniqueWithoutEmployee_employee_substituteToemployeeInput[]
    createMany?: employeeCreateManyEmployee_employee_substituteToemployeeInputEnvelope
    set?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    disconnect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    delete?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    update?: employeeUpdateWithWhereUniqueWithoutEmployee_employee_substituteToemployeeInput | employeeUpdateWithWhereUniqueWithoutEmployee_employee_substituteToemployeeInput[]
    updateMany?: employeeUpdateManyWithWhereWithoutEmployee_employee_substituteToemployeeInput | employeeUpdateManyWithWhereWithoutEmployee_employee_substituteToemployeeInput[]
    deleteMany?: employeeScalarWhereInput | employeeScalarWhereInput[]
  }

  export type ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput = {
    create?: XOR<ijinCreateWithoutEmployee_ijin_approvalToemployeeInput, ijinUncheckedCreateWithoutEmployee_ijin_approvalToemployeeInput> | ijinCreateWithoutEmployee_ijin_approvalToemployeeInput[] | ijinUncheckedCreateWithoutEmployee_ijin_approvalToemployeeInput[]
    connectOrCreate?: ijinCreateOrConnectWithoutEmployee_ijin_approvalToemployeeInput | ijinCreateOrConnectWithoutEmployee_ijin_approvalToemployeeInput[]
    upsert?: ijinUpsertWithWhereUniqueWithoutEmployee_ijin_approvalToemployeeInput | ijinUpsertWithWhereUniqueWithoutEmployee_ijin_approvalToemployeeInput[]
    createMany?: ijinCreateManyEmployee_ijin_approvalToemployeeInputEnvelope
    set?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    disconnect?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    delete?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    connect?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    update?: ijinUpdateWithWhereUniqueWithoutEmployee_ijin_approvalToemployeeInput | ijinUpdateWithWhereUniqueWithoutEmployee_ijin_approvalToemployeeInput[]
    updateMany?: ijinUpdateManyWithWhereWithoutEmployee_ijin_approvalToemployeeInput | ijinUpdateManyWithWhereWithoutEmployee_ijin_approvalToemployeeInput[]
    deleteMany?: ijinScalarWhereInput | ijinScalarWhereInput[]
  }

  export type ijinUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<ijinCreateWithoutEmployeeInput, ijinUncheckedCreateWithoutEmployeeInput> | ijinCreateWithoutEmployeeInput[] | ijinUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ijinCreateOrConnectWithoutEmployeeInput | ijinCreateOrConnectWithoutEmployeeInput[]
    upsert?: ijinUpsertWithWhereUniqueWithoutEmployeeInput | ijinUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: ijinCreateManyEmployeeInputEnvelope
    set?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    disconnect?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    delete?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    connect?: ijinWhereUniqueInput | ijinWhereUniqueInput[]
    update?: ijinUpdateWithWhereUniqueWithoutEmployeeInput | ijinUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: ijinUpdateManyWithWhereWithoutEmployeeInput | ijinUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: ijinScalarWhereInput | ijinScalarWhereInput[]
  }

  export type skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput = {
    create?: XOR<skpdCreateWithoutEmployee_skpd_createdByToemployeeInput, skpdUncheckedCreateWithoutEmployee_skpd_createdByToemployeeInput> | skpdCreateWithoutEmployee_skpd_createdByToemployeeInput[] | skpdUncheckedCreateWithoutEmployee_skpd_createdByToemployeeInput[]
    connectOrCreate?: skpdCreateOrConnectWithoutEmployee_skpd_createdByToemployeeInput | skpdCreateOrConnectWithoutEmployee_skpd_createdByToemployeeInput[]
    upsert?: skpdUpsertWithWhereUniqueWithoutEmployee_skpd_createdByToemployeeInput | skpdUpsertWithWhereUniqueWithoutEmployee_skpd_createdByToemployeeInput[]
    createMany?: skpdCreateManyEmployee_skpd_createdByToemployeeInputEnvelope
    set?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    disconnect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    delete?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    connect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    update?: skpdUpdateWithWhereUniqueWithoutEmployee_skpd_createdByToemployeeInput | skpdUpdateWithWhereUniqueWithoutEmployee_skpd_createdByToemployeeInput[]
    updateMany?: skpdUpdateManyWithWhereWithoutEmployee_skpd_createdByToemployeeInput | skpdUpdateManyWithWhereWithoutEmployee_skpd_createdByToemployeeInput[]
    deleteMany?: skpdScalarWhereInput | skpdScalarWhereInput[]
  }

  export type skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput = {
    create?: XOR<skpdCreateWithoutEmployee_skpd_payrollToemployeeInput, skpdUncheckedCreateWithoutEmployee_skpd_payrollToemployeeInput> | skpdCreateWithoutEmployee_skpd_payrollToemployeeInput[] | skpdUncheckedCreateWithoutEmployee_skpd_payrollToemployeeInput[]
    connectOrCreate?: skpdCreateOrConnectWithoutEmployee_skpd_payrollToemployeeInput | skpdCreateOrConnectWithoutEmployee_skpd_payrollToemployeeInput[]
    upsert?: skpdUpsertWithWhereUniqueWithoutEmployee_skpd_payrollToemployeeInput | skpdUpsertWithWhereUniqueWithoutEmployee_skpd_payrollToemployeeInput[]
    createMany?: skpdCreateManyEmployee_skpd_payrollToemployeeInputEnvelope
    set?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    disconnect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    delete?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    connect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    update?: skpdUpdateWithWhereUniqueWithoutEmployee_skpd_payrollToemployeeInput | skpdUpdateWithWhereUniqueWithoutEmployee_skpd_payrollToemployeeInput[]
    updateMany?: skpdUpdateManyWithWhereWithoutEmployee_skpd_payrollToemployeeInput | skpdUpdateManyWithWhereWithoutEmployee_skpd_payrollToemployeeInput[]
    deleteMany?: skpdScalarWhereInput | skpdScalarWhereInput[]
  }

  export type splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput = {
    create?: XOR<splCreateWithoutEmployee_spl_approval1ToemployeeInput, splUncheckedCreateWithoutEmployee_spl_approval1ToemployeeInput> | splCreateWithoutEmployee_spl_approval1ToemployeeInput[] | splUncheckedCreateWithoutEmployee_spl_approval1ToemployeeInput[]
    connectOrCreate?: splCreateOrConnectWithoutEmployee_spl_approval1ToemployeeInput | splCreateOrConnectWithoutEmployee_spl_approval1ToemployeeInput[]
    upsert?: splUpsertWithWhereUniqueWithoutEmployee_spl_approval1ToemployeeInput | splUpsertWithWhereUniqueWithoutEmployee_spl_approval1ToemployeeInput[]
    createMany?: splCreateManyEmployee_spl_approval1ToemployeeInputEnvelope
    set?: splWhereUniqueInput | splWhereUniqueInput[]
    disconnect?: splWhereUniqueInput | splWhereUniqueInput[]
    delete?: splWhereUniqueInput | splWhereUniqueInput[]
    connect?: splWhereUniqueInput | splWhereUniqueInput[]
    update?: splUpdateWithWhereUniqueWithoutEmployee_spl_approval1ToemployeeInput | splUpdateWithWhereUniqueWithoutEmployee_spl_approval1ToemployeeInput[]
    updateMany?: splUpdateManyWithWhereWithoutEmployee_spl_approval1ToemployeeInput | splUpdateManyWithWhereWithoutEmployee_spl_approval1ToemployeeInput[]
    deleteMany?: splScalarWhereInput | splScalarWhereInput[]
  }

  export type splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput = {
    create?: XOR<splCreateWithoutEmployee_spl_approval2ToemployeeInput, splUncheckedCreateWithoutEmployee_spl_approval2ToemployeeInput> | splCreateWithoutEmployee_spl_approval2ToemployeeInput[] | splUncheckedCreateWithoutEmployee_spl_approval2ToemployeeInput[]
    connectOrCreate?: splCreateOrConnectWithoutEmployee_spl_approval2ToemployeeInput | splCreateOrConnectWithoutEmployee_spl_approval2ToemployeeInput[]
    upsert?: splUpsertWithWhereUniqueWithoutEmployee_spl_approval2ToemployeeInput | splUpsertWithWhereUniqueWithoutEmployee_spl_approval2ToemployeeInput[]
    createMany?: splCreateManyEmployee_spl_approval2ToemployeeInputEnvelope
    set?: splWhereUniqueInput | splWhereUniqueInput[]
    disconnect?: splWhereUniqueInput | splWhereUniqueInput[]
    delete?: splWhereUniqueInput | splWhereUniqueInput[]
    connect?: splWhereUniqueInput | splWhereUniqueInput[]
    update?: splUpdateWithWhereUniqueWithoutEmployee_spl_approval2ToemployeeInput | splUpdateWithWhereUniqueWithoutEmployee_spl_approval2ToemployeeInput[]
    updateMany?: splUpdateManyWithWhereWithoutEmployee_spl_approval2ToemployeeInput | splUpdateManyWithWhereWithoutEmployee_spl_approval2ToemployeeInput[]
    deleteMany?: splScalarWhereInput | splScalarWhereInput[]
  }

  export type spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<spl_detailCreateWithoutEmployeeInput, spl_detailUncheckedCreateWithoutEmployeeInput> | spl_detailCreateWithoutEmployeeInput[] | spl_detailUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: spl_detailCreateOrConnectWithoutEmployeeInput | spl_detailCreateOrConnectWithoutEmployeeInput[]
    upsert?: spl_detailUpsertWithWhereUniqueWithoutEmployeeInput | spl_detailUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: spl_detailCreateManyEmployeeInputEnvelope
    set?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    disconnect?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    delete?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    connect?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    update?: spl_detailUpdateWithWhereUniqueWithoutEmployeeInput | spl_detailUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: spl_detailUpdateManyWithWhereWithoutEmployeeInput | spl_detailUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: spl_detailScalarWhereInput | spl_detailScalarWhereInput[]
  }

  export type sppdUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<sppdCreateWithoutEmployeeInput, sppdUncheckedCreateWithoutEmployeeInput> | sppdCreateWithoutEmployeeInput[] | sppdUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: sppdCreateOrConnectWithoutEmployeeInput | sppdCreateOrConnectWithoutEmployeeInput[]
    upsert?: sppdUpsertWithWhereUniqueWithoutEmployeeInput | sppdUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: sppdCreateManyEmployeeInputEnvelope
    set?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    disconnect?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    delete?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    connect?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    update?: sppdUpdateWithWhereUniqueWithoutEmployeeInput | sppdUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: sppdUpdateManyWithWhereWithoutEmployeeInput | sppdUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: sppdScalarWhereInput | sppdScalarWhereInput[]
  }

  export type sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<sppd_detailCreateWithoutEmployeeInput, sppd_detailUncheckedCreateWithoutEmployeeInput> | sppd_detailCreateWithoutEmployeeInput[] | sppd_detailUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: sppd_detailCreateOrConnectWithoutEmployeeInput | sppd_detailCreateOrConnectWithoutEmployeeInput[]
    upsert?: sppd_detailUpsertWithWhereUniqueWithoutEmployeeInput | sppd_detailUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: sppd_detailCreateManyEmployeeInputEnvelope
    set?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    disconnect?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    delete?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    connect?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    update?: sppd_detailUpdateWithWhereUniqueWithoutEmployeeInput | sppd_detailUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: sppd_detailUpdateManyWithWhereWithoutEmployeeInput | sppd_detailUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: sppd_detailScalarWhereInput | sppd_detailScalarWhereInput[]
  }

  export type srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput = {
    create?: XOR<srlCreateWithoutEmployee_srl_approval1ToemployeeInput, srlUncheckedCreateWithoutEmployee_srl_approval1ToemployeeInput> | srlCreateWithoutEmployee_srl_approval1ToemployeeInput[] | srlUncheckedCreateWithoutEmployee_srl_approval1ToemployeeInput[]
    connectOrCreate?: srlCreateOrConnectWithoutEmployee_srl_approval1ToemployeeInput | srlCreateOrConnectWithoutEmployee_srl_approval1ToemployeeInput[]
    upsert?: srlUpsertWithWhereUniqueWithoutEmployee_srl_approval1ToemployeeInput | srlUpsertWithWhereUniqueWithoutEmployee_srl_approval1ToemployeeInput[]
    createMany?: srlCreateManyEmployee_srl_approval1ToemployeeInputEnvelope
    set?: srlWhereUniqueInput | srlWhereUniqueInput[]
    disconnect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    delete?: srlWhereUniqueInput | srlWhereUniqueInput[]
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    update?: srlUpdateWithWhereUniqueWithoutEmployee_srl_approval1ToemployeeInput | srlUpdateWithWhereUniqueWithoutEmployee_srl_approval1ToemployeeInput[]
    updateMany?: srlUpdateManyWithWhereWithoutEmployee_srl_approval1ToemployeeInput | srlUpdateManyWithWhereWithoutEmployee_srl_approval1ToemployeeInput[]
    deleteMany?: srlScalarWhereInput | srlScalarWhereInput[]
  }

  export type srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput = {
    create?: XOR<srlCreateWithoutEmployee_srl_approval2ToemployeeInput, srlUncheckedCreateWithoutEmployee_srl_approval2ToemployeeInput> | srlCreateWithoutEmployee_srl_approval2ToemployeeInput[] | srlUncheckedCreateWithoutEmployee_srl_approval2ToemployeeInput[]
    connectOrCreate?: srlCreateOrConnectWithoutEmployee_srl_approval2ToemployeeInput | srlCreateOrConnectWithoutEmployee_srl_approval2ToemployeeInput[]
    upsert?: srlUpsertWithWhereUniqueWithoutEmployee_srl_approval2ToemployeeInput | srlUpsertWithWhereUniqueWithoutEmployee_srl_approval2ToemployeeInput[]
    createMany?: srlCreateManyEmployee_srl_approval2ToemployeeInputEnvelope
    set?: srlWhereUniqueInput | srlWhereUniqueInput[]
    disconnect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    delete?: srlWhereUniqueInput | srlWhereUniqueInput[]
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    update?: srlUpdateWithWhereUniqueWithoutEmployee_srl_approval2ToemployeeInput | srlUpdateWithWhereUniqueWithoutEmployee_srl_approval2ToemployeeInput[]
    updateMany?: srlUpdateManyWithWhereWithoutEmployee_srl_approval2ToemployeeInput | srlUpdateManyWithWhereWithoutEmployee_srl_approval2ToemployeeInput[]
    deleteMany?: srlScalarWhereInput | srlScalarWhereInput[]
  }

  export type srlUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<srlCreateWithoutEmployeeInput, srlUncheckedCreateWithoutEmployeeInput> | srlCreateWithoutEmployeeInput[] | srlUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: srlCreateOrConnectWithoutEmployeeInput | srlCreateOrConnectWithoutEmployeeInput[]
    upsert?: srlUpsertWithWhereUniqueWithoutEmployeeInput | srlUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: srlCreateManyEmployeeInputEnvelope
    set?: srlWhereUniqueInput | srlWhereUniqueInput[]
    disconnect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    delete?: srlWhereUniqueInput | srlWhereUniqueInput[]
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    update?: srlUpdateWithWhereUniqueWithoutEmployeeInput | srlUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: srlUpdateManyWithWhereWithoutEmployeeInput | srlUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: srlScalarWhereInput | srlScalarWhereInput[]
  }

  export type employeeCreateNestedManyWithoutProfileInput = {
    create?: XOR<employeeCreateWithoutProfileInput, employeeUncheckedCreateWithoutProfileInput> | employeeCreateWithoutProfileInput[] | employeeUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutProfileInput | employeeCreateOrConnectWithoutProfileInput[]
    createMany?: employeeCreateManyProfileInputEnvelope
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
  }

  export type employeeUncheckedCreateNestedManyWithoutProfileInput = {
    create?: XOR<employeeCreateWithoutProfileInput, employeeUncheckedCreateWithoutProfileInput> | employeeCreateWithoutProfileInput[] | employeeUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutProfileInput | employeeCreateOrConnectWithoutProfileInput[]
    createMany?: employeeCreateManyProfileInputEnvelope
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type employeeUpdateManyWithoutProfileNestedInput = {
    create?: XOR<employeeCreateWithoutProfileInput, employeeUncheckedCreateWithoutProfileInput> | employeeCreateWithoutProfileInput[] | employeeUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutProfileInput | employeeCreateOrConnectWithoutProfileInput[]
    upsert?: employeeUpsertWithWhereUniqueWithoutProfileInput | employeeUpsertWithWhereUniqueWithoutProfileInput[]
    createMany?: employeeCreateManyProfileInputEnvelope
    set?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    disconnect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    delete?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    update?: employeeUpdateWithWhereUniqueWithoutProfileInput | employeeUpdateWithWhereUniqueWithoutProfileInput[]
    updateMany?: employeeUpdateManyWithWhereWithoutProfileInput | employeeUpdateManyWithWhereWithoutProfileInput[]
    deleteMany?: employeeScalarWhereInput | employeeScalarWhereInput[]
  }

  export type employeeUncheckedUpdateManyWithoutProfileNestedInput = {
    create?: XOR<employeeCreateWithoutProfileInput, employeeUncheckedCreateWithoutProfileInput> | employeeCreateWithoutProfileInput[] | employeeUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutProfileInput | employeeCreateOrConnectWithoutProfileInput[]
    upsert?: employeeUpsertWithWhereUniqueWithoutProfileInput | employeeUpsertWithWhereUniqueWithoutProfileInput[]
    createMany?: employeeCreateManyProfileInputEnvelope
    set?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    disconnect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    delete?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    update?: employeeUpdateWithWhereUniqueWithoutProfileInput | employeeUpdateWithWhereUniqueWithoutProfileInput[]
    updateMany?: employeeUpdateManyWithWhereWithoutProfileInput | employeeUpdateManyWithWhereWithoutProfileInput[]
    deleteMany?: employeeScalarWhereInput | employeeScalarWhereInput[]
  }

  export type employeeCreateNestedOneWithoutCheck_ioInput = {
    create?: XOR<employeeCreateWithoutCheck_ioInput, employeeUncheckedCreateWithoutCheck_ioInput>
    connectOrCreate?: employeeCreateOrConnectWithoutCheck_ioInput
    connect?: employeeWhereUniqueInput
  }

  export type employeeUpdateOneWithoutCheck_ioNestedInput = {
    create?: XOR<employeeCreateWithoutCheck_ioInput, employeeUncheckedCreateWithoutCheck_ioInput>
    connectOrCreate?: employeeCreateOrConnectWithoutCheck_ioInput
    upsert?: employeeUpsertWithoutCheck_ioInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutCheck_ioInput, employeeUpdateWithoutCheck_ioInput>, employeeUncheckedUpdateWithoutCheck_ioInput>
  }

  export type employeeCreateNestedOneWithoutAttendance_attendance_createdByToemployeeInput = {
    create?: XOR<employeeCreateWithoutAttendance_attendance_createdByToemployeeInput, employeeUncheckedCreateWithoutAttendance_attendance_createdByToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutAttendance_attendance_createdByToemployeeInput
    connect?: employeeWhereUniqueInput
  }

  export type employeeCreateNestedOneWithoutAttendance_attendance_user_id_machineToemployeeInput = {
    create?: XOR<employeeCreateWithoutAttendance_attendance_user_id_machineToemployeeInput, employeeUncheckedCreateWithoutAttendance_attendance_user_id_machineToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutAttendance_attendance_user_id_machineToemployeeInput
    connect?: employeeWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type employeeUpdateOneWithoutAttendance_attendance_createdByToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutAttendance_attendance_createdByToemployeeInput, employeeUncheckedCreateWithoutAttendance_attendance_createdByToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutAttendance_attendance_createdByToemployeeInput
    upsert?: employeeUpsertWithoutAttendance_attendance_createdByToemployeeInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutAttendance_attendance_createdByToemployeeInput, employeeUpdateWithoutAttendance_attendance_createdByToemployeeInput>, employeeUncheckedUpdateWithoutAttendance_attendance_createdByToemployeeInput>
  }

  export type employeeUpdateOneWithoutAttendance_attendance_user_id_machineToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutAttendance_attendance_user_id_machineToemployeeInput, employeeUncheckedCreateWithoutAttendance_attendance_user_id_machineToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutAttendance_attendance_user_id_machineToemployeeInput
    upsert?: employeeUpsertWithoutAttendance_attendance_user_id_machineToemployeeInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutAttendance_attendance_user_id_machineToemployeeInput, employeeUpdateWithoutAttendance_attendance_user_id_machineToemployeeInput>, employeeUncheckedUpdateWithoutAttendance_attendance_user_id_machineToemployeeInput>
  }

  export type NullableEnumcalendar_typeFieldUpdateOperationsInput = {
    set?: $Enums.calendar_type | null
  }

  export type employeeCreateNestedOneWithoutSpl_spl_approval1ToemployeeInput = {
    create?: XOR<employeeCreateWithoutSpl_spl_approval1ToemployeeInput, employeeUncheckedCreateWithoutSpl_spl_approval1ToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSpl_spl_approval1ToemployeeInput
    connect?: employeeWhereUniqueInput
  }

  export type employeeCreateNestedOneWithoutSpl_spl_approval2ToemployeeInput = {
    create?: XOR<employeeCreateWithoutSpl_spl_approval2ToemployeeInput, employeeUncheckedCreateWithoutSpl_spl_approval2ToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSpl_spl_approval2ToemployeeInput
    connect?: employeeWhereUniqueInput
  }

  export type spl_detailCreateNestedManyWithoutSplInput = {
    create?: XOR<spl_detailCreateWithoutSplInput, spl_detailUncheckedCreateWithoutSplInput> | spl_detailCreateWithoutSplInput[] | spl_detailUncheckedCreateWithoutSplInput[]
    connectOrCreate?: spl_detailCreateOrConnectWithoutSplInput | spl_detailCreateOrConnectWithoutSplInput[]
    createMany?: spl_detailCreateManySplInputEnvelope
    connect?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
  }

  export type srlCreateNestedManyWithoutSplInput = {
    create?: XOR<srlCreateWithoutSplInput, srlUncheckedCreateWithoutSplInput> | srlCreateWithoutSplInput[] | srlUncheckedCreateWithoutSplInput[]
    connectOrCreate?: srlCreateOrConnectWithoutSplInput | srlCreateOrConnectWithoutSplInput[]
    createMany?: srlCreateManySplInputEnvelope
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
  }

  export type spl_detailUncheckedCreateNestedManyWithoutSplInput = {
    create?: XOR<spl_detailCreateWithoutSplInput, spl_detailUncheckedCreateWithoutSplInput> | spl_detailCreateWithoutSplInput[] | spl_detailUncheckedCreateWithoutSplInput[]
    connectOrCreate?: spl_detailCreateOrConnectWithoutSplInput | spl_detailCreateOrConnectWithoutSplInput[]
    createMany?: spl_detailCreateManySplInputEnvelope
    connect?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
  }

  export type srlUncheckedCreateNestedManyWithoutSplInput = {
    create?: XOR<srlCreateWithoutSplInput, srlUncheckedCreateWithoutSplInput> | srlCreateWithoutSplInput[] | srlUncheckedCreateWithoutSplInput[]
    connectOrCreate?: srlCreateOrConnectWithoutSplInput | srlCreateOrConnectWithoutSplInput[]
    createMany?: srlCreateManySplInputEnvelope
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
  }

  export type Enumspl_status1FieldUpdateOperationsInput = {
    set?: $Enums.spl_status1
  }

  export type Enumspl_status2FieldUpdateOperationsInput = {
    set?: $Enums.spl_status2
  }

  export type employeeUpdateOneWithoutSpl_spl_approval1ToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutSpl_spl_approval1ToemployeeInput, employeeUncheckedCreateWithoutSpl_spl_approval1ToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSpl_spl_approval1ToemployeeInput
    upsert?: employeeUpsertWithoutSpl_spl_approval1ToemployeeInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutSpl_spl_approval1ToemployeeInput, employeeUpdateWithoutSpl_spl_approval1ToemployeeInput>, employeeUncheckedUpdateWithoutSpl_spl_approval1ToemployeeInput>
  }

  export type employeeUpdateOneWithoutSpl_spl_approval2ToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutSpl_spl_approval2ToemployeeInput, employeeUncheckedCreateWithoutSpl_spl_approval2ToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSpl_spl_approval2ToemployeeInput
    upsert?: employeeUpsertWithoutSpl_spl_approval2ToemployeeInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutSpl_spl_approval2ToemployeeInput, employeeUpdateWithoutSpl_spl_approval2ToemployeeInput>, employeeUncheckedUpdateWithoutSpl_spl_approval2ToemployeeInput>
  }

  export type spl_detailUpdateManyWithoutSplNestedInput = {
    create?: XOR<spl_detailCreateWithoutSplInput, spl_detailUncheckedCreateWithoutSplInput> | spl_detailCreateWithoutSplInput[] | spl_detailUncheckedCreateWithoutSplInput[]
    connectOrCreate?: spl_detailCreateOrConnectWithoutSplInput | spl_detailCreateOrConnectWithoutSplInput[]
    upsert?: spl_detailUpsertWithWhereUniqueWithoutSplInput | spl_detailUpsertWithWhereUniqueWithoutSplInput[]
    createMany?: spl_detailCreateManySplInputEnvelope
    set?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    disconnect?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    delete?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    connect?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    update?: spl_detailUpdateWithWhereUniqueWithoutSplInput | spl_detailUpdateWithWhereUniqueWithoutSplInput[]
    updateMany?: spl_detailUpdateManyWithWhereWithoutSplInput | spl_detailUpdateManyWithWhereWithoutSplInput[]
    deleteMany?: spl_detailScalarWhereInput | spl_detailScalarWhereInput[]
  }

  export type srlUpdateManyWithoutSplNestedInput = {
    create?: XOR<srlCreateWithoutSplInput, srlUncheckedCreateWithoutSplInput> | srlCreateWithoutSplInput[] | srlUncheckedCreateWithoutSplInput[]
    connectOrCreate?: srlCreateOrConnectWithoutSplInput | srlCreateOrConnectWithoutSplInput[]
    upsert?: srlUpsertWithWhereUniqueWithoutSplInput | srlUpsertWithWhereUniqueWithoutSplInput[]
    createMany?: srlCreateManySplInputEnvelope
    set?: srlWhereUniqueInput | srlWhereUniqueInput[]
    disconnect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    delete?: srlWhereUniqueInput | srlWhereUniqueInput[]
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    update?: srlUpdateWithWhereUniqueWithoutSplInput | srlUpdateWithWhereUniqueWithoutSplInput[]
    updateMany?: srlUpdateManyWithWhereWithoutSplInput | srlUpdateManyWithWhereWithoutSplInput[]
    deleteMany?: srlScalarWhereInput | srlScalarWhereInput[]
  }

  export type spl_detailUncheckedUpdateManyWithoutSplNestedInput = {
    create?: XOR<spl_detailCreateWithoutSplInput, spl_detailUncheckedCreateWithoutSplInput> | spl_detailCreateWithoutSplInput[] | spl_detailUncheckedCreateWithoutSplInput[]
    connectOrCreate?: spl_detailCreateOrConnectWithoutSplInput | spl_detailCreateOrConnectWithoutSplInput[]
    upsert?: spl_detailUpsertWithWhereUniqueWithoutSplInput | spl_detailUpsertWithWhereUniqueWithoutSplInput[]
    createMany?: spl_detailCreateManySplInputEnvelope
    set?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    disconnect?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    delete?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    connect?: spl_detailWhereUniqueInput | spl_detailWhereUniqueInput[]
    update?: spl_detailUpdateWithWhereUniqueWithoutSplInput | spl_detailUpdateWithWhereUniqueWithoutSplInput[]
    updateMany?: spl_detailUpdateManyWithWhereWithoutSplInput | spl_detailUpdateManyWithWhereWithoutSplInput[]
    deleteMany?: spl_detailScalarWhereInput | spl_detailScalarWhereInput[]
  }

  export type srlUncheckedUpdateManyWithoutSplNestedInput = {
    create?: XOR<srlCreateWithoutSplInput, srlUncheckedCreateWithoutSplInput> | srlCreateWithoutSplInput[] | srlUncheckedCreateWithoutSplInput[]
    connectOrCreate?: srlCreateOrConnectWithoutSplInput | srlCreateOrConnectWithoutSplInput[]
    upsert?: srlUpsertWithWhereUniqueWithoutSplInput | srlUpsertWithWhereUniqueWithoutSplInput[]
    createMany?: srlCreateManySplInputEnvelope
    set?: srlWhereUniqueInput | srlWhereUniqueInput[]
    disconnect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    delete?: srlWhereUniqueInput | srlWhereUniqueInput[]
    connect?: srlWhereUniqueInput | srlWhereUniqueInput[]
    update?: srlUpdateWithWhereUniqueWithoutSplInput | srlUpdateWithWhereUniqueWithoutSplInput[]
    updateMany?: srlUpdateManyWithWhereWithoutSplInput | srlUpdateManyWithWhereWithoutSplInput[]
    deleteMany?: srlScalarWhereInput | srlScalarWhereInput[]
  }

  export type employeeCreateNestedOneWithoutSpl_detailInput = {
    create?: XOR<employeeCreateWithoutSpl_detailInput, employeeUncheckedCreateWithoutSpl_detailInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSpl_detailInput
    connect?: employeeWhereUniqueInput
  }

  export type splCreateNestedOneWithoutSpl_detailInput = {
    create?: XOR<splCreateWithoutSpl_detailInput, splUncheckedCreateWithoutSpl_detailInput>
    connectOrCreate?: splCreateOrConnectWithoutSpl_detailInput
    connect?: splWhereUniqueInput
  }

  export type employeeUpdateOneWithoutSpl_detailNestedInput = {
    create?: XOR<employeeCreateWithoutSpl_detailInput, employeeUncheckedCreateWithoutSpl_detailInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSpl_detailInput
    upsert?: employeeUpsertWithoutSpl_detailInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutSpl_detailInput, employeeUpdateWithoutSpl_detailInput>, employeeUncheckedUpdateWithoutSpl_detailInput>
  }

  export type splUpdateOneRequiredWithoutSpl_detailNestedInput = {
    create?: XOR<splCreateWithoutSpl_detailInput, splUncheckedCreateWithoutSpl_detailInput>
    connectOrCreate?: splCreateOrConnectWithoutSpl_detailInput
    upsert?: splUpsertWithoutSpl_detailInput
    connect?: splWhereUniqueInput
    update?: XOR<XOR<splUpdateToOneWithWhereWithoutSpl_detailInput, splUpdateWithoutSpl_detailInput>, splUncheckedUpdateWithoutSpl_detailInput>
  }

  export type employeeCreateNestedManyWithoutDeptInput = {
    create?: XOR<employeeCreateWithoutDeptInput, employeeUncheckedCreateWithoutDeptInput> | employeeCreateWithoutDeptInput[] | employeeUncheckedCreateWithoutDeptInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutDeptInput | employeeCreateOrConnectWithoutDeptInput[]
    createMany?: employeeCreateManyDeptInputEnvelope
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
  }

  export type sppdCreateNestedManyWithoutDept_sppd_deptTodeptInput = {
    create?: XOR<sppdCreateWithoutDept_sppd_deptTodeptInput, sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput> | sppdCreateWithoutDept_sppd_deptTodeptInput[] | sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput[]
    connectOrCreate?: sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput | sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput[]
    createMany?: sppdCreateManyDept_sppd_deptTodeptInputEnvelope
    connect?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
  }

  export type employeeUncheckedCreateNestedManyWithoutDeptInput = {
    create?: XOR<employeeCreateWithoutDeptInput, employeeUncheckedCreateWithoutDeptInput> | employeeCreateWithoutDeptInput[] | employeeUncheckedCreateWithoutDeptInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutDeptInput | employeeCreateOrConnectWithoutDeptInput[]
    createMany?: employeeCreateManyDeptInputEnvelope
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
  }

  export type sppdUncheckedCreateNestedManyWithoutDept_sppd_deptTodeptInput = {
    create?: XOR<sppdCreateWithoutDept_sppd_deptTodeptInput, sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput> | sppdCreateWithoutDept_sppd_deptTodeptInput[] | sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput[]
    connectOrCreate?: sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput | sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput[]
    createMany?: sppdCreateManyDept_sppd_deptTodeptInputEnvelope
    connect?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
  }

  export type Enumdept_statusFieldUpdateOperationsInput = {
    set?: $Enums.dept_status
  }

  export type employeeUpdateManyWithoutDeptNestedInput = {
    create?: XOR<employeeCreateWithoutDeptInput, employeeUncheckedCreateWithoutDeptInput> | employeeCreateWithoutDeptInput[] | employeeUncheckedCreateWithoutDeptInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutDeptInput | employeeCreateOrConnectWithoutDeptInput[]
    upsert?: employeeUpsertWithWhereUniqueWithoutDeptInput | employeeUpsertWithWhereUniqueWithoutDeptInput[]
    createMany?: employeeCreateManyDeptInputEnvelope
    set?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    disconnect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    delete?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    update?: employeeUpdateWithWhereUniqueWithoutDeptInput | employeeUpdateWithWhereUniqueWithoutDeptInput[]
    updateMany?: employeeUpdateManyWithWhereWithoutDeptInput | employeeUpdateManyWithWhereWithoutDeptInput[]
    deleteMany?: employeeScalarWhereInput | employeeScalarWhereInput[]
  }

  export type sppdUpdateManyWithoutDept_sppd_deptTodeptNestedInput = {
    create?: XOR<sppdCreateWithoutDept_sppd_deptTodeptInput, sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput> | sppdCreateWithoutDept_sppd_deptTodeptInput[] | sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput[]
    connectOrCreate?: sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput | sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput[]
    upsert?: sppdUpsertWithWhereUniqueWithoutDept_sppd_deptTodeptInput | sppdUpsertWithWhereUniqueWithoutDept_sppd_deptTodeptInput[]
    createMany?: sppdCreateManyDept_sppd_deptTodeptInputEnvelope
    set?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    disconnect?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    delete?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    connect?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    update?: sppdUpdateWithWhereUniqueWithoutDept_sppd_deptTodeptInput | sppdUpdateWithWhereUniqueWithoutDept_sppd_deptTodeptInput[]
    updateMany?: sppdUpdateManyWithWhereWithoutDept_sppd_deptTodeptInput | sppdUpdateManyWithWhereWithoutDept_sppd_deptTodeptInput[]
    deleteMany?: sppdScalarWhereInput | sppdScalarWhereInput[]
  }

  export type employeeUncheckedUpdateManyWithoutDeptNestedInput = {
    create?: XOR<employeeCreateWithoutDeptInput, employeeUncheckedCreateWithoutDeptInput> | employeeCreateWithoutDeptInput[] | employeeUncheckedCreateWithoutDeptInput[]
    connectOrCreate?: employeeCreateOrConnectWithoutDeptInput | employeeCreateOrConnectWithoutDeptInput[]
    upsert?: employeeUpsertWithWhereUniqueWithoutDeptInput | employeeUpsertWithWhereUniqueWithoutDeptInput[]
    createMany?: employeeCreateManyDeptInputEnvelope
    set?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    disconnect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    delete?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    connect?: employeeWhereUniqueInput | employeeWhereUniqueInput[]
    update?: employeeUpdateWithWhereUniqueWithoutDeptInput | employeeUpdateWithWhereUniqueWithoutDeptInput[]
    updateMany?: employeeUpdateManyWithWhereWithoutDeptInput | employeeUpdateManyWithWhereWithoutDeptInput[]
    deleteMany?: employeeScalarWhereInput | employeeScalarWhereInput[]
  }

  export type sppdUncheckedUpdateManyWithoutDept_sppd_deptTodeptNestedInput = {
    create?: XOR<sppdCreateWithoutDept_sppd_deptTodeptInput, sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput> | sppdCreateWithoutDept_sppd_deptTodeptInput[] | sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput[]
    connectOrCreate?: sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput | sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput[]
    upsert?: sppdUpsertWithWhereUniqueWithoutDept_sppd_deptTodeptInput | sppdUpsertWithWhereUniqueWithoutDept_sppd_deptTodeptInput[]
    createMany?: sppdCreateManyDept_sppd_deptTodeptInputEnvelope
    set?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    disconnect?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    delete?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    connect?: sppdWhereUniqueInput | sppdWhereUniqueInput[]
    update?: sppdUpdateWithWhereUniqueWithoutDept_sppd_deptTodeptInput | sppdUpdateWithWhereUniqueWithoutDept_sppd_deptTodeptInput[]
    updateMany?: sppdUpdateManyWithWhereWithoutDept_sppd_deptTodeptInput | sppdUpdateManyWithWhereWithoutDept_sppd_deptTodeptInput[]
    deleteMany?: sppdScalarWhereInput | sppdScalarWhereInput[]
  }

  export type employeeCreateNestedOneWithoutSrl_srl_approval1ToemployeeInput = {
    create?: XOR<employeeCreateWithoutSrl_srl_approval1ToemployeeInput, employeeUncheckedCreateWithoutSrl_srl_approval1ToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSrl_srl_approval1ToemployeeInput
    connect?: employeeWhereUniqueInput
  }

  export type employeeCreateNestedOneWithoutSrl_srl_approval2ToemployeeInput = {
    create?: XOR<employeeCreateWithoutSrl_srl_approval2ToemployeeInput, employeeUncheckedCreateWithoutSrl_srl_approval2ToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSrl_srl_approval2ToemployeeInput
    connect?: employeeWhereUniqueInput
  }

  export type employeeCreateNestedOneWithoutSrlInput = {
    create?: XOR<employeeCreateWithoutSrlInput, employeeUncheckedCreateWithoutSrlInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSrlInput
    connect?: employeeWhereUniqueInput
  }

  export type splCreateNestedOneWithoutSrlInput = {
    create?: XOR<splCreateWithoutSrlInput, splUncheckedCreateWithoutSrlInput>
    connectOrCreate?: splCreateOrConnectWithoutSrlInput
    connect?: splWhereUniqueInput
  }

  export type srl_detailCreateNestedManyWithoutSrlInput = {
    create?: XOR<srl_detailCreateWithoutSrlInput, srl_detailUncheckedCreateWithoutSrlInput> | srl_detailCreateWithoutSrlInput[] | srl_detailUncheckedCreateWithoutSrlInput[]
    connectOrCreate?: srl_detailCreateOrConnectWithoutSrlInput | srl_detailCreateOrConnectWithoutSrlInput[]
    createMany?: srl_detailCreateManySrlInputEnvelope
    connect?: srl_detailWhereUniqueInput | srl_detailWhereUniqueInput[]
  }

  export type srl_detailUncheckedCreateNestedManyWithoutSrlInput = {
    create?: XOR<srl_detailCreateWithoutSrlInput, srl_detailUncheckedCreateWithoutSrlInput> | srl_detailCreateWithoutSrlInput[] | srl_detailUncheckedCreateWithoutSrlInput[]
    connectOrCreate?: srl_detailCreateOrConnectWithoutSrlInput | srl_detailCreateOrConnectWithoutSrlInput[]
    createMany?: srl_detailCreateManySrlInputEnvelope
    connect?: srl_detailWhereUniqueInput | srl_detailWhereUniqueInput[]
  }

  export type Enumsrl_status1FieldUpdateOperationsInput = {
    set?: $Enums.srl_status1
  }

  export type Enumsrl_status2FieldUpdateOperationsInput = {
    set?: $Enums.srl_status2
  }

  export type employeeUpdateOneWithoutSrl_srl_approval1ToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutSrl_srl_approval1ToemployeeInput, employeeUncheckedCreateWithoutSrl_srl_approval1ToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSrl_srl_approval1ToemployeeInput
    upsert?: employeeUpsertWithoutSrl_srl_approval1ToemployeeInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutSrl_srl_approval1ToemployeeInput, employeeUpdateWithoutSrl_srl_approval1ToemployeeInput>, employeeUncheckedUpdateWithoutSrl_srl_approval1ToemployeeInput>
  }

  export type employeeUpdateOneWithoutSrl_srl_approval2ToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutSrl_srl_approval2ToemployeeInput, employeeUncheckedCreateWithoutSrl_srl_approval2ToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSrl_srl_approval2ToemployeeInput
    upsert?: employeeUpsertWithoutSrl_srl_approval2ToemployeeInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutSrl_srl_approval2ToemployeeInput, employeeUpdateWithoutSrl_srl_approval2ToemployeeInput>, employeeUncheckedUpdateWithoutSrl_srl_approval2ToemployeeInput>
  }

  export type employeeUpdateOneWithoutSrlNestedInput = {
    create?: XOR<employeeCreateWithoutSrlInput, employeeUncheckedCreateWithoutSrlInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSrlInput
    upsert?: employeeUpsertWithoutSrlInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutSrlInput, employeeUpdateWithoutSrlInput>, employeeUncheckedUpdateWithoutSrlInput>
  }

  export type splUpdateOneWithoutSrlNestedInput = {
    create?: XOR<splCreateWithoutSrlInput, splUncheckedCreateWithoutSrlInput>
    connectOrCreate?: splCreateOrConnectWithoutSrlInput
    upsert?: splUpsertWithoutSrlInput
    disconnect?: splWhereInput | boolean
    delete?: splWhereInput | boolean
    connect?: splWhereUniqueInput
    update?: XOR<XOR<splUpdateToOneWithWhereWithoutSrlInput, splUpdateWithoutSrlInput>, splUncheckedUpdateWithoutSrlInput>
  }

  export type srl_detailUpdateManyWithoutSrlNestedInput = {
    create?: XOR<srl_detailCreateWithoutSrlInput, srl_detailUncheckedCreateWithoutSrlInput> | srl_detailCreateWithoutSrlInput[] | srl_detailUncheckedCreateWithoutSrlInput[]
    connectOrCreate?: srl_detailCreateOrConnectWithoutSrlInput | srl_detailCreateOrConnectWithoutSrlInput[]
    upsert?: srl_detailUpsertWithWhereUniqueWithoutSrlInput | srl_detailUpsertWithWhereUniqueWithoutSrlInput[]
    createMany?: srl_detailCreateManySrlInputEnvelope
    set?: srl_detailWhereUniqueInput | srl_detailWhereUniqueInput[]
    disconnect?: srl_detailWhereUniqueInput | srl_detailWhereUniqueInput[]
    delete?: srl_detailWhereUniqueInput | srl_detailWhereUniqueInput[]
    connect?: srl_detailWhereUniqueInput | srl_detailWhereUniqueInput[]
    update?: srl_detailUpdateWithWhereUniqueWithoutSrlInput | srl_detailUpdateWithWhereUniqueWithoutSrlInput[]
    updateMany?: srl_detailUpdateManyWithWhereWithoutSrlInput | srl_detailUpdateManyWithWhereWithoutSrlInput[]
    deleteMany?: srl_detailScalarWhereInput | srl_detailScalarWhereInput[]
  }

  export type srl_detailUncheckedUpdateManyWithoutSrlNestedInput = {
    create?: XOR<srl_detailCreateWithoutSrlInput, srl_detailUncheckedCreateWithoutSrlInput> | srl_detailCreateWithoutSrlInput[] | srl_detailUncheckedCreateWithoutSrlInput[]
    connectOrCreate?: srl_detailCreateOrConnectWithoutSrlInput | srl_detailCreateOrConnectWithoutSrlInput[]
    upsert?: srl_detailUpsertWithWhereUniqueWithoutSrlInput | srl_detailUpsertWithWhereUniqueWithoutSrlInput[]
    createMany?: srl_detailCreateManySrlInputEnvelope
    set?: srl_detailWhereUniqueInput | srl_detailWhereUniqueInput[]
    disconnect?: srl_detailWhereUniqueInput | srl_detailWhereUniqueInput[]
    delete?: srl_detailWhereUniqueInput | srl_detailWhereUniqueInput[]
    connect?: srl_detailWhereUniqueInput | srl_detailWhereUniqueInput[]
    update?: srl_detailUpdateWithWhereUniqueWithoutSrlInput | srl_detailUpdateWithWhereUniqueWithoutSrlInput[]
    updateMany?: srl_detailUpdateManyWithWhereWithoutSrlInput | srl_detailUpdateManyWithWhereWithoutSrlInput[]
    deleteMany?: srl_detailScalarWhereInput | srl_detailScalarWhereInput[]
  }

  export type srlCreateNestedOneWithoutSrl_detailInput = {
    create?: XOR<srlCreateWithoutSrl_detailInput, srlUncheckedCreateWithoutSrl_detailInput>
    connectOrCreate?: srlCreateOrConnectWithoutSrl_detailInput
    connect?: srlWhereUniqueInput
  }

  export type srlUpdateOneWithoutSrl_detailNestedInput = {
    create?: XOR<srlCreateWithoutSrl_detailInput, srlUncheckedCreateWithoutSrl_detailInput>
    connectOrCreate?: srlCreateOrConnectWithoutSrl_detailInput
    upsert?: srlUpsertWithoutSrl_detailInput
    disconnect?: srlWhereInput | boolean
    delete?: srlWhereInput | boolean
    connect?: srlWhereUniqueInput
    update?: XOR<XOR<srlUpdateToOneWithWhereWithoutSrl_detailInput, srlUpdateWithoutSrl_detailInput>, srlUncheckedUpdateWithoutSrl_detailInput>
  }

  export type employeeCreateNestedOneWithoutCuti_cuti_approvalToemployeeInput = {
    create?: XOR<employeeCreateWithoutCuti_cuti_approvalToemployeeInput, employeeUncheckedCreateWithoutCuti_cuti_approvalToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutCuti_cuti_approvalToemployeeInput
    connect?: employeeWhereUniqueInput
  }

  export type employeeCreateNestedOneWithoutCutiInput = {
    create?: XOR<employeeCreateWithoutCutiInput, employeeUncheckedCreateWithoutCutiInput>
    connectOrCreate?: employeeCreateOrConnectWithoutCutiInput
    connect?: employeeWhereUniqueInput
  }

  export type Enumcuti_statusFieldUpdateOperationsInput = {
    set?: $Enums.cuti_status
  }

  export type employeeUpdateOneWithoutCuti_cuti_approvalToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutCuti_cuti_approvalToemployeeInput, employeeUncheckedCreateWithoutCuti_cuti_approvalToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutCuti_cuti_approvalToemployeeInput
    upsert?: employeeUpsertWithoutCuti_cuti_approvalToemployeeInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutCuti_cuti_approvalToemployeeInput, employeeUpdateWithoutCuti_cuti_approvalToemployeeInput>, employeeUncheckedUpdateWithoutCuti_cuti_approvalToemployeeInput>
  }

  export type employeeUpdateOneWithoutCutiNestedInput = {
    create?: XOR<employeeCreateWithoutCutiInput, employeeUncheckedCreateWithoutCutiInput>
    connectOrCreate?: employeeCreateOrConnectWithoutCutiInput
    upsert?: employeeUpsertWithoutCutiInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutCutiInput, employeeUpdateWithoutCutiInput>, employeeUncheckedUpdateWithoutCutiInput>
  }

  export type skpdCreateNestedManyWithoutSppdInput = {
    create?: XOR<skpdCreateWithoutSppdInput, skpdUncheckedCreateWithoutSppdInput> | skpdCreateWithoutSppdInput[] | skpdUncheckedCreateWithoutSppdInput[]
    connectOrCreate?: skpdCreateOrConnectWithoutSppdInput | skpdCreateOrConnectWithoutSppdInput[]
    createMany?: skpdCreateManySppdInputEnvelope
    connect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
  }

  export type employeeCreateNestedOneWithoutSppdInput = {
    create?: XOR<employeeCreateWithoutSppdInput, employeeUncheckedCreateWithoutSppdInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSppdInput
    connect?: employeeWhereUniqueInput
  }

  export type deptCreateNestedOneWithoutSppd_sppd_deptTodeptInput = {
    create?: XOR<deptCreateWithoutSppd_sppd_deptTodeptInput, deptUncheckedCreateWithoutSppd_sppd_deptTodeptInput>
    connectOrCreate?: deptCreateOrConnectWithoutSppd_sppd_deptTodeptInput
    connect?: deptWhereUniqueInput
  }

  export type sppd_detailCreateNestedManyWithoutSppdInput = {
    create?: XOR<sppd_detailCreateWithoutSppdInput, sppd_detailUncheckedCreateWithoutSppdInput> | sppd_detailCreateWithoutSppdInput[] | sppd_detailUncheckedCreateWithoutSppdInput[]
    connectOrCreate?: sppd_detailCreateOrConnectWithoutSppdInput | sppd_detailCreateOrConnectWithoutSppdInput[]
    createMany?: sppd_detailCreateManySppdInputEnvelope
    connect?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
  }

  export type skpdUncheckedCreateNestedManyWithoutSppdInput = {
    create?: XOR<skpdCreateWithoutSppdInput, skpdUncheckedCreateWithoutSppdInput> | skpdCreateWithoutSppdInput[] | skpdUncheckedCreateWithoutSppdInput[]
    connectOrCreate?: skpdCreateOrConnectWithoutSppdInput | skpdCreateOrConnectWithoutSppdInput[]
    createMany?: skpdCreateManySppdInputEnvelope
    connect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
  }

  export type sppd_detailUncheckedCreateNestedManyWithoutSppdInput = {
    create?: XOR<sppd_detailCreateWithoutSppdInput, sppd_detailUncheckedCreateWithoutSppdInput> | sppd_detailCreateWithoutSppdInput[] | sppd_detailUncheckedCreateWithoutSppdInput[]
    connectOrCreate?: sppd_detailCreateOrConnectWithoutSppdInput | sppd_detailCreateOrConnectWithoutSppdInput[]
    createMany?: sppd_detailCreateManySppdInputEnvelope
    connect?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
  }

  export type skpdUpdateManyWithoutSppdNestedInput = {
    create?: XOR<skpdCreateWithoutSppdInput, skpdUncheckedCreateWithoutSppdInput> | skpdCreateWithoutSppdInput[] | skpdUncheckedCreateWithoutSppdInput[]
    connectOrCreate?: skpdCreateOrConnectWithoutSppdInput | skpdCreateOrConnectWithoutSppdInput[]
    upsert?: skpdUpsertWithWhereUniqueWithoutSppdInput | skpdUpsertWithWhereUniqueWithoutSppdInput[]
    createMany?: skpdCreateManySppdInputEnvelope
    set?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    disconnect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    delete?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    connect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    update?: skpdUpdateWithWhereUniqueWithoutSppdInput | skpdUpdateWithWhereUniqueWithoutSppdInput[]
    updateMany?: skpdUpdateManyWithWhereWithoutSppdInput | skpdUpdateManyWithWhereWithoutSppdInput[]
    deleteMany?: skpdScalarWhereInput | skpdScalarWhereInput[]
  }

  export type employeeUpdateOneWithoutSppdNestedInput = {
    create?: XOR<employeeCreateWithoutSppdInput, employeeUncheckedCreateWithoutSppdInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSppdInput
    upsert?: employeeUpsertWithoutSppdInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutSppdInput, employeeUpdateWithoutSppdInput>, employeeUncheckedUpdateWithoutSppdInput>
  }

  export type deptUpdateOneWithoutSppd_sppd_deptTodeptNestedInput = {
    create?: XOR<deptCreateWithoutSppd_sppd_deptTodeptInput, deptUncheckedCreateWithoutSppd_sppd_deptTodeptInput>
    connectOrCreate?: deptCreateOrConnectWithoutSppd_sppd_deptTodeptInput
    upsert?: deptUpsertWithoutSppd_sppd_deptTodeptInput
    disconnect?: deptWhereInput | boolean
    delete?: deptWhereInput | boolean
    connect?: deptWhereUniqueInput
    update?: XOR<XOR<deptUpdateToOneWithWhereWithoutSppd_sppd_deptTodeptInput, deptUpdateWithoutSppd_sppd_deptTodeptInput>, deptUncheckedUpdateWithoutSppd_sppd_deptTodeptInput>
  }

  export type sppd_detailUpdateManyWithoutSppdNestedInput = {
    create?: XOR<sppd_detailCreateWithoutSppdInput, sppd_detailUncheckedCreateWithoutSppdInput> | sppd_detailCreateWithoutSppdInput[] | sppd_detailUncheckedCreateWithoutSppdInput[]
    connectOrCreate?: sppd_detailCreateOrConnectWithoutSppdInput | sppd_detailCreateOrConnectWithoutSppdInput[]
    upsert?: sppd_detailUpsertWithWhereUniqueWithoutSppdInput | sppd_detailUpsertWithWhereUniqueWithoutSppdInput[]
    createMany?: sppd_detailCreateManySppdInputEnvelope
    set?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    disconnect?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    delete?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    connect?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    update?: sppd_detailUpdateWithWhereUniqueWithoutSppdInput | sppd_detailUpdateWithWhereUniqueWithoutSppdInput[]
    updateMany?: sppd_detailUpdateManyWithWhereWithoutSppdInput | sppd_detailUpdateManyWithWhereWithoutSppdInput[]
    deleteMany?: sppd_detailScalarWhereInput | sppd_detailScalarWhereInput[]
  }

  export type skpdUncheckedUpdateManyWithoutSppdNestedInput = {
    create?: XOR<skpdCreateWithoutSppdInput, skpdUncheckedCreateWithoutSppdInput> | skpdCreateWithoutSppdInput[] | skpdUncheckedCreateWithoutSppdInput[]
    connectOrCreate?: skpdCreateOrConnectWithoutSppdInput | skpdCreateOrConnectWithoutSppdInput[]
    upsert?: skpdUpsertWithWhereUniqueWithoutSppdInput | skpdUpsertWithWhereUniqueWithoutSppdInput[]
    createMany?: skpdCreateManySppdInputEnvelope
    set?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    disconnect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    delete?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    connect?: skpdWhereUniqueInput | skpdWhereUniqueInput[]
    update?: skpdUpdateWithWhereUniqueWithoutSppdInput | skpdUpdateWithWhereUniqueWithoutSppdInput[]
    updateMany?: skpdUpdateManyWithWhereWithoutSppdInput | skpdUpdateManyWithWhereWithoutSppdInput[]
    deleteMany?: skpdScalarWhereInput | skpdScalarWhereInput[]
  }

  export type sppd_detailUncheckedUpdateManyWithoutSppdNestedInput = {
    create?: XOR<sppd_detailCreateWithoutSppdInput, sppd_detailUncheckedCreateWithoutSppdInput> | sppd_detailCreateWithoutSppdInput[] | sppd_detailUncheckedCreateWithoutSppdInput[]
    connectOrCreate?: sppd_detailCreateOrConnectWithoutSppdInput | sppd_detailCreateOrConnectWithoutSppdInput[]
    upsert?: sppd_detailUpsertWithWhereUniqueWithoutSppdInput | sppd_detailUpsertWithWhereUniqueWithoutSppdInput[]
    createMany?: sppd_detailCreateManySppdInputEnvelope
    set?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    disconnect?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    delete?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    connect?: sppd_detailWhereUniqueInput | sppd_detailWhereUniqueInput[]
    update?: sppd_detailUpdateWithWhereUniqueWithoutSppdInput | sppd_detailUpdateWithWhereUniqueWithoutSppdInput[]
    updateMany?: sppd_detailUpdateManyWithWhereWithoutSppdInput | sppd_detailUpdateManyWithWhereWithoutSppdInput[]
    deleteMany?: sppd_detailScalarWhereInput | sppd_detailScalarWhereInput[]
  }

  export type employeeCreateNestedOneWithoutSppd_detailInput = {
    create?: XOR<employeeCreateWithoutSppd_detailInput, employeeUncheckedCreateWithoutSppd_detailInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSppd_detailInput
    connect?: employeeWhereUniqueInput
  }

  export type sppdCreateNestedOneWithoutSppd_detailInput = {
    create?: XOR<sppdCreateWithoutSppd_detailInput, sppdUncheckedCreateWithoutSppd_detailInput>
    connectOrCreate?: sppdCreateOrConnectWithoutSppd_detailInput
    connect?: sppdWhereUniqueInput
  }

  export type employeeUpdateOneWithoutSppd_detailNestedInput = {
    create?: XOR<employeeCreateWithoutSppd_detailInput, employeeUncheckedCreateWithoutSppd_detailInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSppd_detailInput
    upsert?: employeeUpsertWithoutSppd_detailInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutSppd_detailInput, employeeUpdateWithoutSppd_detailInput>, employeeUncheckedUpdateWithoutSppd_detailInput>
  }

  export type sppdUpdateOneWithoutSppd_detailNestedInput = {
    create?: XOR<sppdCreateWithoutSppd_detailInput, sppdUncheckedCreateWithoutSppd_detailInput>
    connectOrCreate?: sppdCreateOrConnectWithoutSppd_detailInput
    upsert?: sppdUpsertWithoutSppd_detailInput
    disconnect?: sppdWhereInput | boolean
    delete?: sppdWhereInput | boolean
    connect?: sppdWhereUniqueInput
    update?: XOR<XOR<sppdUpdateToOneWithWhereWithoutSppd_detailInput, sppdUpdateWithoutSppd_detailInput>, sppdUncheckedUpdateWithoutSppd_detailInput>
  }

  export type employeeCreateNestedOneWithoutSkpd_skpd_createdByToemployeeInput = {
    create?: XOR<employeeCreateWithoutSkpd_skpd_createdByToemployeeInput, employeeUncheckedCreateWithoutSkpd_skpd_createdByToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSkpd_skpd_createdByToemployeeInput
    connect?: employeeWhereUniqueInput
  }

  export type employeeCreateNestedOneWithoutSkpd_skpd_payrollToemployeeInput = {
    create?: XOR<employeeCreateWithoutSkpd_skpd_payrollToemployeeInput, employeeUncheckedCreateWithoutSkpd_skpd_payrollToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSkpd_skpd_payrollToemployeeInput
    connect?: employeeWhereUniqueInput
  }

  export type sppdCreateNestedOneWithoutSkpdInput = {
    create?: XOR<sppdCreateWithoutSkpdInput, sppdUncheckedCreateWithoutSkpdInput>
    connectOrCreate?: sppdCreateOrConnectWithoutSkpdInput
    connect?: sppdWhereUniqueInput
  }

  export type Enumskpd_statusFieldUpdateOperationsInput = {
    set?: $Enums.skpd_status
  }

  export type employeeUpdateOneWithoutSkpd_skpd_createdByToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutSkpd_skpd_createdByToemployeeInput, employeeUncheckedCreateWithoutSkpd_skpd_createdByToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSkpd_skpd_createdByToemployeeInput
    upsert?: employeeUpsertWithoutSkpd_skpd_createdByToemployeeInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutSkpd_skpd_createdByToemployeeInput, employeeUpdateWithoutSkpd_skpd_createdByToemployeeInput>, employeeUncheckedUpdateWithoutSkpd_skpd_createdByToemployeeInput>
  }

  export type employeeUpdateOneWithoutSkpd_skpd_payrollToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutSkpd_skpd_payrollToemployeeInput, employeeUncheckedCreateWithoutSkpd_skpd_payrollToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutSkpd_skpd_payrollToemployeeInput
    upsert?: employeeUpsertWithoutSkpd_skpd_payrollToemployeeInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutSkpd_skpd_payrollToemployeeInput, employeeUpdateWithoutSkpd_skpd_payrollToemployeeInput>, employeeUncheckedUpdateWithoutSkpd_skpd_payrollToemployeeInput>
  }

  export type sppdUpdateOneWithoutSkpdNestedInput = {
    create?: XOR<sppdCreateWithoutSkpdInput, sppdUncheckedCreateWithoutSkpdInput>
    connectOrCreate?: sppdCreateOrConnectWithoutSkpdInput
    upsert?: sppdUpsertWithoutSkpdInput
    disconnect?: sppdWhereInput | boolean
    delete?: sppdWhereInput | boolean
    connect?: sppdWhereUniqueInput
    update?: XOR<XOR<sppdUpdateToOneWithWhereWithoutSkpdInput, sppdUpdateWithoutSkpdInput>, sppdUncheckedUpdateWithoutSkpdInput>
  }

  export type employeeCreateNestedOneWithoutIjin_ijin_approvalToemployeeInput = {
    create?: XOR<employeeCreateWithoutIjin_ijin_approvalToemployeeInput, employeeUncheckedCreateWithoutIjin_ijin_approvalToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutIjin_ijin_approvalToemployeeInput
    connect?: employeeWhereUniqueInput
  }

  export type employeeCreateNestedOneWithoutIjinInput = {
    create?: XOR<employeeCreateWithoutIjinInput, employeeUncheckedCreateWithoutIjinInput>
    connectOrCreate?: employeeCreateOrConnectWithoutIjinInput
    connect?: employeeWhereUniqueInput
  }

  export type Enumijin_statusFieldUpdateOperationsInput = {
    set?: $Enums.ijin_status
  }

  export type employeeUpdateOneWithoutIjin_ijin_approvalToemployeeNestedInput = {
    create?: XOR<employeeCreateWithoutIjin_ijin_approvalToemployeeInput, employeeUncheckedCreateWithoutIjin_ijin_approvalToemployeeInput>
    connectOrCreate?: employeeCreateOrConnectWithoutIjin_ijin_approvalToemployeeInput
    upsert?: employeeUpsertWithoutIjin_ijin_approvalToemployeeInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutIjin_ijin_approvalToemployeeInput, employeeUpdateWithoutIjin_ijin_approvalToemployeeInput>, employeeUncheckedUpdateWithoutIjin_ijin_approvalToemployeeInput>
  }

  export type employeeUpdateOneWithoutIjinNestedInput = {
    create?: XOR<employeeCreateWithoutIjinInput, employeeUncheckedCreateWithoutIjinInput>
    connectOrCreate?: employeeCreateOrConnectWithoutIjinInput
    upsert?: employeeUpsertWithoutIjinInput
    disconnect?: employeeWhereInput | boolean
    delete?: employeeWhereInput | boolean
    connect?: employeeWhereUniqueInput
    update?: XOR<XOR<employeeUpdateToOneWithWhereWithoutIjinInput, employeeUpdateWithoutIjinInput>, employeeUncheckedUpdateWithoutIjinInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumemployee_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.employee_status | Enumemployee_statusFieldRefInput<$PrismaModel>
    in?: $Enums.employee_status[]
    notIn?: $Enums.employee_status[]
    not?: NestedEnumemployee_statusFilter<$PrismaModel> | $Enums.employee_status
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumemployee_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.employee_status | Enumemployee_statusFieldRefInput<$PrismaModel>
    in?: $Enums.employee_status[]
    notIn?: $Enums.employee_status[]
    not?: NestedEnumemployee_statusWithAggregatesFilter<$PrismaModel> | $Enums.employee_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumemployee_statusFilter<$PrismaModel>
    _max?: NestedEnumemployee_statusFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumcalendar_typeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.calendar_type | Enumcalendar_typeFieldRefInput<$PrismaModel> | null
    in?: $Enums.calendar_type[] | null
    notIn?: $Enums.calendar_type[] | null
    not?: NestedEnumcalendar_typeNullableFilter<$PrismaModel> | $Enums.calendar_type | null
  }

  export type NestedEnumcalendar_typeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.calendar_type | Enumcalendar_typeFieldRefInput<$PrismaModel> | null
    in?: $Enums.calendar_type[] | null
    notIn?: $Enums.calendar_type[] | null
    not?: NestedEnumcalendar_typeNullableWithAggregatesFilter<$PrismaModel> | $Enums.calendar_type | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumcalendar_typeNullableFilter<$PrismaModel>
    _max?: NestedEnumcalendar_typeNullableFilter<$PrismaModel>
  }

  export type NestedEnumspl_status1Filter<$PrismaModel = never> = {
    equals?: $Enums.spl_status1 | Enumspl_status1FieldRefInput<$PrismaModel>
    in?: $Enums.spl_status1[]
    notIn?: $Enums.spl_status1[]
    not?: NestedEnumspl_status1Filter<$PrismaModel> | $Enums.spl_status1
  }

  export type NestedEnumspl_status2Filter<$PrismaModel = never> = {
    equals?: $Enums.spl_status2 | Enumspl_status2FieldRefInput<$PrismaModel>
    in?: $Enums.spl_status2[]
    notIn?: $Enums.spl_status2[]
    not?: NestedEnumspl_status2Filter<$PrismaModel> | $Enums.spl_status2
  }

  export type NestedEnumspl_status1WithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.spl_status1 | Enumspl_status1FieldRefInput<$PrismaModel>
    in?: $Enums.spl_status1[]
    notIn?: $Enums.spl_status1[]
    not?: NestedEnumspl_status1WithAggregatesFilter<$PrismaModel> | $Enums.spl_status1
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumspl_status1Filter<$PrismaModel>
    _max?: NestedEnumspl_status1Filter<$PrismaModel>
  }

  export type NestedEnumspl_status2WithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.spl_status2 | Enumspl_status2FieldRefInput<$PrismaModel>
    in?: $Enums.spl_status2[]
    notIn?: $Enums.spl_status2[]
    not?: NestedEnumspl_status2WithAggregatesFilter<$PrismaModel> | $Enums.spl_status2
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumspl_status2Filter<$PrismaModel>
    _max?: NestedEnumspl_status2Filter<$PrismaModel>
  }

  export type NestedEnumdept_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.dept_status | Enumdept_statusFieldRefInput<$PrismaModel>
    in?: $Enums.dept_status[]
    notIn?: $Enums.dept_status[]
    not?: NestedEnumdept_statusFilter<$PrismaModel> | $Enums.dept_status
  }

  export type NestedEnumdept_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.dept_status | Enumdept_statusFieldRefInput<$PrismaModel>
    in?: $Enums.dept_status[]
    notIn?: $Enums.dept_status[]
    not?: NestedEnumdept_statusWithAggregatesFilter<$PrismaModel> | $Enums.dept_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdept_statusFilter<$PrismaModel>
    _max?: NestedEnumdept_statusFilter<$PrismaModel>
  }

  export type NestedEnumsrl_status1Filter<$PrismaModel = never> = {
    equals?: $Enums.srl_status1 | Enumsrl_status1FieldRefInput<$PrismaModel>
    in?: $Enums.srl_status1[]
    notIn?: $Enums.srl_status1[]
    not?: NestedEnumsrl_status1Filter<$PrismaModel> | $Enums.srl_status1
  }

  export type NestedEnumsrl_status2Filter<$PrismaModel = never> = {
    equals?: $Enums.srl_status2 | Enumsrl_status2FieldRefInput<$PrismaModel>
    in?: $Enums.srl_status2[]
    notIn?: $Enums.srl_status2[]
    not?: NestedEnumsrl_status2Filter<$PrismaModel> | $Enums.srl_status2
  }

  export type NestedEnumsrl_status1WithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.srl_status1 | Enumsrl_status1FieldRefInput<$PrismaModel>
    in?: $Enums.srl_status1[]
    notIn?: $Enums.srl_status1[]
    not?: NestedEnumsrl_status1WithAggregatesFilter<$PrismaModel> | $Enums.srl_status1
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumsrl_status1Filter<$PrismaModel>
    _max?: NestedEnumsrl_status1Filter<$PrismaModel>
  }

  export type NestedEnumsrl_status2WithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.srl_status2 | Enumsrl_status2FieldRefInput<$PrismaModel>
    in?: $Enums.srl_status2[]
    notIn?: $Enums.srl_status2[]
    not?: NestedEnumsrl_status2WithAggregatesFilter<$PrismaModel> | $Enums.srl_status2
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumsrl_status2Filter<$PrismaModel>
    _max?: NestedEnumsrl_status2Filter<$PrismaModel>
  }

  export type NestedEnumcuti_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.cuti_status | Enumcuti_statusFieldRefInput<$PrismaModel>
    in?: $Enums.cuti_status[]
    notIn?: $Enums.cuti_status[]
    not?: NestedEnumcuti_statusFilter<$PrismaModel> | $Enums.cuti_status
  }

  export type NestedEnumcuti_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.cuti_status | Enumcuti_statusFieldRefInput<$PrismaModel>
    in?: $Enums.cuti_status[]
    notIn?: $Enums.cuti_status[]
    not?: NestedEnumcuti_statusWithAggregatesFilter<$PrismaModel> | $Enums.cuti_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumcuti_statusFilter<$PrismaModel>
    _max?: NestedEnumcuti_statusFilter<$PrismaModel>
  }

  export type NestedEnumskpd_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.skpd_status | Enumskpd_statusFieldRefInput<$PrismaModel>
    in?: $Enums.skpd_status[]
    notIn?: $Enums.skpd_status[]
    not?: NestedEnumskpd_statusFilter<$PrismaModel> | $Enums.skpd_status
  }

  export type NestedEnumskpd_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.skpd_status | Enumskpd_statusFieldRefInput<$PrismaModel>
    in?: $Enums.skpd_status[]
    notIn?: $Enums.skpd_status[]
    not?: NestedEnumskpd_statusWithAggregatesFilter<$PrismaModel> | $Enums.skpd_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumskpd_statusFilter<$PrismaModel>
    _max?: NestedEnumskpd_statusFilter<$PrismaModel>
  }

  export type NestedEnumijin_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.ijin_status | Enumijin_statusFieldRefInput<$PrismaModel>
    in?: $Enums.ijin_status[]
    notIn?: $Enums.ijin_status[]
    not?: NestedEnumijin_statusFilter<$PrismaModel> | $Enums.ijin_status
  }

  export type NestedEnumijin_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ijin_status | Enumijin_statusFieldRefInput<$PrismaModel>
    in?: $Enums.ijin_status[]
    notIn?: $Enums.ijin_status[]
    not?: NestedEnumijin_statusWithAggregatesFilter<$PrismaModel> | $Enums.ijin_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumijin_statusFilter<$PrismaModel>
    _max?: NestedEnumijin_statusFilter<$PrismaModel>
  }

  export type attendanceCreateWithoutEmployee_attendance_createdByToemployeeInput = {
    attendance_id: string
    check_in: Date | string
    check_out: Date | string
    check_in2?: Date | string | null
    check_out2?: Date | string | null
    type: string
    ijin_info: string
    description: string
    attachment?: string | null
    createdAt?: Date | string
    employee_attendance_user_id_machineToemployee?: employeeCreateNestedOneWithoutAttendance_attendance_user_id_machineToemployeeInput
  }

  export type attendanceUncheckedCreateWithoutEmployee_attendance_createdByToemployeeInput = {
    attendance_id: string
    user_id_machine?: string | null
    check_in: Date | string
    check_out: Date | string
    check_in2?: Date | string | null
    check_out2?: Date | string | null
    type: string
    ijin_info: string
    description: string
    attachment?: string | null
    createdAt?: Date | string
  }

  export type attendanceCreateOrConnectWithoutEmployee_attendance_createdByToemployeeInput = {
    where: attendanceWhereUniqueInput
    create: XOR<attendanceCreateWithoutEmployee_attendance_createdByToemployeeInput, attendanceUncheckedCreateWithoutEmployee_attendance_createdByToemployeeInput>
  }

  export type attendanceCreateManyEmployee_attendance_createdByToemployeeInputEnvelope = {
    data: attendanceCreateManyEmployee_attendance_createdByToemployeeInput | attendanceCreateManyEmployee_attendance_createdByToemployeeInput[]
    skipDuplicates?: boolean
  }

  export type attendanceCreateWithoutEmployee_attendance_user_id_machineToemployeeInput = {
    attendance_id: string
    check_in: Date | string
    check_out: Date | string
    check_in2?: Date | string | null
    check_out2?: Date | string | null
    type: string
    ijin_info: string
    description: string
    attachment?: string | null
    createdAt?: Date | string
    employee_attendance_createdByToemployee?: employeeCreateNestedOneWithoutAttendance_attendance_createdByToemployeeInput
  }

  export type attendanceUncheckedCreateWithoutEmployee_attendance_user_id_machineToemployeeInput = {
    attendance_id: string
    check_in: Date | string
    check_out: Date | string
    check_in2?: Date | string | null
    check_out2?: Date | string | null
    type: string
    ijin_info: string
    description: string
    attachment?: string | null
    createdBy?: string | null
    createdAt?: Date | string
  }

  export type attendanceCreateOrConnectWithoutEmployee_attendance_user_id_machineToemployeeInput = {
    where: attendanceWhereUniqueInput
    create: XOR<attendanceCreateWithoutEmployee_attendance_user_id_machineToemployeeInput, attendanceUncheckedCreateWithoutEmployee_attendance_user_id_machineToemployeeInput>
  }

  export type attendanceCreateManyEmployee_attendance_user_id_machineToemployeeInputEnvelope = {
    data: attendanceCreateManyEmployee_attendance_user_id_machineToemployeeInput | attendanceCreateManyEmployee_attendance_user_id_machineToemployeeInput[]
    skipDuplicates?: boolean
  }

  export type check_ioCreateWithoutEmployeeInput = {
    check_io_id: string
    check_in: Date | string
    check_out: Date | string
    type: string
    createdAt?: Date | string
  }

  export type check_ioUncheckedCreateWithoutEmployeeInput = {
    check_io_id: string
    check_in: Date | string
    check_out: Date | string
    type: string
    createdAt?: Date | string
  }

  export type check_ioCreateOrConnectWithoutEmployeeInput = {
    where: check_ioWhereUniqueInput
    create: XOR<check_ioCreateWithoutEmployeeInput, check_ioUncheckedCreateWithoutEmployeeInput>
  }

  export type check_ioCreateManyEmployeeInputEnvelope = {
    data: check_ioCreateManyEmployeeInput | check_ioCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type cutiCreateWithoutEmployee_cuti_approvalToemployeeInput = {
    cuti_id: string
    type: string
    description: string
    date: Date | string
    year: number
    status: $Enums.cuti_status
    createdAt: Date | string
    employee?: employeeCreateNestedOneWithoutCutiInput
  }

  export type cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput = {
    cuti_id: string
    payroll?: string | null
    type: string
    description: string
    date: Date | string
    year: number
    status: $Enums.cuti_status
    createdAt: Date | string
  }

  export type cutiCreateOrConnectWithoutEmployee_cuti_approvalToemployeeInput = {
    where: cutiWhereUniqueInput
    create: XOR<cutiCreateWithoutEmployee_cuti_approvalToemployeeInput, cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput>
  }

  export type cutiCreateManyEmployee_cuti_approvalToemployeeInputEnvelope = {
    data: cutiCreateManyEmployee_cuti_approvalToemployeeInput | cutiCreateManyEmployee_cuti_approvalToemployeeInput[]
    skipDuplicates?: boolean
  }

  export type cutiCreateWithoutEmployeeInput = {
    cuti_id: string
    type: string
    description: string
    date: Date | string
    year: number
    status: $Enums.cuti_status
    createdAt: Date | string
    employee_cuti_approvalToemployee?: employeeCreateNestedOneWithoutCuti_cuti_approvalToemployeeInput
  }

  export type cutiUncheckedCreateWithoutEmployeeInput = {
    cuti_id: string
    type: string
    description: string
    date: Date | string
    year: number
    status: $Enums.cuti_status
    approval?: string | null
    createdAt: Date | string
  }

  export type cutiCreateOrConnectWithoutEmployeeInput = {
    where: cutiWhereUniqueInput
    create: XOR<cutiCreateWithoutEmployeeInput, cutiUncheckedCreateWithoutEmployeeInput>
  }

  export type cutiCreateManyEmployeeInputEnvelope = {
    data: cutiCreateManyEmployeeInput | cutiCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type profileCreateWithoutEmployeeInput = {
    profile_id: string
    name: string
    description: string
    level: number
    user_hrd: boolean
    access_sppd: string
    access_skpd: string
    access_attendance: string
    access_spl: string
    access_srl: string
    access_cuti: string
    access_ijin: string
    access_calendar: string
    access_user: string
    access_profile: string
    access_dept: string
    access_setting: string
  }

  export type profileUncheckedCreateWithoutEmployeeInput = {
    profile_id: string
    name: string
    description: string
    level: number
    user_hrd: boolean
    access_sppd: string
    access_skpd: string
    access_attendance: string
    access_spl: string
    access_srl: string
    access_cuti: string
    access_ijin: string
    access_calendar: string
    access_user: string
    access_profile: string
    access_dept: string
    access_setting: string
  }

  export type profileCreateOrConnectWithoutEmployeeInput = {
    where: profileWhereUniqueInput
    create: XOR<profileCreateWithoutEmployeeInput, profileUncheckedCreateWithoutEmployeeInput>
  }

  export type employeeCreateWithoutOther_employee_employee_approverToemployeeInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutOther_employee_employee_approverToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutOther_employee_employee_approverToemployeeInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutOther_employee_employee_approverToemployeeInput, employeeUncheckedCreateWithoutOther_employee_employee_approverToemployeeInput>
  }

  export type employeeCreateWithoutEmployee_employee_approverToemployeeInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutEmployee_employee_approverToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutEmployee_employee_approverToemployeeInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutEmployee_employee_approverToemployeeInput, employeeUncheckedCreateWithoutEmployee_employee_approverToemployeeInput>
  }

  export type employeeCreateManyEmployee_employee_approverToemployeeInputEnvelope = {
    data: employeeCreateManyEmployee_employee_approverToemployeeInput | employeeCreateManyEmployee_employee_approverToemployeeInput[]
    skipDuplicates?: boolean
  }

  export type deptCreateWithoutEmployeeInput = {
    dept_id: string
    dept_code: string
    initial: string
    name: string
    status: $Enums.dept_status
    sppd_sppd_deptTodept?: sppdCreateNestedManyWithoutDept_sppd_deptTodeptInput
  }

  export type deptUncheckedCreateWithoutEmployeeInput = {
    dept_id: string
    dept_code: string
    initial: string
    name: string
    status: $Enums.dept_status
    sppd_sppd_deptTodept?: sppdUncheckedCreateNestedManyWithoutDept_sppd_deptTodeptInput
  }

  export type deptCreateOrConnectWithoutEmployeeInput = {
    where: deptWhereUniqueInput
    create: XOR<deptCreateWithoutEmployeeInput, deptUncheckedCreateWithoutEmployeeInput>
  }

  export type employeeCreateWithoutOther_employee_employee_substituteToemployeeInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutOther_employee_employee_substituteToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutOther_employee_employee_substituteToemployeeInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutOther_employee_employee_substituteToemployeeInput, employeeUncheckedCreateWithoutOther_employee_employee_substituteToemployeeInput>
  }

  export type employeeCreateWithoutEmployee_employee_substituteToemployeeInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutEmployee_employee_substituteToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutEmployee_employee_substituteToemployeeInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutEmployee_employee_substituteToemployeeInput, employeeUncheckedCreateWithoutEmployee_employee_substituteToemployeeInput>
  }

  export type employeeCreateManyEmployee_employee_substituteToemployeeInputEnvelope = {
    data: employeeCreateManyEmployee_employee_substituteToemployeeInput | employeeCreateManyEmployee_employee_substituteToemployeeInput[]
    skipDuplicates?: boolean
  }

  export type ijinCreateWithoutEmployee_ijin_approvalToemployeeInput = {
    ijin_id: string
    type: string
    description: string
    date: Date | string
    status: $Enums.ijin_status
    createdAt: Date | string
    employee?: employeeCreateNestedOneWithoutIjinInput
  }

  export type ijinUncheckedCreateWithoutEmployee_ijin_approvalToemployeeInput = {
    ijin_id: string
    payroll?: string | null
    type: string
    description: string
    date: Date | string
    status: $Enums.ijin_status
    createdAt: Date | string
  }

  export type ijinCreateOrConnectWithoutEmployee_ijin_approvalToemployeeInput = {
    where: ijinWhereUniqueInput
    create: XOR<ijinCreateWithoutEmployee_ijin_approvalToemployeeInput, ijinUncheckedCreateWithoutEmployee_ijin_approvalToemployeeInput>
  }

  export type ijinCreateManyEmployee_ijin_approvalToemployeeInputEnvelope = {
    data: ijinCreateManyEmployee_ijin_approvalToemployeeInput | ijinCreateManyEmployee_ijin_approvalToemployeeInput[]
    skipDuplicates?: boolean
  }

  export type ijinCreateWithoutEmployeeInput = {
    ijin_id: string
    type: string
    description: string
    date: Date | string
    status: $Enums.ijin_status
    createdAt: Date | string
    employee_ijin_approvalToemployee?: employeeCreateNestedOneWithoutIjin_ijin_approvalToemployeeInput
  }

  export type ijinUncheckedCreateWithoutEmployeeInput = {
    ijin_id: string
    type: string
    description: string
    date: Date | string
    status: $Enums.ijin_status
    approval?: string | null
    createdAt: Date | string
  }

  export type ijinCreateOrConnectWithoutEmployeeInput = {
    where: ijinWhereUniqueInput
    create: XOR<ijinCreateWithoutEmployeeInput, ijinUncheckedCreateWithoutEmployeeInput>
  }

  export type ijinCreateManyEmployeeInputEnvelope = {
    data: ijinCreateManyEmployeeInput | ijinCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type skpdCreateWithoutEmployee_skpd_createdByToemployeeInput = {
    skpd_id?: string
    real_start: Date | string
    real_end: Date | string
    status: $Enums.skpd_status
    createdAt: Date | string
    employee_skpd_payrollToemployee?: employeeCreateNestedOneWithoutSkpd_skpd_payrollToemployeeInput
    sppd?: sppdCreateNestedOneWithoutSkpdInput
  }

  export type skpdUncheckedCreateWithoutEmployee_skpd_createdByToemployeeInput = {
    skpd_id?: string
    sppd_id?: string | null
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status: $Enums.skpd_status
    createdAt: Date | string
  }

  export type skpdCreateOrConnectWithoutEmployee_skpd_createdByToemployeeInput = {
    where: skpdWhereUniqueInput
    create: XOR<skpdCreateWithoutEmployee_skpd_createdByToemployeeInput, skpdUncheckedCreateWithoutEmployee_skpd_createdByToemployeeInput>
  }

  export type skpdCreateManyEmployee_skpd_createdByToemployeeInputEnvelope = {
    data: skpdCreateManyEmployee_skpd_createdByToemployeeInput | skpdCreateManyEmployee_skpd_createdByToemployeeInput[]
    skipDuplicates?: boolean
  }

  export type skpdCreateWithoutEmployee_skpd_payrollToemployeeInput = {
    skpd_id?: string
    real_start: Date | string
    real_end: Date | string
    status: $Enums.skpd_status
    createdAt: Date | string
    employee_skpd_createdByToemployee?: employeeCreateNestedOneWithoutSkpd_skpd_createdByToemployeeInput
    sppd?: sppdCreateNestedOneWithoutSkpdInput
  }

  export type skpdUncheckedCreateWithoutEmployee_skpd_payrollToemployeeInput = {
    skpd_id?: string
    sppd_id?: string | null
    real_start: Date | string
    real_end: Date | string
    status: $Enums.skpd_status
    createdBy?: string | null
    createdAt: Date | string
  }

  export type skpdCreateOrConnectWithoutEmployee_skpd_payrollToemployeeInput = {
    where: skpdWhereUniqueInput
    create: XOR<skpdCreateWithoutEmployee_skpd_payrollToemployeeInput, skpdUncheckedCreateWithoutEmployee_skpd_payrollToemployeeInput>
  }

  export type skpdCreateManyEmployee_skpd_payrollToemployeeInputEnvelope = {
    data: skpdCreateManyEmployee_skpd_payrollToemployeeInput | skpdCreateManyEmployee_skpd_payrollToemployeeInput[]
    skipDuplicates?: boolean
  }

  export type splCreateWithoutEmployee_spl_approval1ToemployeeInput = {
    spl_id: string
    purpose: string
    est_start: Date | string
    est_end: Date | string
    status1?: $Enums.spl_status1
    status2?: $Enums.spl_status2
    createdAt?: Date | string
    employee_spl_approval2Toemployee?: employeeCreateNestedOneWithoutSpl_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutSplInput
    srl?: srlCreateNestedManyWithoutSplInput
  }

  export type splUncheckedCreateWithoutEmployee_spl_approval1ToemployeeInput = {
    spl_id: string
    purpose: string
    est_start: Date | string
    est_end: Date | string
    status1?: $Enums.spl_status1
    status2?: $Enums.spl_status2
    approval2?: string | null
    createdAt?: Date | string
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutSplInput
    srl?: srlUncheckedCreateNestedManyWithoutSplInput
  }

  export type splCreateOrConnectWithoutEmployee_spl_approval1ToemployeeInput = {
    where: splWhereUniqueInput
    create: XOR<splCreateWithoutEmployee_spl_approval1ToemployeeInput, splUncheckedCreateWithoutEmployee_spl_approval1ToemployeeInput>
  }

  export type splCreateManyEmployee_spl_approval1ToemployeeInputEnvelope = {
    data: splCreateManyEmployee_spl_approval1ToemployeeInput | splCreateManyEmployee_spl_approval1ToemployeeInput[]
    skipDuplicates?: boolean
  }

  export type splCreateWithoutEmployee_spl_approval2ToemployeeInput = {
    spl_id: string
    purpose: string
    est_start: Date | string
    est_end: Date | string
    status1?: $Enums.spl_status1
    status2?: $Enums.spl_status2
    createdAt?: Date | string
    employee_spl_approval1Toemployee?: employeeCreateNestedOneWithoutSpl_spl_approval1ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutSplInput
    srl?: srlCreateNestedManyWithoutSplInput
  }

  export type splUncheckedCreateWithoutEmployee_spl_approval2ToemployeeInput = {
    spl_id: string
    purpose: string
    est_start: Date | string
    est_end: Date | string
    status1?: $Enums.spl_status1
    approval1?: string | null
    status2?: $Enums.spl_status2
    createdAt?: Date | string
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutSplInput
    srl?: srlUncheckedCreateNestedManyWithoutSplInput
  }

  export type splCreateOrConnectWithoutEmployee_spl_approval2ToemployeeInput = {
    where: splWhereUniqueInput
    create: XOR<splCreateWithoutEmployee_spl_approval2ToemployeeInput, splUncheckedCreateWithoutEmployee_spl_approval2ToemployeeInput>
  }

  export type splCreateManyEmployee_spl_approval2ToemployeeInputEnvelope = {
    data: splCreateManyEmployee_spl_approval2ToemployeeInput | splCreateManyEmployee_spl_approval2ToemployeeInput[]
    skipDuplicates?: boolean
  }

  export type spl_detailCreateWithoutEmployeeInput = {
    spl_detail_id: string
    step: number
    description: string
    spl: splCreateNestedOneWithoutSpl_detailInput
  }

  export type spl_detailUncheckedCreateWithoutEmployeeInput = {
    spl_detail_id: string
    step: number
    spl_id: string
    description: string
  }

  export type spl_detailCreateOrConnectWithoutEmployeeInput = {
    where: spl_detailWhereUniqueInput
    create: XOR<spl_detailCreateWithoutEmployeeInput, spl_detailUncheckedCreateWithoutEmployeeInput>
  }

  export type spl_detailCreateManyEmployeeInputEnvelope = {
    data: spl_detailCreateManyEmployeeInput | spl_detailCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type sppdCreateWithoutEmployeeInput = {
    sppd_id: string
    purpose: string
    location: string
    start_date: Date | string
    end_date: Date | string
    duration: number
    createdAt: Date | string
    skpd?: skpdCreateNestedManyWithoutSppdInput
    dept_sppd_deptTodept?: deptCreateNestedOneWithoutSppd_sppd_deptTodeptInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutSppdInput
  }

  export type sppdUncheckedCreateWithoutEmployeeInput = {
    sppd_id: string
    purpose: string
    location: string
    dept?: string | null
    start_date: Date | string
    end_date: Date | string
    duration: number
    createdAt: Date | string
    skpd?: skpdUncheckedCreateNestedManyWithoutSppdInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutSppdInput
  }

  export type sppdCreateOrConnectWithoutEmployeeInput = {
    where: sppdWhereUniqueInput
    create: XOR<sppdCreateWithoutEmployeeInput, sppdUncheckedCreateWithoutEmployeeInput>
  }

  export type sppdCreateManyEmployeeInputEnvelope = {
    data: sppdCreateManyEmployeeInput | sppdCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type sppd_detailCreateWithoutEmployeeInput = {
    sppd_detail_id: string
    step: number
    description: string
    sppd?: sppdCreateNestedOneWithoutSppd_detailInput
  }

  export type sppd_detailUncheckedCreateWithoutEmployeeInput = {
    sppd_detail_id: string
    step: number
    sppd_id?: string | null
    description: string
  }

  export type sppd_detailCreateOrConnectWithoutEmployeeInput = {
    where: sppd_detailWhereUniqueInput
    create: XOR<sppd_detailCreateWithoutEmployeeInput, sppd_detailUncheckedCreateWithoutEmployeeInput>
  }

  export type sppd_detailCreateManyEmployeeInputEnvelope = {
    data: sppd_detailCreateManyEmployeeInput | sppd_detailCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type srlCreateWithoutEmployee_srl_approval1ToemployeeInput = {
    srl_id: string
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    status2?: $Enums.srl_status2
    createdAt: Date | string
    employee_srl_approval2Toemployee?: employeeCreateNestedOneWithoutSrl_srl_approval2ToemployeeInput
    employee?: employeeCreateNestedOneWithoutSrlInput
    spl?: splCreateNestedOneWithoutSrlInput
    srl_detail?: srl_detailCreateNestedManyWithoutSrlInput
  }

  export type srlUncheckedCreateWithoutEmployee_srl_approval1ToemployeeInput = {
    srl_id: string
    spl_id?: string | null
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    status2?: $Enums.srl_status2
    approval2?: string | null
    createdAt: Date | string
    srl_detail?: srl_detailUncheckedCreateNestedManyWithoutSrlInput
  }

  export type srlCreateOrConnectWithoutEmployee_srl_approval1ToemployeeInput = {
    where: srlWhereUniqueInput
    create: XOR<srlCreateWithoutEmployee_srl_approval1ToemployeeInput, srlUncheckedCreateWithoutEmployee_srl_approval1ToemployeeInput>
  }

  export type srlCreateManyEmployee_srl_approval1ToemployeeInputEnvelope = {
    data: srlCreateManyEmployee_srl_approval1ToemployeeInput | srlCreateManyEmployee_srl_approval1ToemployeeInput[]
    skipDuplicates?: boolean
  }

  export type srlCreateWithoutEmployee_srl_approval2ToemployeeInput = {
    srl_id: string
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    status2?: $Enums.srl_status2
    createdAt: Date | string
    employee_srl_approval1Toemployee?: employeeCreateNestedOneWithoutSrl_srl_approval1ToemployeeInput
    employee?: employeeCreateNestedOneWithoutSrlInput
    spl?: splCreateNestedOneWithoutSrlInput
    srl_detail?: srl_detailCreateNestedManyWithoutSrlInput
  }

  export type srlUncheckedCreateWithoutEmployee_srl_approval2ToemployeeInput = {
    srl_id: string
    spl_id?: string | null
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    approval1?: string | null
    status2?: $Enums.srl_status2
    createdAt: Date | string
    srl_detail?: srl_detailUncheckedCreateNestedManyWithoutSrlInput
  }

  export type srlCreateOrConnectWithoutEmployee_srl_approval2ToemployeeInput = {
    where: srlWhereUniqueInput
    create: XOR<srlCreateWithoutEmployee_srl_approval2ToemployeeInput, srlUncheckedCreateWithoutEmployee_srl_approval2ToemployeeInput>
  }

  export type srlCreateManyEmployee_srl_approval2ToemployeeInputEnvelope = {
    data: srlCreateManyEmployee_srl_approval2ToemployeeInput | srlCreateManyEmployee_srl_approval2ToemployeeInput[]
    skipDuplicates?: boolean
  }

  export type srlCreateWithoutEmployeeInput = {
    srl_id: string
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    status2?: $Enums.srl_status2
    createdAt: Date | string
    employee_srl_approval1Toemployee?: employeeCreateNestedOneWithoutSrl_srl_approval1ToemployeeInput
    employee_srl_approval2Toemployee?: employeeCreateNestedOneWithoutSrl_srl_approval2ToemployeeInput
    spl?: splCreateNestedOneWithoutSrlInput
    srl_detail?: srl_detailCreateNestedManyWithoutSrlInput
  }

  export type srlUncheckedCreateWithoutEmployeeInput = {
    srl_id: string
    spl_id?: string | null
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    approval1?: string | null
    status2?: $Enums.srl_status2
    approval2?: string | null
    createdAt: Date | string
    srl_detail?: srl_detailUncheckedCreateNestedManyWithoutSrlInput
  }

  export type srlCreateOrConnectWithoutEmployeeInput = {
    where: srlWhereUniqueInput
    create: XOR<srlCreateWithoutEmployeeInput, srlUncheckedCreateWithoutEmployeeInput>
  }

  export type srlCreateManyEmployeeInputEnvelope = {
    data: srlCreateManyEmployeeInput | srlCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type attendanceUpsertWithWhereUniqueWithoutEmployee_attendance_createdByToemployeeInput = {
    where: attendanceWhereUniqueInput
    update: XOR<attendanceUpdateWithoutEmployee_attendance_createdByToemployeeInput, attendanceUncheckedUpdateWithoutEmployee_attendance_createdByToemployeeInput>
    create: XOR<attendanceCreateWithoutEmployee_attendance_createdByToemployeeInput, attendanceUncheckedCreateWithoutEmployee_attendance_createdByToemployeeInput>
  }

  export type attendanceUpdateWithWhereUniqueWithoutEmployee_attendance_createdByToemployeeInput = {
    where: attendanceWhereUniqueInput
    data: XOR<attendanceUpdateWithoutEmployee_attendance_createdByToemployeeInput, attendanceUncheckedUpdateWithoutEmployee_attendance_createdByToemployeeInput>
  }

  export type attendanceUpdateManyWithWhereWithoutEmployee_attendance_createdByToemployeeInput = {
    where: attendanceScalarWhereInput
    data: XOR<attendanceUpdateManyMutationInput, attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeInput>
  }

  export type attendanceScalarWhereInput = {
    AND?: attendanceScalarWhereInput | attendanceScalarWhereInput[]
    OR?: attendanceScalarWhereInput[]
    NOT?: attendanceScalarWhereInput | attendanceScalarWhereInput[]
    attendance_id?: StringFilter<"attendance"> | string
    user_id_machine?: StringNullableFilter<"attendance"> | string | null
    check_in?: DateTimeFilter<"attendance"> | Date | string
    check_out?: DateTimeFilter<"attendance"> | Date | string
    check_in2?: DateTimeNullableFilter<"attendance"> | Date | string | null
    check_out2?: DateTimeNullableFilter<"attendance"> | Date | string | null
    type?: StringFilter<"attendance"> | string
    ijin_info?: StringFilter<"attendance"> | string
    description?: StringFilter<"attendance"> | string
    attachment?: StringNullableFilter<"attendance"> | string | null
    createdBy?: StringNullableFilter<"attendance"> | string | null
    createdAt?: DateTimeFilter<"attendance"> | Date | string
  }

  export type attendanceUpsertWithWhereUniqueWithoutEmployee_attendance_user_id_machineToemployeeInput = {
    where: attendanceWhereUniqueInput
    update: XOR<attendanceUpdateWithoutEmployee_attendance_user_id_machineToemployeeInput, attendanceUncheckedUpdateWithoutEmployee_attendance_user_id_machineToemployeeInput>
    create: XOR<attendanceCreateWithoutEmployee_attendance_user_id_machineToemployeeInput, attendanceUncheckedCreateWithoutEmployee_attendance_user_id_machineToemployeeInput>
  }

  export type attendanceUpdateWithWhereUniqueWithoutEmployee_attendance_user_id_machineToemployeeInput = {
    where: attendanceWhereUniqueInput
    data: XOR<attendanceUpdateWithoutEmployee_attendance_user_id_machineToemployeeInput, attendanceUncheckedUpdateWithoutEmployee_attendance_user_id_machineToemployeeInput>
  }

  export type attendanceUpdateManyWithWhereWithoutEmployee_attendance_user_id_machineToemployeeInput = {
    where: attendanceScalarWhereInput
    data: XOR<attendanceUpdateManyMutationInput, attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeInput>
  }

  export type check_ioUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: check_ioWhereUniqueInput
    update: XOR<check_ioUpdateWithoutEmployeeInput, check_ioUncheckedUpdateWithoutEmployeeInput>
    create: XOR<check_ioCreateWithoutEmployeeInput, check_ioUncheckedCreateWithoutEmployeeInput>
  }

  export type check_ioUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: check_ioWhereUniqueInput
    data: XOR<check_ioUpdateWithoutEmployeeInput, check_ioUncheckedUpdateWithoutEmployeeInput>
  }

  export type check_ioUpdateManyWithWhereWithoutEmployeeInput = {
    where: check_ioScalarWhereInput
    data: XOR<check_ioUpdateManyMutationInput, check_ioUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type check_ioScalarWhereInput = {
    AND?: check_ioScalarWhereInput | check_ioScalarWhereInput[]
    OR?: check_ioScalarWhereInput[]
    NOT?: check_ioScalarWhereInput | check_ioScalarWhereInput[]
    check_io_id?: StringFilter<"check_io"> | string
    user_id_machine?: StringNullableFilter<"check_io"> | string | null
    check_in?: DateTimeFilter<"check_io"> | Date | string
    check_out?: DateTimeFilter<"check_io"> | Date | string
    type?: StringFilter<"check_io"> | string
    createdAt?: DateTimeFilter<"check_io"> | Date | string
  }

  export type cutiUpsertWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput = {
    where: cutiWhereUniqueInput
    update: XOR<cutiUpdateWithoutEmployee_cuti_approvalToemployeeInput, cutiUncheckedUpdateWithoutEmployee_cuti_approvalToemployeeInput>
    create: XOR<cutiCreateWithoutEmployee_cuti_approvalToemployeeInput, cutiUncheckedCreateWithoutEmployee_cuti_approvalToemployeeInput>
  }

  export type cutiUpdateWithWhereUniqueWithoutEmployee_cuti_approvalToemployeeInput = {
    where: cutiWhereUniqueInput
    data: XOR<cutiUpdateWithoutEmployee_cuti_approvalToemployeeInput, cutiUncheckedUpdateWithoutEmployee_cuti_approvalToemployeeInput>
  }

  export type cutiUpdateManyWithWhereWithoutEmployee_cuti_approvalToemployeeInput = {
    where: cutiScalarWhereInput
    data: XOR<cutiUpdateManyMutationInput, cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeInput>
  }

  export type cutiScalarWhereInput = {
    AND?: cutiScalarWhereInput | cutiScalarWhereInput[]
    OR?: cutiScalarWhereInput[]
    NOT?: cutiScalarWhereInput | cutiScalarWhereInput[]
    cuti_id?: StringFilter<"cuti"> | string
    payroll?: StringNullableFilter<"cuti"> | string | null
    type?: StringFilter<"cuti"> | string
    description?: StringFilter<"cuti"> | string
    date?: DateTimeFilter<"cuti"> | Date | string
    year?: IntFilter<"cuti"> | number
    status?: Enumcuti_statusFilter<"cuti"> | $Enums.cuti_status
    approval?: StringNullableFilter<"cuti"> | string | null
    createdAt?: DateTimeFilter<"cuti"> | Date | string
  }

  export type cutiUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: cutiWhereUniqueInput
    update: XOR<cutiUpdateWithoutEmployeeInput, cutiUncheckedUpdateWithoutEmployeeInput>
    create: XOR<cutiCreateWithoutEmployeeInput, cutiUncheckedCreateWithoutEmployeeInput>
  }

  export type cutiUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: cutiWhereUniqueInput
    data: XOR<cutiUpdateWithoutEmployeeInput, cutiUncheckedUpdateWithoutEmployeeInput>
  }

  export type cutiUpdateManyWithWhereWithoutEmployeeInput = {
    where: cutiScalarWhereInput
    data: XOR<cutiUpdateManyMutationInput, cutiUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type profileUpsertWithoutEmployeeInput = {
    update: XOR<profileUpdateWithoutEmployeeInput, profileUncheckedUpdateWithoutEmployeeInput>
    create: XOR<profileCreateWithoutEmployeeInput, profileUncheckedCreateWithoutEmployeeInput>
    where?: profileWhereInput
  }

  export type profileUpdateToOneWithWhereWithoutEmployeeInput = {
    where?: profileWhereInput
    data: XOR<profileUpdateWithoutEmployeeInput, profileUncheckedUpdateWithoutEmployeeInput>
  }

  export type profileUpdateWithoutEmployeeInput = {
    profile_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    user_hrd?: BoolFieldUpdateOperationsInput | boolean
    access_sppd?: StringFieldUpdateOperationsInput | string
    access_skpd?: StringFieldUpdateOperationsInput | string
    access_attendance?: StringFieldUpdateOperationsInput | string
    access_spl?: StringFieldUpdateOperationsInput | string
    access_srl?: StringFieldUpdateOperationsInput | string
    access_cuti?: StringFieldUpdateOperationsInput | string
    access_ijin?: StringFieldUpdateOperationsInput | string
    access_calendar?: StringFieldUpdateOperationsInput | string
    access_user?: StringFieldUpdateOperationsInput | string
    access_profile?: StringFieldUpdateOperationsInput | string
    access_dept?: StringFieldUpdateOperationsInput | string
    access_setting?: StringFieldUpdateOperationsInput | string
  }

  export type profileUncheckedUpdateWithoutEmployeeInput = {
    profile_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    user_hrd?: BoolFieldUpdateOperationsInput | boolean
    access_sppd?: StringFieldUpdateOperationsInput | string
    access_skpd?: StringFieldUpdateOperationsInput | string
    access_attendance?: StringFieldUpdateOperationsInput | string
    access_spl?: StringFieldUpdateOperationsInput | string
    access_srl?: StringFieldUpdateOperationsInput | string
    access_cuti?: StringFieldUpdateOperationsInput | string
    access_ijin?: StringFieldUpdateOperationsInput | string
    access_calendar?: StringFieldUpdateOperationsInput | string
    access_user?: StringFieldUpdateOperationsInput | string
    access_profile?: StringFieldUpdateOperationsInput | string
    access_dept?: StringFieldUpdateOperationsInput | string
    access_setting?: StringFieldUpdateOperationsInput | string
  }

  export type employeeUpsertWithoutOther_employee_employee_approverToemployeeInput = {
    update: XOR<employeeUpdateWithoutOther_employee_employee_approverToemployeeInput, employeeUncheckedUpdateWithoutOther_employee_employee_approverToemployeeInput>
    create: XOR<employeeCreateWithoutOther_employee_employee_approverToemployeeInput, employeeUncheckedCreateWithoutOther_employee_employee_approverToemployeeInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutOther_employee_employee_approverToemployeeInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutOther_employee_employee_approverToemployeeInput, employeeUncheckedUpdateWithoutOther_employee_employee_approverToemployeeInput>
  }

  export type employeeUpdateWithoutOther_employee_employee_approverToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutOther_employee_employee_approverToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUpsertWithWhereUniqueWithoutEmployee_employee_approverToemployeeInput = {
    where: employeeWhereUniqueInput
    update: XOR<employeeUpdateWithoutEmployee_employee_approverToemployeeInput, employeeUncheckedUpdateWithoutEmployee_employee_approverToemployeeInput>
    create: XOR<employeeCreateWithoutEmployee_employee_approverToemployeeInput, employeeUncheckedCreateWithoutEmployee_employee_approverToemployeeInput>
  }

  export type employeeUpdateWithWhereUniqueWithoutEmployee_employee_approverToemployeeInput = {
    where: employeeWhereUniqueInput
    data: XOR<employeeUpdateWithoutEmployee_employee_approverToemployeeInput, employeeUncheckedUpdateWithoutEmployee_employee_approverToemployeeInput>
  }

  export type employeeUpdateManyWithWhereWithoutEmployee_employee_approverToemployeeInput = {
    where: employeeScalarWhereInput
    data: XOR<employeeUpdateManyMutationInput, employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeInput>
  }

  export type employeeScalarWhereInput = {
    AND?: employeeScalarWhereInput | employeeScalarWhereInput[]
    OR?: employeeScalarWhereInput[]
    NOT?: employeeScalarWhereInput | employeeScalarWhereInput[]
    payroll?: StringFilter<"employee"> | string
    user_id_machine?: StringFilter<"employee"> | string
    profile_id?: StringNullableFilter<"employee"> | string | null
    email?: StringFilter<"employee"> | string
    name?: StringFilter<"employee"> | string
    password?: StringFilter<"employee"> | string
    position?: StringFilter<"employee"> | string
    department?: StringNullableFilter<"employee"> | string | null
    location?: StringFilter<"employee"> | string
    phone?: StringFilter<"employee"> | string
    workhour?: IntFilter<"employee"> | number
    approver?: StringNullableFilter<"employee"> | string | null
    substitute?: StringNullableFilter<"employee"> | string | null
    join_date?: DateTimeFilter<"employee"> | Date | string
    signature?: StringFilter<"employee"> | string
    status?: Enumemployee_statusFilter<"employee"> | $Enums.employee_status
  }

  export type deptUpsertWithoutEmployeeInput = {
    update: XOR<deptUpdateWithoutEmployeeInput, deptUncheckedUpdateWithoutEmployeeInput>
    create: XOR<deptCreateWithoutEmployeeInput, deptUncheckedCreateWithoutEmployeeInput>
    where?: deptWhereInput
  }

  export type deptUpdateToOneWithWhereWithoutEmployeeInput = {
    where?: deptWhereInput
    data: XOR<deptUpdateWithoutEmployeeInput, deptUncheckedUpdateWithoutEmployeeInput>
  }

  export type deptUpdateWithoutEmployeeInput = {
    dept_id?: StringFieldUpdateOperationsInput | string
    dept_code?: StringFieldUpdateOperationsInput | string
    initial?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: Enumdept_statusFieldUpdateOperationsInput | $Enums.dept_status
    sppd_sppd_deptTodept?: sppdUpdateManyWithoutDept_sppd_deptTodeptNestedInput
  }

  export type deptUncheckedUpdateWithoutEmployeeInput = {
    dept_id?: StringFieldUpdateOperationsInput | string
    dept_code?: StringFieldUpdateOperationsInput | string
    initial?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: Enumdept_statusFieldUpdateOperationsInput | $Enums.dept_status
    sppd_sppd_deptTodept?: sppdUncheckedUpdateManyWithoutDept_sppd_deptTodeptNestedInput
  }

  export type employeeUpsertWithoutOther_employee_employee_substituteToemployeeInput = {
    update: XOR<employeeUpdateWithoutOther_employee_employee_substituteToemployeeInput, employeeUncheckedUpdateWithoutOther_employee_employee_substituteToemployeeInput>
    create: XOR<employeeCreateWithoutOther_employee_employee_substituteToemployeeInput, employeeUncheckedCreateWithoutOther_employee_employee_substituteToemployeeInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutOther_employee_employee_substituteToemployeeInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutOther_employee_employee_substituteToemployeeInput, employeeUncheckedUpdateWithoutOther_employee_employee_substituteToemployeeInput>
  }

  export type employeeUpdateWithoutOther_employee_employee_substituteToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutOther_employee_employee_substituteToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUpsertWithWhereUniqueWithoutEmployee_employee_substituteToemployeeInput = {
    where: employeeWhereUniqueInput
    update: XOR<employeeUpdateWithoutEmployee_employee_substituteToemployeeInput, employeeUncheckedUpdateWithoutEmployee_employee_substituteToemployeeInput>
    create: XOR<employeeCreateWithoutEmployee_employee_substituteToemployeeInput, employeeUncheckedCreateWithoutEmployee_employee_substituteToemployeeInput>
  }

  export type employeeUpdateWithWhereUniqueWithoutEmployee_employee_substituteToemployeeInput = {
    where: employeeWhereUniqueInput
    data: XOR<employeeUpdateWithoutEmployee_employee_substituteToemployeeInput, employeeUncheckedUpdateWithoutEmployee_employee_substituteToemployeeInput>
  }

  export type employeeUpdateManyWithWhereWithoutEmployee_employee_substituteToemployeeInput = {
    where: employeeScalarWhereInput
    data: XOR<employeeUpdateManyMutationInput, employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeInput>
  }

  export type ijinUpsertWithWhereUniqueWithoutEmployee_ijin_approvalToemployeeInput = {
    where: ijinWhereUniqueInput
    update: XOR<ijinUpdateWithoutEmployee_ijin_approvalToemployeeInput, ijinUncheckedUpdateWithoutEmployee_ijin_approvalToemployeeInput>
    create: XOR<ijinCreateWithoutEmployee_ijin_approvalToemployeeInput, ijinUncheckedCreateWithoutEmployee_ijin_approvalToemployeeInput>
  }

  export type ijinUpdateWithWhereUniqueWithoutEmployee_ijin_approvalToemployeeInput = {
    where: ijinWhereUniqueInput
    data: XOR<ijinUpdateWithoutEmployee_ijin_approvalToemployeeInput, ijinUncheckedUpdateWithoutEmployee_ijin_approvalToemployeeInput>
  }

  export type ijinUpdateManyWithWhereWithoutEmployee_ijin_approvalToemployeeInput = {
    where: ijinScalarWhereInput
    data: XOR<ijinUpdateManyMutationInput, ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeInput>
  }

  export type ijinScalarWhereInput = {
    AND?: ijinScalarWhereInput | ijinScalarWhereInput[]
    OR?: ijinScalarWhereInput[]
    NOT?: ijinScalarWhereInput | ijinScalarWhereInput[]
    ijin_id?: StringFilter<"ijin"> | string
    payroll?: StringNullableFilter<"ijin"> | string | null
    type?: StringFilter<"ijin"> | string
    description?: StringFilter<"ijin"> | string
    date?: DateTimeFilter<"ijin"> | Date | string
    status?: Enumijin_statusFilter<"ijin"> | $Enums.ijin_status
    approval?: StringNullableFilter<"ijin"> | string | null
    createdAt?: DateTimeFilter<"ijin"> | Date | string
  }

  export type ijinUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: ijinWhereUniqueInput
    update: XOR<ijinUpdateWithoutEmployeeInput, ijinUncheckedUpdateWithoutEmployeeInput>
    create: XOR<ijinCreateWithoutEmployeeInput, ijinUncheckedCreateWithoutEmployeeInput>
  }

  export type ijinUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: ijinWhereUniqueInput
    data: XOR<ijinUpdateWithoutEmployeeInput, ijinUncheckedUpdateWithoutEmployeeInput>
  }

  export type ijinUpdateManyWithWhereWithoutEmployeeInput = {
    where: ijinScalarWhereInput
    data: XOR<ijinUpdateManyMutationInput, ijinUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type skpdUpsertWithWhereUniqueWithoutEmployee_skpd_createdByToemployeeInput = {
    where: skpdWhereUniqueInput
    update: XOR<skpdUpdateWithoutEmployee_skpd_createdByToemployeeInput, skpdUncheckedUpdateWithoutEmployee_skpd_createdByToemployeeInput>
    create: XOR<skpdCreateWithoutEmployee_skpd_createdByToemployeeInput, skpdUncheckedCreateWithoutEmployee_skpd_createdByToemployeeInput>
  }

  export type skpdUpdateWithWhereUniqueWithoutEmployee_skpd_createdByToemployeeInput = {
    where: skpdWhereUniqueInput
    data: XOR<skpdUpdateWithoutEmployee_skpd_createdByToemployeeInput, skpdUncheckedUpdateWithoutEmployee_skpd_createdByToemployeeInput>
  }

  export type skpdUpdateManyWithWhereWithoutEmployee_skpd_createdByToemployeeInput = {
    where: skpdScalarWhereInput
    data: XOR<skpdUpdateManyMutationInput, skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeInput>
  }

  export type skpdScalarWhereInput = {
    AND?: skpdScalarWhereInput | skpdScalarWhereInput[]
    OR?: skpdScalarWhereInput[]
    NOT?: skpdScalarWhereInput | skpdScalarWhereInput[]
    skpd_id?: StringFilter<"skpd"> | string
    sppd_id?: StringNullableFilter<"skpd"> | string | null
    payroll?: StringNullableFilter<"skpd"> | string | null
    real_start?: DateTimeFilter<"skpd"> | Date | string
    real_end?: DateTimeFilter<"skpd"> | Date | string
    status?: Enumskpd_statusFilter<"skpd"> | $Enums.skpd_status
    createdBy?: StringNullableFilter<"skpd"> | string | null
    createdAt?: DateTimeFilter<"skpd"> | Date | string
  }

  export type skpdUpsertWithWhereUniqueWithoutEmployee_skpd_payrollToemployeeInput = {
    where: skpdWhereUniqueInput
    update: XOR<skpdUpdateWithoutEmployee_skpd_payrollToemployeeInput, skpdUncheckedUpdateWithoutEmployee_skpd_payrollToemployeeInput>
    create: XOR<skpdCreateWithoutEmployee_skpd_payrollToemployeeInput, skpdUncheckedCreateWithoutEmployee_skpd_payrollToemployeeInput>
  }

  export type skpdUpdateWithWhereUniqueWithoutEmployee_skpd_payrollToemployeeInput = {
    where: skpdWhereUniqueInput
    data: XOR<skpdUpdateWithoutEmployee_skpd_payrollToemployeeInput, skpdUncheckedUpdateWithoutEmployee_skpd_payrollToemployeeInput>
  }

  export type skpdUpdateManyWithWhereWithoutEmployee_skpd_payrollToemployeeInput = {
    where: skpdScalarWhereInput
    data: XOR<skpdUpdateManyMutationInput, skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeInput>
  }

  export type splUpsertWithWhereUniqueWithoutEmployee_spl_approval1ToemployeeInput = {
    where: splWhereUniqueInput
    update: XOR<splUpdateWithoutEmployee_spl_approval1ToemployeeInput, splUncheckedUpdateWithoutEmployee_spl_approval1ToemployeeInput>
    create: XOR<splCreateWithoutEmployee_spl_approval1ToemployeeInput, splUncheckedCreateWithoutEmployee_spl_approval1ToemployeeInput>
  }

  export type splUpdateWithWhereUniqueWithoutEmployee_spl_approval1ToemployeeInput = {
    where: splWhereUniqueInput
    data: XOR<splUpdateWithoutEmployee_spl_approval1ToemployeeInput, splUncheckedUpdateWithoutEmployee_spl_approval1ToemployeeInput>
  }

  export type splUpdateManyWithWhereWithoutEmployee_spl_approval1ToemployeeInput = {
    where: splScalarWhereInput
    data: XOR<splUpdateManyMutationInput, splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeInput>
  }

  export type splScalarWhereInput = {
    AND?: splScalarWhereInput | splScalarWhereInput[]
    OR?: splScalarWhereInput[]
    NOT?: splScalarWhereInput | splScalarWhereInput[]
    spl_id?: StringFilter<"spl"> | string
    purpose?: StringFilter<"spl"> | string
    est_start?: DateTimeFilter<"spl"> | Date | string
    est_end?: DateTimeFilter<"spl"> | Date | string
    status1?: Enumspl_status1Filter<"spl"> | $Enums.spl_status1
    approval1?: StringNullableFilter<"spl"> | string | null
    status2?: Enumspl_status2Filter<"spl"> | $Enums.spl_status2
    approval2?: StringNullableFilter<"spl"> | string | null
    createdAt?: DateTimeFilter<"spl"> | Date | string
  }

  export type splUpsertWithWhereUniqueWithoutEmployee_spl_approval2ToemployeeInput = {
    where: splWhereUniqueInput
    update: XOR<splUpdateWithoutEmployee_spl_approval2ToemployeeInput, splUncheckedUpdateWithoutEmployee_spl_approval2ToemployeeInput>
    create: XOR<splCreateWithoutEmployee_spl_approval2ToemployeeInput, splUncheckedCreateWithoutEmployee_spl_approval2ToemployeeInput>
  }

  export type splUpdateWithWhereUniqueWithoutEmployee_spl_approval2ToemployeeInput = {
    where: splWhereUniqueInput
    data: XOR<splUpdateWithoutEmployee_spl_approval2ToemployeeInput, splUncheckedUpdateWithoutEmployee_spl_approval2ToemployeeInput>
  }

  export type splUpdateManyWithWhereWithoutEmployee_spl_approval2ToemployeeInput = {
    where: splScalarWhereInput
    data: XOR<splUpdateManyMutationInput, splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeInput>
  }

  export type spl_detailUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: spl_detailWhereUniqueInput
    update: XOR<spl_detailUpdateWithoutEmployeeInput, spl_detailUncheckedUpdateWithoutEmployeeInput>
    create: XOR<spl_detailCreateWithoutEmployeeInput, spl_detailUncheckedCreateWithoutEmployeeInput>
  }

  export type spl_detailUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: spl_detailWhereUniqueInput
    data: XOR<spl_detailUpdateWithoutEmployeeInput, spl_detailUncheckedUpdateWithoutEmployeeInput>
  }

  export type spl_detailUpdateManyWithWhereWithoutEmployeeInput = {
    where: spl_detailScalarWhereInput
    data: XOR<spl_detailUpdateManyMutationInput, spl_detailUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type spl_detailScalarWhereInput = {
    AND?: spl_detailScalarWhereInput | spl_detailScalarWhereInput[]
    OR?: spl_detailScalarWhereInput[]
    NOT?: spl_detailScalarWhereInput | spl_detailScalarWhereInput[]
    spl_detail_id?: StringFilter<"spl_detail"> | string
    step?: IntFilter<"spl_detail"> | number
    spl_id?: StringFilter<"spl_detail"> | string
    payroll?: StringNullableFilter<"spl_detail"> | string | null
    description?: StringFilter<"spl_detail"> | string
  }

  export type sppdUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: sppdWhereUniqueInput
    update: XOR<sppdUpdateWithoutEmployeeInput, sppdUncheckedUpdateWithoutEmployeeInput>
    create: XOR<sppdCreateWithoutEmployeeInput, sppdUncheckedCreateWithoutEmployeeInput>
  }

  export type sppdUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: sppdWhereUniqueInput
    data: XOR<sppdUpdateWithoutEmployeeInput, sppdUncheckedUpdateWithoutEmployeeInput>
  }

  export type sppdUpdateManyWithWhereWithoutEmployeeInput = {
    where: sppdScalarWhereInput
    data: XOR<sppdUpdateManyMutationInput, sppdUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type sppdScalarWhereInput = {
    AND?: sppdScalarWhereInput | sppdScalarWhereInput[]
    OR?: sppdScalarWhereInput[]
    NOT?: sppdScalarWhereInput | sppdScalarWhereInput[]
    sppd_id?: StringFilter<"sppd"> | string
    purpose?: StringFilter<"sppd"> | string
    location?: StringFilter<"sppd"> | string
    dept?: StringNullableFilter<"sppd"> | string | null
    start_date?: DateTimeFilter<"sppd"> | Date | string
    end_date?: DateTimeFilter<"sppd"> | Date | string
    duration?: IntFilter<"sppd"> | number
    createdBy?: StringNullableFilter<"sppd"> | string | null
    createdAt?: DateTimeFilter<"sppd"> | Date | string
  }

  export type sppd_detailUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: sppd_detailWhereUniqueInput
    update: XOR<sppd_detailUpdateWithoutEmployeeInput, sppd_detailUncheckedUpdateWithoutEmployeeInput>
    create: XOR<sppd_detailCreateWithoutEmployeeInput, sppd_detailUncheckedCreateWithoutEmployeeInput>
  }

  export type sppd_detailUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: sppd_detailWhereUniqueInput
    data: XOR<sppd_detailUpdateWithoutEmployeeInput, sppd_detailUncheckedUpdateWithoutEmployeeInput>
  }

  export type sppd_detailUpdateManyWithWhereWithoutEmployeeInput = {
    where: sppd_detailScalarWhereInput
    data: XOR<sppd_detailUpdateManyMutationInput, sppd_detailUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type sppd_detailScalarWhereInput = {
    AND?: sppd_detailScalarWhereInput | sppd_detailScalarWhereInput[]
    OR?: sppd_detailScalarWhereInput[]
    NOT?: sppd_detailScalarWhereInput | sppd_detailScalarWhereInput[]
    sppd_detail_id?: StringFilter<"sppd_detail"> | string
    step?: IntFilter<"sppd_detail"> | number
    sppd_id?: StringNullableFilter<"sppd_detail"> | string | null
    payroll?: StringNullableFilter<"sppd_detail"> | string | null
    description?: StringFilter<"sppd_detail"> | string
  }

  export type srlUpsertWithWhereUniqueWithoutEmployee_srl_approval1ToemployeeInput = {
    where: srlWhereUniqueInput
    update: XOR<srlUpdateWithoutEmployee_srl_approval1ToemployeeInput, srlUncheckedUpdateWithoutEmployee_srl_approval1ToemployeeInput>
    create: XOR<srlCreateWithoutEmployee_srl_approval1ToemployeeInput, srlUncheckedCreateWithoutEmployee_srl_approval1ToemployeeInput>
  }

  export type srlUpdateWithWhereUniqueWithoutEmployee_srl_approval1ToemployeeInput = {
    where: srlWhereUniqueInput
    data: XOR<srlUpdateWithoutEmployee_srl_approval1ToemployeeInput, srlUncheckedUpdateWithoutEmployee_srl_approval1ToemployeeInput>
  }

  export type srlUpdateManyWithWhereWithoutEmployee_srl_approval1ToemployeeInput = {
    where: srlScalarWhereInput
    data: XOR<srlUpdateManyMutationInput, srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeInput>
  }

  export type srlScalarWhereInput = {
    AND?: srlScalarWhereInput | srlScalarWhereInput[]
    OR?: srlScalarWhereInput[]
    NOT?: srlScalarWhereInput | srlScalarWhereInput[]
    srl_id?: StringFilter<"srl"> | string
    spl_id?: StringNullableFilter<"srl"> | string | null
    payroll?: StringNullableFilter<"srl"> | string | null
    real_start?: DateTimeFilter<"srl"> | Date | string
    real_end?: DateTimeFilter<"srl"> | Date | string
    status1?: Enumsrl_status1Filter<"srl"> | $Enums.srl_status1
    approval1?: StringNullableFilter<"srl"> | string | null
    status2?: Enumsrl_status2Filter<"srl"> | $Enums.srl_status2
    approval2?: StringNullableFilter<"srl"> | string | null
    createdAt?: DateTimeFilter<"srl"> | Date | string
  }

  export type srlUpsertWithWhereUniqueWithoutEmployee_srl_approval2ToemployeeInput = {
    where: srlWhereUniqueInput
    update: XOR<srlUpdateWithoutEmployee_srl_approval2ToemployeeInput, srlUncheckedUpdateWithoutEmployee_srl_approval2ToemployeeInput>
    create: XOR<srlCreateWithoutEmployee_srl_approval2ToemployeeInput, srlUncheckedCreateWithoutEmployee_srl_approval2ToemployeeInput>
  }

  export type srlUpdateWithWhereUniqueWithoutEmployee_srl_approval2ToemployeeInput = {
    where: srlWhereUniqueInput
    data: XOR<srlUpdateWithoutEmployee_srl_approval2ToemployeeInput, srlUncheckedUpdateWithoutEmployee_srl_approval2ToemployeeInput>
  }

  export type srlUpdateManyWithWhereWithoutEmployee_srl_approval2ToemployeeInput = {
    where: srlScalarWhereInput
    data: XOR<srlUpdateManyMutationInput, srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeInput>
  }

  export type srlUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: srlWhereUniqueInput
    update: XOR<srlUpdateWithoutEmployeeInput, srlUncheckedUpdateWithoutEmployeeInput>
    create: XOR<srlCreateWithoutEmployeeInput, srlUncheckedCreateWithoutEmployeeInput>
  }

  export type srlUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: srlWhereUniqueInput
    data: XOR<srlUpdateWithoutEmployeeInput, srlUncheckedUpdateWithoutEmployeeInput>
  }

  export type srlUpdateManyWithWhereWithoutEmployeeInput = {
    where: srlScalarWhereInput
    data: XOR<srlUpdateManyMutationInput, srlUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type employeeCreateWithoutProfileInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutProfileInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutProfileInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutProfileInput, employeeUncheckedCreateWithoutProfileInput>
  }

  export type employeeCreateManyProfileInputEnvelope = {
    data: employeeCreateManyProfileInput | employeeCreateManyProfileInput[]
    skipDuplicates?: boolean
  }

  export type employeeUpsertWithWhereUniqueWithoutProfileInput = {
    where: employeeWhereUniqueInput
    update: XOR<employeeUpdateWithoutProfileInput, employeeUncheckedUpdateWithoutProfileInput>
    create: XOR<employeeCreateWithoutProfileInput, employeeUncheckedCreateWithoutProfileInput>
  }

  export type employeeUpdateWithWhereUniqueWithoutProfileInput = {
    where: employeeWhereUniqueInput
    data: XOR<employeeUpdateWithoutProfileInput, employeeUncheckedUpdateWithoutProfileInput>
  }

  export type employeeUpdateManyWithWhereWithoutProfileInput = {
    where: employeeScalarWhereInput
    data: XOR<employeeUpdateManyMutationInput, employeeUncheckedUpdateManyWithoutProfileInput>
  }

  export type employeeCreateWithoutCheck_ioInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutCheck_ioInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutCheck_ioInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutCheck_ioInput, employeeUncheckedCreateWithoutCheck_ioInput>
  }

  export type employeeUpsertWithoutCheck_ioInput = {
    update: XOR<employeeUpdateWithoutCheck_ioInput, employeeUncheckedUpdateWithoutCheck_ioInput>
    create: XOR<employeeCreateWithoutCheck_ioInput, employeeUncheckedCreateWithoutCheck_ioInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutCheck_ioInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutCheck_ioInput, employeeUncheckedUpdateWithoutCheck_ioInput>
  }

  export type employeeUpdateWithoutCheck_ioInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutCheck_ioInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeCreateWithoutAttendance_attendance_createdByToemployeeInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutAttendance_attendance_createdByToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutAttendance_attendance_createdByToemployeeInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutAttendance_attendance_createdByToemployeeInput, employeeUncheckedCreateWithoutAttendance_attendance_createdByToemployeeInput>
  }

  export type employeeCreateWithoutAttendance_attendance_user_id_machineToemployeeInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutAttendance_attendance_user_id_machineToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutAttendance_attendance_user_id_machineToemployeeInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutAttendance_attendance_user_id_machineToemployeeInput, employeeUncheckedCreateWithoutAttendance_attendance_user_id_machineToemployeeInput>
  }

  export type employeeUpsertWithoutAttendance_attendance_createdByToemployeeInput = {
    update: XOR<employeeUpdateWithoutAttendance_attendance_createdByToemployeeInput, employeeUncheckedUpdateWithoutAttendance_attendance_createdByToemployeeInput>
    create: XOR<employeeCreateWithoutAttendance_attendance_createdByToemployeeInput, employeeUncheckedCreateWithoutAttendance_attendance_createdByToemployeeInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutAttendance_attendance_createdByToemployeeInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutAttendance_attendance_createdByToemployeeInput, employeeUncheckedUpdateWithoutAttendance_attendance_createdByToemployeeInput>
  }

  export type employeeUpdateWithoutAttendance_attendance_createdByToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutAttendance_attendance_createdByToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUpsertWithoutAttendance_attendance_user_id_machineToemployeeInput = {
    update: XOR<employeeUpdateWithoutAttendance_attendance_user_id_machineToemployeeInput, employeeUncheckedUpdateWithoutAttendance_attendance_user_id_machineToemployeeInput>
    create: XOR<employeeCreateWithoutAttendance_attendance_user_id_machineToemployeeInput, employeeUncheckedCreateWithoutAttendance_attendance_user_id_machineToemployeeInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutAttendance_attendance_user_id_machineToemployeeInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutAttendance_attendance_user_id_machineToemployeeInput, employeeUncheckedUpdateWithoutAttendance_attendance_user_id_machineToemployeeInput>
  }

  export type employeeUpdateWithoutAttendance_attendance_user_id_machineToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutAttendance_attendance_user_id_machineToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeCreateWithoutSpl_spl_approval1ToemployeeInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutSpl_spl_approval1ToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutSpl_spl_approval1ToemployeeInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutSpl_spl_approval1ToemployeeInput, employeeUncheckedCreateWithoutSpl_spl_approval1ToemployeeInput>
  }

  export type employeeCreateWithoutSpl_spl_approval2ToemployeeInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutSpl_spl_approval2ToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutSpl_spl_approval2ToemployeeInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutSpl_spl_approval2ToemployeeInput, employeeUncheckedCreateWithoutSpl_spl_approval2ToemployeeInput>
  }

  export type spl_detailCreateWithoutSplInput = {
    spl_detail_id: string
    step: number
    description: string
    employee?: employeeCreateNestedOneWithoutSpl_detailInput
  }

  export type spl_detailUncheckedCreateWithoutSplInput = {
    spl_detail_id: string
    step: number
    payroll?: string | null
    description: string
  }

  export type spl_detailCreateOrConnectWithoutSplInput = {
    where: spl_detailWhereUniqueInput
    create: XOR<spl_detailCreateWithoutSplInput, spl_detailUncheckedCreateWithoutSplInput>
  }

  export type spl_detailCreateManySplInputEnvelope = {
    data: spl_detailCreateManySplInput | spl_detailCreateManySplInput[]
    skipDuplicates?: boolean
  }

  export type srlCreateWithoutSplInput = {
    srl_id: string
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    status2?: $Enums.srl_status2
    createdAt: Date | string
    employee_srl_approval1Toemployee?: employeeCreateNestedOneWithoutSrl_srl_approval1ToemployeeInput
    employee_srl_approval2Toemployee?: employeeCreateNestedOneWithoutSrl_srl_approval2ToemployeeInput
    employee?: employeeCreateNestedOneWithoutSrlInput
    srl_detail?: srl_detailCreateNestedManyWithoutSrlInput
  }

  export type srlUncheckedCreateWithoutSplInput = {
    srl_id: string
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    approval1?: string | null
    status2?: $Enums.srl_status2
    approval2?: string | null
    createdAt: Date | string
    srl_detail?: srl_detailUncheckedCreateNestedManyWithoutSrlInput
  }

  export type srlCreateOrConnectWithoutSplInput = {
    where: srlWhereUniqueInput
    create: XOR<srlCreateWithoutSplInput, srlUncheckedCreateWithoutSplInput>
  }

  export type srlCreateManySplInputEnvelope = {
    data: srlCreateManySplInput | srlCreateManySplInput[]
    skipDuplicates?: boolean
  }

  export type employeeUpsertWithoutSpl_spl_approval1ToemployeeInput = {
    update: XOR<employeeUpdateWithoutSpl_spl_approval1ToemployeeInput, employeeUncheckedUpdateWithoutSpl_spl_approval1ToemployeeInput>
    create: XOR<employeeCreateWithoutSpl_spl_approval1ToemployeeInput, employeeUncheckedCreateWithoutSpl_spl_approval1ToemployeeInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutSpl_spl_approval1ToemployeeInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutSpl_spl_approval1ToemployeeInput, employeeUncheckedUpdateWithoutSpl_spl_approval1ToemployeeInput>
  }

  export type employeeUpdateWithoutSpl_spl_approval1ToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutSpl_spl_approval1ToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUpsertWithoutSpl_spl_approval2ToemployeeInput = {
    update: XOR<employeeUpdateWithoutSpl_spl_approval2ToemployeeInput, employeeUncheckedUpdateWithoutSpl_spl_approval2ToemployeeInput>
    create: XOR<employeeCreateWithoutSpl_spl_approval2ToemployeeInput, employeeUncheckedCreateWithoutSpl_spl_approval2ToemployeeInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutSpl_spl_approval2ToemployeeInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutSpl_spl_approval2ToemployeeInput, employeeUncheckedUpdateWithoutSpl_spl_approval2ToemployeeInput>
  }

  export type employeeUpdateWithoutSpl_spl_approval2ToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutSpl_spl_approval2ToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type spl_detailUpsertWithWhereUniqueWithoutSplInput = {
    where: spl_detailWhereUniqueInput
    update: XOR<spl_detailUpdateWithoutSplInput, spl_detailUncheckedUpdateWithoutSplInput>
    create: XOR<spl_detailCreateWithoutSplInput, spl_detailUncheckedCreateWithoutSplInput>
  }

  export type spl_detailUpdateWithWhereUniqueWithoutSplInput = {
    where: spl_detailWhereUniqueInput
    data: XOR<spl_detailUpdateWithoutSplInput, spl_detailUncheckedUpdateWithoutSplInput>
  }

  export type spl_detailUpdateManyWithWhereWithoutSplInput = {
    where: spl_detailScalarWhereInput
    data: XOR<spl_detailUpdateManyMutationInput, spl_detailUncheckedUpdateManyWithoutSplInput>
  }

  export type srlUpsertWithWhereUniqueWithoutSplInput = {
    where: srlWhereUniqueInput
    update: XOR<srlUpdateWithoutSplInput, srlUncheckedUpdateWithoutSplInput>
    create: XOR<srlCreateWithoutSplInput, srlUncheckedCreateWithoutSplInput>
  }

  export type srlUpdateWithWhereUniqueWithoutSplInput = {
    where: srlWhereUniqueInput
    data: XOR<srlUpdateWithoutSplInput, srlUncheckedUpdateWithoutSplInput>
  }

  export type srlUpdateManyWithWhereWithoutSplInput = {
    where: srlScalarWhereInput
    data: XOR<srlUpdateManyMutationInput, srlUncheckedUpdateManyWithoutSplInput>
  }

  export type employeeCreateWithoutSpl_detailInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutSpl_detailInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutSpl_detailInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutSpl_detailInput, employeeUncheckedCreateWithoutSpl_detailInput>
  }

  export type splCreateWithoutSpl_detailInput = {
    spl_id: string
    purpose: string
    est_start: Date | string
    est_end: Date | string
    status1?: $Enums.spl_status1
    status2?: $Enums.spl_status2
    createdAt?: Date | string
    employee_spl_approval1Toemployee?: employeeCreateNestedOneWithoutSpl_spl_approval1ToemployeeInput
    employee_spl_approval2Toemployee?: employeeCreateNestedOneWithoutSpl_spl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutSplInput
  }

  export type splUncheckedCreateWithoutSpl_detailInput = {
    spl_id: string
    purpose: string
    est_start: Date | string
    est_end: Date | string
    status1?: $Enums.spl_status1
    approval1?: string | null
    status2?: $Enums.spl_status2
    approval2?: string | null
    createdAt?: Date | string
    srl?: srlUncheckedCreateNestedManyWithoutSplInput
  }

  export type splCreateOrConnectWithoutSpl_detailInput = {
    where: splWhereUniqueInput
    create: XOR<splCreateWithoutSpl_detailInput, splUncheckedCreateWithoutSpl_detailInput>
  }

  export type employeeUpsertWithoutSpl_detailInput = {
    update: XOR<employeeUpdateWithoutSpl_detailInput, employeeUncheckedUpdateWithoutSpl_detailInput>
    create: XOR<employeeCreateWithoutSpl_detailInput, employeeUncheckedCreateWithoutSpl_detailInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutSpl_detailInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutSpl_detailInput, employeeUncheckedUpdateWithoutSpl_detailInput>
  }

  export type employeeUpdateWithoutSpl_detailInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutSpl_detailInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type splUpsertWithoutSpl_detailInput = {
    update: XOR<splUpdateWithoutSpl_detailInput, splUncheckedUpdateWithoutSpl_detailInput>
    create: XOR<splCreateWithoutSpl_detailInput, splUncheckedCreateWithoutSpl_detailInput>
    where?: splWhereInput
  }

  export type splUpdateToOneWithWhereWithoutSpl_detailInput = {
    where?: splWhereInput
    data: XOR<splUpdateWithoutSpl_detailInput, splUncheckedUpdateWithoutSpl_detailInput>
  }

  export type splUpdateWithoutSpl_detailInput = {
    spl_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    est_start?: DateTimeFieldUpdateOperationsInput | Date | string
    est_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumspl_status1FieldUpdateOperationsInput | $Enums.spl_status1
    status2?: Enumspl_status2FieldUpdateOperationsInput | $Enums.spl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_spl_approval1Toemployee?: employeeUpdateOneWithoutSpl_spl_approval1ToemployeeNestedInput
    employee_spl_approval2Toemployee?: employeeUpdateOneWithoutSpl_spl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutSplNestedInput
  }

  export type splUncheckedUpdateWithoutSpl_detailInput = {
    spl_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    est_start?: DateTimeFieldUpdateOperationsInput | Date | string
    est_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumspl_status1FieldUpdateOperationsInput | $Enums.spl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumspl_status2FieldUpdateOperationsInput | $Enums.spl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    srl?: srlUncheckedUpdateManyWithoutSplNestedInput
  }

  export type employeeCreateWithoutDeptInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutDeptInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutDeptInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutDeptInput, employeeUncheckedCreateWithoutDeptInput>
  }

  export type employeeCreateManyDeptInputEnvelope = {
    data: employeeCreateManyDeptInput | employeeCreateManyDeptInput[]
    skipDuplicates?: boolean
  }

  export type sppdCreateWithoutDept_sppd_deptTodeptInput = {
    sppd_id: string
    purpose: string
    location: string
    start_date: Date | string
    end_date: Date | string
    duration: number
    createdAt: Date | string
    skpd?: skpdCreateNestedManyWithoutSppdInput
    employee?: employeeCreateNestedOneWithoutSppdInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutSppdInput
  }

  export type sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput = {
    sppd_id: string
    purpose: string
    location: string
    start_date: Date | string
    end_date: Date | string
    duration: number
    createdBy?: string | null
    createdAt: Date | string
    skpd?: skpdUncheckedCreateNestedManyWithoutSppdInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutSppdInput
  }

  export type sppdCreateOrConnectWithoutDept_sppd_deptTodeptInput = {
    where: sppdWhereUniqueInput
    create: XOR<sppdCreateWithoutDept_sppd_deptTodeptInput, sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput>
  }

  export type sppdCreateManyDept_sppd_deptTodeptInputEnvelope = {
    data: sppdCreateManyDept_sppd_deptTodeptInput | sppdCreateManyDept_sppd_deptTodeptInput[]
    skipDuplicates?: boolean
  }

  export type employeeUpsertWithWhereUniqueWithoutDeptInput = {
    where: employeeWhereUniqueInput
    update: XOR<employeeUpdateWithoutDeptInput, employeeUncheckedUpdateWithoutDeptInput>
    create: XOR<employeeCreateWithoutDeptInput, employeeUncheckedCreateWithoutDeptInput>
  }

  export type employeeUpdateWithWhereUniqueWithoutDeptInput = {
    where: employeeWhereUniqueInput
    data: XOR<employeeUpdateWithoutDeptInput, employeeUncheckedUpdateWithoutDeptInput>
  }

  export type employeeUpdateManyWithWhereWithoutDeptInput = {
    where: employeeScalarWhereInput
    data: XOR<employeeUpdateManyMutationInput, employeeUncheckedUpdateManyWithoutDeptInput>
  }

  export type sppdUpsertWithWhereUniqueWithoutDept_sppd_deptTodeptInput = {
    where: sppdWhereUniqueInput
    update: XOR<sppdUpdateWithoutDept_sppd_deptTodeptInput, sppdUncheckedUpdateWithoutDept_sppd_deptTodeptInput>
    create: XOR<sppdCreateWithoutDept_sppd_deptTodeptInput, sppdUncheckedCreateWithoutDept_sppd_deptTodeptInput>
  }

  export type sppdUpdateWithWhereUniqueWithoutDept_sppd_deptTodeptInput = {
    where: sppdWhereUniqueInput
    data: XOR<sppdUpdateWithoutDept_sppd_deptTodeptInput, sppdUncheckedUpdateWithoutDept_sppd_deptTodeptInput>
  }

  export type sppdUpdateManyWithWhereWithoutDept_sppd_deptTodeptInput = {
    where: sppdScalarWhereInput
    data: XOR<sppdUpdateManyMutationInput, sppdUncheckedUpdateManyWithoutDept_sppd_deptTodeptInput>
  }

  export type employeeCreateWithoutSrl_srl_approval1ToemployeeInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutSrl_srl_approval1ToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutSrl_srl_approval1ToemployeeInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutSrl_srl_approval1ToemployeeInput, employeeUncheckedCreateWithoutSrl_srl_approval1ToemployeeInput>
  }

  export type employeeCreateWithoutSrl_srl_approval2ToemployeeInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutSrl_srl_approval2ToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutSrl_srl_approval2ToemployeeInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutSrl_srl_approval2ToemployeeInput, employeeUncheckedCreateWithoutSrl_srl_approval2ToemployeeInput>
  }

  export type employeeCreateWithoutSrlInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
  }

  export type employeeUncheckedCreateWithoutSrlInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
  }

  export type employeeCreateOrConnectWithoutSrlInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutSrlInput, employeeUncheckedCreateWithoutSrlInput>
  }

  export type splCreateWithoutSrlInput = {
    spl_id: string
    purpose: string
    est_start: Date | string
    est_end: Date | string
    status1?: $Enums.spl_status1
    status2?: $Enums.spl_status2
    createdAt?: Date | string
    employee_spl_approval1Toemployee?: employeeCreateNestedOneWithoutSpl_spl_approval1ToemployeeInput
    employee_spl_approval2Toemployee?: employeeCreateNestedOneWithoutSpl_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutSplInput
  }

  export type splUncheckedCreateWithoutSrlInput = {
    spl_id: string
    purpose: string
    est_start: Date | string
    est_end: Date | string
    status1?: $Enums.spl_status1
    approval1?: string | null
    status2?: $Enums.spl_status2
    approval2?: string | null
    createdAt?: Date | string
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutSplInput
  }

  export type splCreateOrConnectWithoutSrlInput = {
    where: splWhereUniqueInput
    create: XOR<splCreateWithoutSrlInput, splUncheckedCreateWithoutSrlInput>
  }

  export type srl_detailCreateWithoutSrlInput = {
    srl_detail_id: string
    description: string
    status: string
  }

  export type srl_detailUncheckedCreateWithoutSrlInput = {
    srl_detail_id: string
    description: string
    status: string
  }

  export type srl_detailCreateOrConnectWithoutSrlInput = {
    where: srl_detailWhereUniqueInput
    create: XOR<srl_detailCreateWithoutSrlInput, srl_detailUncheckedCreateWithoutSrlInput>
  }

  export type srl_detailCreateManySrlInputEnvelope = {
    data: srl_detailCreateManySrlInput | srl_detailCreateManySrlInput[]
    skipDuplicates?: boolean
  }

  export type employeeUpsertWithoutSrl_srl_approval1ToemployeeInput = {
    update: XOR<employeeUpdateWithoutSrl_srl_approval1ToemployeeInput, employeeUncheckedUpdateWithoutSrl_srl_approval1ToemployeeInput>
    create: XOR<employeeCreateWithoutSrl_srl_approval1ToemployeeInput, employeeUncheckedCreateWithoutSrl_srl_approval1ToemployeeInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutSrl_srl_approval1ToemployeeInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutSrl_srl_approval1ToemployeeInput, employeeUncheckedUpdateWithoutSrl_srl_approval1ToemployeeInput>
  }

  export type employeeUpdateWithoutSrl_srl_approval1ToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutSrl_srl_approval1ToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUpsertWithoutSrl_srl_approval2ToemployeeInput = {
    update: XOR<employeeUpdateWithoutSrl_srl_approval2ToemployeeInput, employeeUncheckedUpdateWithoutSrl_srl_approval2ToemployeeInput>
    create: XOR<employeeCreateWithoutSrl_srl_approval2ToemployeeInput, employeeUncheckedCreateWithoutSrl_srl_approval2ToemployeeInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutSrl_srl_approval2ToemployeeInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutSrl_srl_approval2ToemployeeInput, employeeUncheckedUpdateWithoutSrl_srl_approval2ToemployeeInput>
  }

  export type employeeUpdateWithoutSrl_srl_approval2ToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutSrl_srl_approval2ToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUpsertWithoutSrlInput = {
    update: XOR<employeeUpdateWithoutSrlInput, employeeUncheckedUpdateWithoutSrlInput>
    create: XOR<employeeCreateWithoutSrlInput, employeeUncheckedCreateWithoutSrlInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutSrlInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutSrlInput, employeeUncheckedUpdateWithoutSrlInput>
  }

  export type employeeUpdateWithoutSrlInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutSrlInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
  }

  export type splUpsertWithoutSrlInput = {
    update: XOR<splUpdateWithoutSrlInput, splUncheckedUpdateWithoutSrlInput>
    create: XOR<splCreateWithoutSrlInput, splUncheckedCreateWithoutSrlInput>
    where?: splWhereInput
  }

  export type splUpdateToOneWithWhereWithoutSrlInput = {
    where?: splWhereInput
    data: XOR<splUpdateWithoutSrlInput, splUncheckedUpdateWithoutSrlInput>
  }

  export type splUpdateWithoutSrlInput = {
    spl_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    est_start?: DateTimeFieldUpdateOperationsInput | Date | string
    est_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumspl_status1FieldUpdateOperationsInput | $Enums.spl_status1
    status2?: Enumspl_status2FieldUpdateOperationsInput | $Enums.spl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_spl_approval1Toemployee?: employeeUpdateOneWithoutSpl_spl_approval1ToemployeeNestedInput
    employee_spl_approval2Toemployee?: employeeUpdateOneWithoutSpl_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutSplNestedInput
  }

  export type splUncheckedUpdateWithoutSrlInput = {
    spl_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    est_start?: DateTimeFieldUpdateOperationsInput | Date | string
    est_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumspl_status1FieldUpdateOperationsInput | $Enums.spl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumspl_status2FieldUpdateOperationsInput | $Enums.spl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    spl_detail?: spl_detailUncheckedUpdateManyWithoutSplNestedInput
  }

  export type srl_detailUpsertWithWhereUniqueWithoutSrlInput = {
    where: srl_detailWhereUniqueInput
    update: XOR<srl_detailUpdateWithoutSrlInput, srl_detailUncheckedUpdateWithoutSrlInput>
    create: XOR<srl_detailCreateWithoutSrlInput, srl_detailUncheckedCreateWithoutSrlInput>
  }

  export type srl_detailUpdateWithWhereUniqueWithoutSrlInput = {
    where: srl_detailWhereUniqueInput
    data: XOR<srl_detailUpdateWithoutSrlInput, srl_detailUncheckedUpdateWithoutSrlInput>
  }

  export type srl_detailUpdateManyWithWhereWithoutSrlInput = {
    where: srl_detailScalarWhereInput
    data: XOR<srl_detailUpdateManyMutationInput, srl_detailUncheckedUpdateManyWithoutSrlInput>
  }

  export type srl_detailScalarWhereInput = {
    AND?: srl_detailScalarWhereInput | srl_detailScalarWhereInput[]
    OR?: srl_detailScalarWhereInput[]
    NOT?: srl_detailScalarWhereInput | srl_detailScalarWhereInput[]
    srl_detail_id?: StringFilter<"srl_detail"> | string
    srl_id?: StringNullableFilter<"srl_detail"> | string | null
    description?: StringFilter<"srl_detail"> | string
    status?: StringFilter<"srl_detail"> | string
  }

  export type srlCreateWithoutSrl_detailInput = {
    srl_id: string
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    status2?: $Enums.srl_status2
    createdAt: Date | string
    employee_srl_approval1Toemployee?: employeeCreateNestedOneWithoutSrl_srl_approval1ToemployeeInput
    employee_srl_approval2Toemployee?: employeeCreateNestedOneWithoutSrl_srl_approval2ToemployeeInput
    employee?: employeeCreateNestedOneWithoutSrlInput
    spl?: splCreateNestedOneWithoutSrlInput
  }

  export type srlUncheckedCreateWithoutSrl_detailInput = {
    srl_id: string
    spl_id?: string | null
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    approval1?: string | null
    status2?: $Enums.srl_status2
    approval2?: string | null
    createdAt: Date | string
  }

  export type srlCreateOrConnectWithoutSrl_detailInput = {
    where: srlWhereUniqueInput
    create: XOR<srlCreateWithoutSrl_detailInput, srlUncheckedCreateWithoutSrl_detailInput>
  }

  export type srlUpsertWithoutSrl_detailInput = {
    update: XOR<srlUpdateWithoutSrl_detailInput, srlUncheckedUpdateWithoutSrl_detailInput>
    create: XOR<srlCreateWithoutSrl_detailInput, srlUncheckedCreateWithoutSrl_detailInput>
    where?: srlWhereInput
  }

  export type srlUpdateToOneWithWhereWithoutSrl_detailInput = {
    where?: srlWhereInput
    data: XOR<srlUpdateWithoutSrl_detailInput, srlUncheckedUpdateWithoutSrl_detailInput>
  }

  export type srlUpdateWithoutSrl_detailInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_srl_approval1Toemployee?: employeeUpdateOneWithoutSrl_srl_approval1ToemployeeNestedInput
    employee_srl_approval2Toemployee?: employeeUpdateOneWithoutSrl_srl_approval2ToemployeeNestedInput
    employee?: employeeUpdateOneWithoutSrlNestedInput
    spl?: splUpdateOneWithoutSrlNestedInput
  }

  export type srlUncheckedUpdateWithoutSrl_detailInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    spl_id?: NullableStringFieldUpdateOperationsInput | string | null
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type employeeCreateWithoutCuti_cuti_approvalToemployeeInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutCuti_cuti_approvalToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutCuti_cuti_approvalToemployeeInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutCuti_cuti_approvalToemployeeInput, employeeUncheckedCreateWithoutCuti_cuti_approvalToemployeeInput>
  }

  export type employeeCreateWithoutCutiInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutCutiInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutCutiInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutCutiInput, employeeUncheckedCreateWithoutCutiInput>
  }

  export type employeeUpsertWithoutCuti_cuti_approvalToemployeeInput = {
    update: XOR<employeeUpdateWithoutCuti_cuti_approvalToemployeeInput, employeeUncheckedUpdateWithoutCuti_cuti_approvalToemployeeInput>
    create: XOR<employeeCreateWithoutCuti_cuti_approvalToemployeeInput, employeeUncheckedCreateWithoutCuti_cuti_approvalToemployeeInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutCuti_cuti_approvalToemployeeInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutCuti_cuti_approvalToemployeeInput, employeeUncheckedUpdateWithoutCuti_cuti_approvalToemployeeInput>
  }

  export type employeeUpdateWithoutCuti_cuti_approvalToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutCuti_cuti_approvalToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUpsertWithoutCutiInput = {
    update: XOR<employeeUpdateWithoutCutiInput, employeeUncheckedUpdateWithoutCutiInput>
    create: XOR<employeeCreateWithoutCutiInput, employeeUncheckedCreateWithoutCutiInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutCutiInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutCutiInput, employeeUncheckedUpdateWithoutCutiInput>
  }

  export type employeeUpdateWithoutCutiInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutCutiInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type skpdCreateWithoutSppdInput = {
    skpd_id?: string
    real_start: Date | string
    real_end: Date | string
    status: $Enums.skpd_status
    createdAt: Date | string
    employee_skpd_createdByToemployee?: employeeCreateNestedOneWithoutSkpd_skpd_createdByToemployeeInput
    employee_skpd_payrollToemployee?: employeeCreateNestedOneWithoutSkpd_skpd_payrollToemployeeInput
  }

  export type skpdUncheckedCreateWithoutSppdInput = {
    skpd_id?: string
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status: $Enums.skpd_status
    createdBy?: string | null
    createdAt: Date | string
  }

  export type skpdCreateOrConnectWithoutSppdInput = {
    where: skpdWhereUniqueInput
    create: XOR<skpdCreateWithoutSppdInput, skpdUncheckedCreateWithoutSppdInput>
  }

  export type skpdCreateManySppdInputEnvelope = {
    data: skpdCreateManySppdInput | skpdCreateManySppdInput[]
    skipDuplicates?: boolean
  }

  export type employeeCreateWithoutSppdInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutSppdInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutSppdInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutSppdInput, employeeUncheckedCreateWithoutSppdInput>
  }

  export type deptCreateWithoutSppd_sppd_deptTodeptInput = {
    dept_id: string
    dept_code: string
    initial: string
    name: string
    status: $Enums.dept_status
    employee?: employeeCreateNestedManyWithoutDeptInput
  }

  export type deptUncheckedCreateWithoutSppd_sppd_deptTodeptInput = {
    dept_id: string
    dept_code: string
    initial: string
    name: string
    status: $Enums.dept_status
    employee?: employeeUncheckedCreateNestedManyWithoutDeptInput
  }

  export type deptCreateOrConnectWithoutSppd_sppd_deptTodeptInput = {
    where: deptWhereUniqueInput
    create: XOR<deptCreateWithoutSppd_sppd_deptTodeptInput, deptUncheckedCreateWithoutSppd_sppd_deptTodeptInput>
  }

  export type sppd_detailCreateWithoutSppdInput = {
    sppd_detail_id: string
    step: number
    description: string
    employee?: employeeCreateNestedOneWithoutSppd_detailInput
  }

  export type sppd_detailUncheckedCreateWithoutSppdInput = {
    sppd_detail_id: string
    step: number
    payroll?: string | null
    description: string
  }

  export type sppd_detailCreateOrConnectWithoutSppdInput = {
    where: sppd_detailWhereUniqueInput
    create: XOR<sppd_detailCreateWithoutSppdInput, sppd_detailUncheckedCreateWithoutSppdInput>
  }

  export type sppd_detailCreateManySppdInputEnvelope = {
    data: sppd_detailCreateManySppdInput | sppd_detailCreateManySppdInput[]
    skipDuplicates?: boolean
  }

  export type skpdUpsertWithWhereUniqueWithoutSppdInput = {
    where: skpdWhereUniqueInput
    update: XOR<skpdUpdateWithoutSppdInput, skpdUncheckedUpdateWithoutSppdInput>
    create: XOR<skpdCreateWithoutSppdInput, skpdUncheckedCreateWithoutSppdInput>
  }

  export type skpdUpdateWithWhereUniqueWithoutSppdInput = {
    where: skpdWhereUniqueInput
    data: XOR<skpdUpdateWithoutSppdInput, skpdUncheckedUpdateWithoutSppdInput>
  }

  export type skpdUpdateManyWithWhereWithoutSppdInput = {
    where: skpdScalarWhereInput
    data: XOR<skpdUpdateManyMutationInput, skpdUncheckedUpdateManyWithoutSppdInput>
  }

  export type employeeUpsertWithoutSppdInput = {
    update: XOR<employeeUpdateWithoutSppdInput, employeeUncheckedUpdateWithoutSppdInput>
    create: XOR<employeeCreateWithoutSppdInput, employeeUncheckedCreateWithoutSppdInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutSppdInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutSppdInput, employeeUncheckedUpdateWithoutSppdInput>
  }

  export type employeeUpdateWithoutSppdInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutSppdInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type deptUpsertWithoutSppd_sppd_deptTodeptInput = {
    update: XOR<deptUpdateWithoutSppd_sppd_deptTodeptInput, deptUncheckedUpdateWithoutSppd_sppd_deptTodeptInput>
    create: XOR<deptCreateWithoutSppd_sppd_deptTodeptInput, deptUncheckedCreateWithoutSppd_sppd_deptTodeptInput>
    where?: deptWhereInput
  }

  export type deptUpdateToOneWithWhereWithoutSppd_sppd_deptTodeptInput = {
    where?: deptWhereInput
    data: XOR<deptUpdateWithoutSppd_sppd_deptTodeptInput, deptUncheckedUpdateWithoutSppd_sppd_deptTodeptInput>
  }

  export type deptUpdateWithoutSppd_sppd_deptTodeptInput = {
    dept_id?: StringFieldUpdateOperationsInput | string
    dept_code?: StringFieldUpdateOperationsInput | string
    initial?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: Enumdept_statusFieldUpdateOperationsInput | $Enums.dept_status
    employee?: employeeUpdateManyWithoutDeptNestedInput
  }

  export type deptUncheckedUpdateWithoutSppd_sppd_deptTodeptInput = {
    dept_id?: StringFieldUpdateOperationsInput | string
    dept_code?: StringFieldUpdateOperationsInput | string
    initial?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: Enumdept_statusFieldUpdateOperationsInput | $Enums.dept_status
    employee?: employeeUncheckedUpdateManyWithoutDeptNestedInput
  }

  export type sppd_detailUpsertWithWhereUniqueWithoutSppdInput = {
    where: sppd_detailWhereUniqueInput
    update: XOR<sppd_detailUpdateWithoutSppdInput, sppd_detailUncheckedUpdateWithoutSppdInput>
    create: XOR<sppd_detailCreateWithoutSppdInput, sppd_detailUncheckedCreateWithoutSppdInput>
  }

  export type sppd_detailUpdateWithWhereUniqueWithoutSppdInput = {
    where: sppd_detailWhereUniqueInput
    data: XOR<sppd_detailUpdateWithoutSppdInput, sppd_detailUncheckedUpdateWithoutSppdInput>
  }

  export type sppd_detailUpdateManyWithWhereWithoutSppdInput = {
    where: sppd_detailScalarWhereInput
    data: XOR<sppd_detailUpdateManyMutationInput, sppd_detailUncheckedUpdateManyWithoutSppdInput>
  }

  export type employeeCreateWithoutSppd_detailInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutSppd_detailInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutSppd_detailInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutSppd_detailInput, employeeUncheckedCreateWithoutSppd_detailInput>
  }

  export type sppdCreateWithoutSppd_detailInput = {
    sppd_id: string
    purpose: string
    location: string
    start_date: Date | string
    end_date: Date | string
    duration: number
    createdAt: Date | string
    skpd?: skpdCreateNestedManyWithoutSppdInput
    employee?: employeeCreateNestedOneWithoutSppdInput
    dept_sppd_deptTodept?: deptCreateNestedOneWithoutSppd_sppd_deptTodeptInput
  }

  export type sppdUncheckedCreateWithoutSppd_detailInput = {
    sppd_id: string
    purpose: string
    location: string
    dept?: string | null
    start_date: Date | string
    end_date: Date | string
    duration: number
    createdBy?: string | null
    createdAt: Date | string
    skpd?: skpdUncheckedCreateNestedManyWithoutSppdInput
  }

  export type sppdCreateOrConnectWithoutSppd_detailInput = {
    where: sppdWhereUniqueInput
    create: XOR<sppdCreateWithoutSppd_detailInput, sppdUncheckedCreateWithoutSppd_detailInput>
  }

  export type employeeUpsertWithoutSppd_detailInput = {
    update: XOR<employeeUpdateWithoutSppd_detailInput, employeeUncheckedUpdateWithoutSppd_detailInput>
    create: XOR<employeeCreateWithoutSppd_detailInput, employeeUncheckedCreateWithoutSppd_detailInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutSppd_detailInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutSppd_detailInput, employeeUncheckedUpdateWithoutSppd_detailInput>
  }

  export type employeeUpdateWithoutSppd_detailInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutSppd_detailInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type sppdUpsertWithoutSppd_detailInput = {
    update: XOR<sppdUpdateWithoutSppd_detailInput, sppdUncheckedUpdateWithoutSppd_detailInput>
    create: XOR<sppdCreateWithoutSppd_detailInput, sppdUncheckedCreateWithoutSppd_detailInput>
    where?: sppdWhereInput
  }

  export type sppdUpdateToOneWithWhereWithoutSppd_detailInput = {
    where?: sppdWhereInput
    data: XOR<sppdUpdateWithoutSppd_detailInput, sppdUncheckedUpdateWithoutSppd_detailInput>
  }

  export type sppdUpdateWithoutSppd_detailInput = {
    sppd_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skpd?: skpdUpdateManyWithoutSppdNestedInput
    employee?: employeeUpdateOneWithoutSppdNestedInput
    dept_sppd_deptTodept?: deptUpdateOneWithoutSppd_sppd_deptTodeptNestedInput
  }

  export type sppdUncheckedUpdateWithoutSppd_detailInput = {
    sppd_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    dept?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skpd?: skpdUncheckedUpdateManyWithoutSppdNestedInput
  }

  export type employeeCreateWithoutSkpd_skpd_createdByToemployeeInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutSkpd_skpd_createdByToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutSkpd_skpd_createdByToemployeeInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutSkpd_skpd_createdByToemployeeInput, employeeUncheckedCreateWithoutSkpd_skpd_createdByToemployeeInput>
  }

  export type employeeCreateWithoutSkpd_skpd_payrollToemployeeInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutSkpd_skpd_payrollToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutSkpd_skpd_payrollToemployeeInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutSkpd_skpd_payrollToemployeeInput, employeeUncheckedCreateWithoutSkpd_skpd_payrollToemployeeInput>
  }

  export type sppdCreateWithoutSkpdInput = {
    sppd_id: string
    purpose: string
    location: string
    start_date: Date | string
    end_date: Date | string
    duration: number
    createdAt: Date | string
    employee?: employeeCreateNestedOneWithoutSppdInput
    dept_sppd_deptTodept?: deptCreateNestedOneWithoutSppd_sppd_deptTodeptInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutSppdInput
  }

  export type sppdUncheckedCreateWithoutSkpdInput = {
    sppd_id: string
    purpose: string
    location: string
    dept?: string | null
    start_date: Date | string
    end_date: Date | string
    duration: number
    createdBy?: string | null
    createdAt: Date | string
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutSppdInput
  }

  export type sppdCreateOrConnectWithoutSkpdInput = {
    where: sppdWhereUniqueInput
    create: XOR<sppdCreateWithoutSkpdInput, sppdUncheckedCreateWithoutSkpdInput>
  }

  export type employeeUpsertWithoutSkpd_skpd_createdByToemployeeInput = {
    update: XOR<employeeUpdateWithoutSkpd_skpd_createdByToemployeeInput, employeeUncheckedUpdateWithoutSkpd_skpd_createdByToemployeeInput>
    create: XOR<employeeCreateWithoutSkpd_skpd_createdByToemployeeInput, employeeUncheckedCreateWithoutSkpd_skpd_createdByToemployeeInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutSkpd_skpd_createdByToemployeeInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutSkpd_skpd_createdByToemployeeInput, employeeUncheckedUpdateWithoutSkpd_skpd_createdByToemployeeInput>
  }

  export type employeeUpdateWithoutSkpd_skpd_createdByToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutSkpd_skpd_createdByToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUpsertWithoutSkpd_skpd_payrollToemployeeInput = {
    update: XOR<employeeUpdateWithoutSkpd_skpd_payrollToemployeeInput, employeeUncheckedUpdateWithoutSkpd_skpd_payrollToemployeeInput>
    create: XOR<employeeCreateWithoutSkpd_skpd_payrollToemployeeInput, employeeUncheckedCreateWithoutSkpd_skpd_payrollToemployeeInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutSkpd_skpd_payrollToemployeeInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutSkpd_skpd_payrollToemployeeInput, employeeUncheckedUpdateWithoutSkpd_skpd_payrollToemployeeInput>
  }

  export type employeeUpdateWithoutSkpd_skpd_payrollToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutSkpd_skpd_payrollToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type sppdUpsertWithoutSkpdInput = {
    update: XOR<sppdUpdateWithoutSkpdInput, sppdUncheckedUpdateWithoutSkpdInput>
    create: XOR<sppdCreateWithoutSkpdInput, sppdUncheckedCreateWithoutSkpdInput>
    where?: sppdWhereInput
  }

  export type sppdUpdateToOneWithWhereWithoutSkpdInput = {
    where?: sppdWhereInput
    data: XOR<sppdUpdateWithoutSkpdInput, sppdUncheckedUpdateWithoutSkpdInput>
  }

  export type sppdUpdateWithoutSkpdInput = {
    sppd_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: employeeUpdateOneWithoutSppdNestedInput
    dept_sppd_deptTodept?: deptUpdateOneWithoutSppd_sppd_deptTodeptNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutSppdNestedInput
  }

  export type sppdUncheckedUpdateWithoutSkpdInput = {
    sppd_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    dept?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutSppdNestedInput
  }

  export type employeeCreateWithoutIjin_ijin_approvalToemployeeInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin?: ijinCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutIjin_ijin_approvalToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin?: ijinUncheckedCreateNestedManyWithoutEmployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutIjin_ijin_approvalToemployeeInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutIjin_ijin_approvalToemployeeInput, employeeUncheckedCreateWithoutIjin_ijin_approvalToemployeeInput>
  }

  export type employeeCreateWithoutIjinInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiCreateNestedManyWithoutEmployeeInput
    profile?: profileCreateNestedOneWithoutEmployeeInput
    employee_employee_approverToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_approverToemployeeInput
    other_employee_employee_approverToemployee?: employeeCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    dept?: deptCreateNestedOneWithoutEmployeeInput
    employee_employee_substituteToemployee?: employeeCreateNestedOneWithoutOther_employee_employee_substituteToemployeeInput
    other_employee_employee_substituteToemployee?: employeeCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    skpd_skpd_createdByToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailCreateNestedManyWithoutEmployeeInput
    sppd?: sppdCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlCreateNestedManyWithoutEmployeeInput
  }

  export type employeeUncheckedCreateWithoutIjinInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_createdByToemployeeInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedCreateNestedManyWithoutEmployee_attendance_user_id_machineToemployeeInput
    check_io?: check_ioUncheckedCreateNestedManyWithoutEmployeeInput
    cuti_cuti_approvalToemployee?: cutiUncheckedCreateNestedManyWithoutEmployee_cuti_approvalToemployeeInput
    cuti?: cutiUncheckedCreateNestedManyWithoutEmployeeInput
    other_employee_employee_approverToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_approverToemployeeInput
    other_employee_employee_substituteToemployee?: employeeUncheckedCreateNestedManyWithoutEmployee_employee_substituteToemployeeInput
    ijin_ijin_approvalToemployee?: ijinUncheckedCreateNestedManyWithoutEmployee_ijin_approvalToemployeeInput
    skpd_skpd_createdByToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_createdByToemployeeInput
    skpd_skpd_payrollToemployee?: skpdUncheckedCreateNestedManyWithoutEmployee_skpd_payrollToemployeeInput
    spl_spl_approval1Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval1ToemployeeInput
    spl_spl_approval2Toemployee?: splUncheckedCreateNestedManyWithoutEmployee_spl_approval2ToemployeeInput
    spl_detail?: spl_detailUncheckedCreateNestedManyWithoutEmployeeInput
    sppd?: sppdUncheckedCreateNestedManyWithoutEmployeeInput
    sppd_detail?: sppd_detailUncheckedCreateNestedManyWithoutEmployeeInput
    srl_srl_approval1Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval1ToemployeeInput
    srl_srl_approval2Toemployee?: srlUncheckedCreateNestedManyWithoutEmployee_srl_approval2ToemployeeInput
    srl?: srlUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type employeeCreateOrConnectWithoutIjinInput = {
    where: employeeWhereUniqueInput
    create: XOR<employeeCreateWithoutIjinInput, employeeUncheckedCreateWithoutIjinInput>
  }

  export type employeeUpsertWithoutIjin_ijin_approvalToemployeeInput = {
    update: XOR<employeeUpdateWithoutIjin_ijin_approvalToemployeeInput, employeeUncheckedUpdateWithoutIjin_ijin_approvalToemployeeInput>
    create: XOR<employeeCreateWithoutIjin_ijin_approvalToemployeeInput, employeeUncheckedCreateWithoutIjin_ijin_approvalToemployeeInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutIjin_ijin_approvalToemployeeInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutIjin_ijin_approvalToemployeeInput, employeeUncheckedUpdateWithoutIjin_ijin_approvalToemployeeInput>
  }

  export type employeeUpdateWithoutIjin_ijin_approvalToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutIjin_ijin_approvalToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUpsertWithoutIjinInput = {
    update: XOR<employeeUpdateWithoutIjinInput, employeeUncheckedUpdateWithoutIjinInput>
    create: XOR<employeeCreateWithoutIjinInput, employeeUncheckedCreateWithoutIjinInput>
    where?: employeeWhereInput
  }

  export type employeeUpdateToOneWithWhereWithoutIjinInput = {
    where?: employeeWhereInput
    data: XOR<employeeUpdateWithoutIjinInput, employeeUncheckedUpdateWithoutIjinInput>
  }

  export type employeeUpdateWithoutIjinInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutIjinInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type attendanceCreateManyEmployee_attendance_createdByToemployeeInput = {
    attendance_id: string
    user_id_machine?: string | null
    check_in: Date | string
    check_out: Date | string
    check_in2?: Date | string | null
    check_out2?: Date | string | null
    type: string
    ijin_info: string
    description: string
    attachment?: string | null
    createdAt?: Date | string
  }

  export type attendanceCreateManyEmployee_attendance_user_id_machineToemployeeInput = {
    attendance_id: string
    check_in: Date | string
    check_out: Date | string
    check_in2?: Date | string | null
    check_out2?: Date | string | null
    type: string
    ijin_info: string
    description: string
    attachment?: string | null
    createdBy?: string | null
    createdAt?: Date | string
  }

  export type check_ioCreateManyEmployeeInput = {
    check_io_id: string
    check_in: Date | string
    check_out: Date | string
    type: string
    createdAt?: Date | string
  }

  export type cutiCreateManyEmployee_cuti_approvalToemployeeInput = {
    cuti_id: string
    payroll?: string | null
    type: string
    description: string
    date: Date | string
    year: number
    status: $Enums.cuti_status
    createdAt: Date | string
  }

  export type cutiCreateManyEmployeeInput = {
    cuti_id: string
    type: string
    description: string
    date: Date | string
    year: number
    status: $Enums.cuti_status
    approval?: string | null
    createdAt: Date | string
  }

  export type employeeCreateManyEmployee_employee_approverToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
  }

  export type employeeCreateManyEmployee_employee_substituteToemployeeInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
  }

  export type ijinCreateManyEmployee_ijin_approvalToemployeeInput = {
    ijin_id: string
    payroll?: string | null
    type: string
    description: string
    date: Date | string
    status: $Enums.ijin_status
    createdAt: Date | string
  }

  export type ijinCreateManyEmployeeInput = {
    ijin_id: string
    type: string
    description: string
    date: Date | string
    status: $Enums.ijin_status
    approval?: string | null
    createdAt: Date | string
  }

  export type skpdCreateManyEmployee_skpd_createdByToemployeeInput = {
    skpd_id?: string
    sppd_id?: string | null
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status: $Enums.skpd_status
    createdAt: Date | string
  }

  export type skpdCreateManyEmployee_skpd_payrollToemployeeInput = {
    skpd_id?: string
    sppd_id?: string | null
    real_start: Date | string
    real_end: Date | string
    status: $Enums.skpd_status
    createdBy?: string | null
    createdAt: Date | string
  }

  export type splCreateManyEmployee_spl_approval1ToemployeeInput = {
    spl_id: string
    purpose: string
    est_start: Date | string
    est_end: Date | string
    status1?: $Enums.spl_status1
    status2?: $Enums.spl_status2
    approval2?: string | null
    createdAt?: Date | string
  }

  export type splCreateManyEmployee_spl_approval2ToemployeeInput = {
    spl_id: string
    purpose: string
    est_start: Date | string
    est_end: Date | string
    status1?: $Enums.spl_status1
    approval1?: string | null
    status2?: $Enums.spl_status2
    createdAt?: Date | string
  }

  export type spl_detailCreateManyEmployeeInput = {
    spl_detail_id: string
    step: number
    spl_id: string
    description: string
  }

  export type sppdCreateManyEmployeeInput = {
    sppd_id: string
    purpose: string
    location: string
    dept?: string | null
    start_date: Date | string
    end_date: Date | string
    duration: number
    createdAt: Date | string
  }

  export type sppd_detailCreateManyEmployeeInput = {
    sppd_detail_id: string
    step: number
    sppd_id?: string | null
    description: string
  }

  export type srlCreateManyEmployee_srl_approval1ToemployeeInput = {
    srl_id: string
    spl_id?: string | null
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    status2?: $Enums.srl_status2
    approval2?: string | null
    createdAt: Date | string
  }

  export type srlCreateManyEmployee_srl_approval2ToemployeeInput = {
    srl_id: string
    spl_id?: string | null
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    approval1?: string | null
    status2?: $Enums.srl_status2
    createdAt: Date | string
  }

  export type srlCreateManyEmployeeInput = {
    srl_id: string
    spl_id?: string | null
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    approval1?: string | null
    status2?: $Enums.srl_status2
    approval2?: string | null
    createdAt: Date | string
  }

  export type attendanceUpdateWithoutEmployee_attendance_createdByToemployeeInput = {
    attendance_id?: StringFieldUpdateOperationsInput | string
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    check_in2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StringFieldUpdateOperationsInput | string
    ijin_info?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_attendance_user_id_machineToemployee?: employeeUpdateOneWithoutAttendance_attendance_user_id_machineToemployeeNestedInput
  }

  export type attendanceUncheckedUpdateWithoutEmployee_attendance_createdByToemployeeInput = {
    attendance_id?: StringFieldUpdateOperationsInput | string
    user_id_machine?: NullableStringFieldUpdateOperationsInput | string | null
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    check_in2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StringFieldUpdateOperationsInput | string
    ijin_info?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeInput = {
    attendance_id?: StringFieldUpdateOperationsInput | string
    user_id_machine?: NullableStringFieldUpdateOperationsInput | string | null
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    check_in2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StringFieldUpdateOperationsInput | string
    ijin_info?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attendanceUpdateWithoutEmployee_attendance_user_id_machineToemployeeInput = {
    attendance_id?: StringFieldUpdateOperationsInput | string
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    check_in2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StringFieldUpdateOperationsInput | string
    ijin_info?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_attendance_createdByToemployee?: employeeUpdateOneWithoutAttendance_attendance_createdByToemployeeNestedInput
  }

  export type attendanceUncheckedUpdateWithoutEmployee_attendance_user_id_machineToemployeeInput = {
    attendance_id?: StringFieldUpdateOperationsInput | string
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    check_in2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StringFieldUpdateOperationsInput | string
    ijin_info?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeInput = {
    attendance_id?: StringFieldUpdateOperationsInput | string
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    check_in2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    check_out2?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StringFieldUpdateOperationsInput | string
    ijin_info?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    attachment?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type check_ioUpdateWithoutEmployeeInput = {
    check_io_id?: StringFieldUpdateOperationsInput | string
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type check_ioUncheckedUpdateWithoutEmployeeInput = {
    check_io_id?: StringFieldUpdateOperationsInput | string
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type check_ioUncheckedUpdateManyWithoutEmployeeInput = {
    check_io_id?: StringFieldUpdateOperationsInput | string
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cutiUpdateWithoutEmployee_cuti_approvalToemployeeInput = {
    cuti_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    year?: IntFieldUpdateOperationsInput | number
    status?: Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: employeeUpdateOneWithoutCutiNestedInput
  }

  export type cutiUncheckedUpdateWithoutEmployee_cuti_approvalToemployeeInput = {
    cuti_id?: StringFieldUpdateOperationsInput | string
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    year?: IntFieldUpdateOperationsInput | number
    status?: Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeInput = {
    cuti_id?: StringFieldUpdateOperationsInput | string
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    year?: IntFieldUpdateOperationsInput | number
    status?: Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cutiUpdateWithoutEmployeeInput = {
    cuti_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    year?: IntFieldUpdateOperationsInput | number
    status?: Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_cuti_approvalToemployee?: employeeUpdateOneWithoutCuti_cuti_approvalToemployeeNestedInput
  }

  export type cutiUncheckedUpdateWithoutEmployeeInput = {
    cuti_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    year?: IntFieldUpdateOperationsInput | number
    status?: Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
    approval?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cutiUncheckedUpdateManyWithoutEmployeeInput = {
    cuti_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    year?: IntFieldUpdateOperationsInput | number
    status?: Enumcuti_statusFieldUpdateOperationsInput | $Enums.cuti_status
    approval?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type employeeUpdateWithoutEmployee_employee_approverToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutEmployee_employee_approverToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
  }

  export type employeeUpdateWithoutEmployee_employee_substituteToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutEmployee_employee_substituteToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
  }

  export type ijinUpdateWithoutEmployee_ijin_approvalToemployeeInput = {
    ijin_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumijin_statusFieldUpdateOperationsInput | $Enums.ijin_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: employeeUpdateOneWithoutIjinNestedInput
  }

  export type ijinUncheckedUpdateWithoutEmployee_ijin_approvalToemployeeInput = {
    ijin_id?: StringFieldUpdateOperationsInput | string
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumijin_statusFieldUpdateOperationsInput | $Enums.ijin_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeInput = {
    ijin_id?: StringFieldUpdateOperationsInput | string
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumijin_statusFieldUpdateOperationsInput | $Enums.ijin_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ijinUpdateWithoutEmployeeInput = {
    ijin_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumijin_statusFieldUpdateOperationsInput | $Enums.ijin_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_ijin_approvalToemployee?: employeeUpdateOneWithoutIjin_ijin_approvalToemployeeNestedInput
  }

  export type ijinUncheckedUpdateWithoutEmployeeInput = {
    ijin_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumijin_statusFieldUpdateOperationsInput | $Enums.ijin_status
    approval?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ijinUncheckedUpdateManyWithoutEmployeeInput = {
    ijin_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumijin_statusFieldUpdateOperationsInput | $Enums.ijin_status
    approval?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type skpdUpdateWithoutEmployee_skpd_createdByToemployeeInput = {
    skpd_id?: StringFieldUpdateOperationsInput | string
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumskpd_statusFieldUpdateOperationsInput | $Enums.skpd_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_skpd_payrollToemployee?: employeeUpdateOneWithoutSkpd_skpd_payrollToemployeeNestedInput
    sppd?: sppdUpdateOneWithoutSkpdNestedInput
  }

  export type skpdUncheckedUpdateWithoutEmployee_skpd_createdByToemployeeInput = {
    skpd_id?: StringFieldUpdateOperationsInput | string
    sppd_id?: NullableStringFieldUpdateOperationsInput | string | null
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumskpd_statusFieldUpdateOperationsInput | $Enums.skpd_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeInput = {
    skpd_id?: StringFieldUpdateOperationsInput | string
    sppd_id?: NullableStringFieldUpdateOperationsInput | string | null
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumskpd_statusFieldUpdateOperationsInput | $Enums.skpd_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type skpdUpdateWithoutEmployee_skpd_payrollToemployeeInput = {
    skpd_id?: StringFieldUpdateOperationsInput | string
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumskpd_statusFieldUpdateOperationsInput | $Enums.skpd_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_skpd_createdByToemployee?: employeeUpdateOneWithoutSkpd_skpd_createdByToemployeeNestedInput
    sppd?: sppdUpdateOneWithoutSkpdNestedInput
  }

  export type skpdUncheckedUpdateWithoutEmployee_skpd_payrollToemployeeInput = {
    skpd_id?: StringFieldUpdateOperationsInput | string
    sppd_id?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumskpd_statusFieldUpdateOperationsInput | $Enums.skpd_status
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeInput = {
    skpd_id?: StringFieldUpdateOperationsInput | string
    sppd_id?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumskpd_statusFieldUpdateOperationsInput | $Enums.skpd_status
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type splUpdateWithoutEmployee_spl_approval1ToemployeeInput = {
    spl_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    est_start?: DateTimeFieldUpdateOperationsInput | Date | string
    est_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumspl_status1FieldUpdateOperationsInput | $Enums.spl_status1
    status2?: Enumspl_status2FieldUpdateOperationsInput | $Enums.spl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_spl_approval2Toemployee?: employeeUpdateOneWithoutSpl_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutSplNestedInput
    srl?: srlUpdateManyWithoutSplNestedInput
  }

  export type splUncheckedUpdateWithoutEmployee_spl_approval1ToemployeeInput = {
    spl_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    est_start?: DateTimeFieldUpdateOperationsInput | Date | string
    est_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumspl_status1FieldUpdateOperationsInput | $Enums.spl_status1
    status2?: Enumspl_status2FieldUpdateOperationsInput | $Enums.spl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    spl_detail?: spl_detailUncheckedUpdateManyWithoutSplNestedInput
    srl?: srlUncheckedUpdateManyWithoutSplNestedInput
  }

  export type splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeInput = {
    spl_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    est_start?: DateTimeFieldUpdateOperationsInput | Date | string
    est_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumspl_status1FieldUpdateOperationsInput | $Enums.spl_status1
    status2?: Enumspl_status2FieldUpdateOperationsInput | $Enums.spl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type splUpdateWithoutEmployee_spl_approval2ToemployeeInput = {
    spl_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    est_start?: DateTimeFieldUpdateOperationsInput | Date | string
    est_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumspl_status1FieldUpdateOperationsInput | $Enums.spl_status1
    status2?: Enumspl_status2FieldUpdateOperationsInput | $Enums.spl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_spl_approval1Toemployee?: employeeUpdateOneWithoutSpl_spl_approval1ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutSplNestedInput
    srl?: srlUpdateManyWithoutSplNestedInput
  }

  export type splUncheckedUpdateWithoutEmployee_spl_approval2ToemployeeInput = {
    spl_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    est_start?: DateTimeFieldUpdateOperationsInput | Date | string
    est_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumspl_status1FieldUpdateOperationsInput | $Enums.spl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumspl_status2FieldUpdateOperationsInput | $Enums.spl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    spl_detail?: spl_detailUncheckedUpdateManyWithoutSplNestedInput
    srl?: srlUncheckedUpdateManyWithoutSplNestedInput
  }

  export type splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeInput = {
    spl_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    est_start?: DateTimeFieldUpdateOperationsInput | Date | string
    est_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumspl_status1FieldUpdateOperationsInput | $Enums.spl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumspl_status2FieldUpdateOperationsInput | $Enums.spl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type spl_detailUpdateWithoutEmployeeInput = {
    spl_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    spl?: splUpdateOneRequiredWithoutSpl_detailNestedInput
  }

  export type spl_detailUncheckedUpdateWithoutEmployeeInput = {
    spl_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    spl_id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
  }

  export type spl_detailUncheckedUpdateManyWithoutEmployeeInput = {
    spl_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    spl_id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
  }

  export type sppdUpdateWithoutEmployeeInput = {
    sppd_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skpd?: skpdUpdateManyWithoutSppdNestedInput
    dept_sppd_deptTodept?: deptUpdateOneWithoutSppd_sppd_deptTodeptNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutSppdNestedInput
  }

  export type sppdUncheckedUpdateWithoutEmployeeInput = {
    sppd_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    dept?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skpd?: skpdUncheckedUpdateManyWithoutSppdNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutSppdNestedInput
  }

  export type sppdUncheckedUpdateManyWithoutEmployeeInput = {
    sppd_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    dept?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sppd_detailUpdateWithoutEmployeeInput = {
    sppd_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    sppd?: sppdUpdateOneWithoutSppd_detailNestedInput
  }

  export type sppd_detailUncheckedUpdateWithoutEmployeeInput = {
    sppd_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    sppd_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
  }

  export type sppd_detailUncheckedUpdateManyWithoutEmployeeInput = {
    sppd_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    sppd_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
  }

  export type srlUpdateWithoutEmployee_srl_approval1ToemployeeInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_srl_approval2Toemployee?: employeeUpdateOneWithoutSrl_srl_approval2ToemployeeNestedInput
    employee?: employeeUpdateOneWithoutSrlNestedInput
    spl?: splUpdateOneWithoutSrlNestedInput
    srl_detail?: srl_detailUpdateManyWithoutSrlNestedInput
  }

  export type srlUncheckedUpdateWithoutEmployee_srl_approval1ToemployeeInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    spl_id?: NullableStringFieldUpdateOperationsInput | string | null
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    srl_detail?: srl_detailUncheckedUpdateManyWithoutSrlNestedInput
  }

  export type srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    spl_id?: NullableStringFieldUpdateOperationsInput | string | null
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type srlUpdateWithoutEmployee_srl_approval2ToemployeeInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_srl_approval1Toemployee?: employeeUpdateOneWithoutSrl_srl_approval1ToemployeeNestedInput
    employee?: employeeUpdateOneWithoutSrlNestedInput
    spl?: splUpdateOneWithoutSrlNestedInput
    srl_detail?: srl_detailUpdateManyWithoutSrlNestedInput
  }

  export type srlUncheckedUpdateWithoutEmployee_srl_approval2ToemployeeInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    spl_id?: NullableStringFieldUpdateOperationsInput | string | null
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    srl_detail?: srl_detailUncheckedUpdateManyWithoutSrlNestedInput
  }

  export type srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    spl_id?: NullableStringFieldUpdateOperationsInput | string | null
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type srlUpdateWithoutEmployeeInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_srl_approval1Toemployee?: employeeUpdateOneWithoutSrl_srl_approval1ToemployeeNestedInput
    employee_srl_approval2Toemployee?: employeeUpdateOneWithoutSrl_srl_approval2ToemployeeNestedInput
    spl?: splUpdateOneWithoutSrlNestedInput
    srl_detail?: srl_detailUpdateManyWithoutSrlNestedInput
  }

  export type srlUncheckedUpdateWithoutEmployeeInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    spl_id?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    srl_detail?: srl_detailUncheckedUpdateManyWithoutSrlNestedInput
  }

  export type srlUncheckedUpdateManyWithoutEmployeeInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    spl_id?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type employeeCreateManyProfileInput = {
    payroll: string
    user_id_machine: string
    email: string
    name: string
    password: string
    position: string
    department?: string | null
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
  }

  export type employeeUpdateWithoutProfileInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    dept?: deptUpdateOneWithoutEmployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutProfileInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateManyWithoutProfileInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
  }

  export type spl_detailCreateManySplInput = {
    spl_detail_id: string
    step: number
    payroll?: string | null
    description: string
  }

  export type srlCreateManySplInput = {
    srl_id: string
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status1?: $Enums.srl_status1
    approval1?: string | null
    status2?: $Enums.srl_status2
    approval2?: string | null
    createdAt: Date | string
  }

  export type spl_detailUpdateWithoutSplInput = {
    spl_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    employee?: employeeUpdateOneWithoutSpl_detailNestedInput
  }

  export type spl_detailUncheckedUpdateWithoutSplInput = {
    spl_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
  }

  export type spl_detailUncheckedUpdateManyWithoutSplInput = {
    spl_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
  }

  export type srlUpdateWithoutSplInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_srl_approval1Toemployee?: employeeUpdateOneWithoutSrl_srl_approval1ToemployeeNestedInput
    employee_srl_approval2Toemployee?: employeeUpdateOneWithoutSrl_srl_approval2ToemployeeNestedInput
    employee?: employeeUpdateOneWithoutSrlNestedInput
    srl_detail?: srl_detailUpdateManyWithoutSrlNestedInput
  }

  export type srlUncheckedUpdateWithoutSplInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    srl_detail?: srl_detailUncheckedUpdateManyWithoutSrlNestedInput
  }

  export type srlUncheckedUpdateManyWithoutSplInput = {
    srl_id?: StringFieldUpdateOperationsInput | string
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status1?: Enumsrl_status1FieldUpdateOperationsInput | $Enums.srl_status1
    approval1?: NullableStringFieldUpdateOperationsInput | string | null
    status2?: Enumsrl_status2FieldUpdateOperationsInput | $Enums.srl_status2
    approval2?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type employeeCreateManyDeptInput = {
    payroll: string
    user_id_machine: string
    profile_id?: string | null
    email: string
    name: string
    password: string
    position: string
    location: string
    phone: string
    workhour?: number
    approver?: string | null
    substitute?: string | null
    join_date?: Date | string
    signature: string
    status?: $Enums.employee_status
  }

  export type sppdCreateManyDept_sppd_deptTodeptInput = {
    sppd_id: string
    purpose: string
    location: string
    start_date: Date | string
    end_date: Date | string
    duration: number
    createdBy?: string | null
    createdAt: Date | string
  }

  export type employeeUpdateWithoutDeptInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUpdateManyWithoutEmployeeNestedInput
    profile?: profileUpdateOneWithoutEmployeeNestedInput
    employee_employee_approverToemployee?: employeeUpdateOneWithoutOther_employee_employee_approverToemployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    employee_employee_substituteToemployee?: employeeUpdateOneWithoutOther_employee_employee_substituteToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateWithoutDeptInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
    attendance_attendance_createdByToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_createdByToemployeeNestedInput
    attendance_attendance_user_id_machineToemployee?: attendanceUncheckedUpdateManyWithoutEmployee_attendance_user_id_machineToemployeeNestedInput
    check_io?: check_ioUncheckedUpdateManyWithoutEmployeeNestedInput
    cuti_cuti_approvalToemployee?: cutiUncheckedUpdateManyWithoutEmployee_cuti_approvalToemployeeNestedInput
    cuti?: cutiUncheckedUpdateManyWithoutEmployeeNestedInput
    other_employee_employee_approverToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_approverToemployeeNestedInput
    other_employee_employee_substituteToemployee?: employeeUncheckedUpdateManyWithoutEmployee_employee_substituteToemployeeNestedInput
    ijin_ijin_approvalToemployee?: ijinUncheckedUpdateManyWithoutEmployee_ijin_approvalToemployeeNestedInput
    ijin?: ijinUncheckedUpdateManyWithoutEmployeeNestedInput
    skpd_skpd_createdByToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_createdByToemployeeNestedInput
    skpd_skpd_payrollToemployee?: skpdUncheckedUpdateManyWithoutEmployee_skpd_payrollToemployeeNestedInput
    spl_spl_approval1Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval1ToemployeeNestedInput
    spl_spl_approval2Toemployee?: splUncheckedUpdateManyWithoutEmployee_spl_approval2ToemployeeNestedInput
    spl_detail?: spl_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd?: sppdUncheckedUpdateManyWithoutEmployeeNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutEmployeeNestedInput
    srl_srl_approval1Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval1ToemployeeNestedInput
    srl_srl_approval2Toemployee?: srlUncheckedUpdateManyWithoutEmployee_srl_approval2ToemployeeNestedInput
    srl?: srlUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type employeeUncheckedUpdateManyWithoutDeptInput = {
    payroll?: StringFieldUpdateOperationsInput | string
    user_id_machine?: StringFieldUpdateOperationsInput | string
    profile_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    workhour?: IntFieldUpdateOperationsInput | number
    approver?: NullableStringFieldUpdateOperationsInput | string | null
    substitute?: NullableStringFieldUpdateOperationsInput | string | null
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: StringFieldUpdateOperationsInput | string
    status?: Enumemployee_statusFieldUpdateOperationsInput | $Enums.employee_status
  }

  export type sppdUpdateWithoutDept_sppd_deptTodeptInput = {
    sppd_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skpd?: skpdUpdateManyWithoutSppdNestedInput
    employee?: employeeUpdateOneWithoutSppdNestedInput
    sppd_detail?: sppd_detailUpdateManyWithoutSppdNestedInput
  }

  export type sppdUncheckedUpdateWithoutDept_sppd_deptTodeptInput = {
    sppd_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skpd?: skpdUncheckedUpdateManyWithoutSppdNestedInput
    sppd_detail?: sppd_detailUncheckedUpdateManyWithoutSppdNestedInput
  }

  export type sppdUncheckedUpdateManyWithoutDept_sppd_deptTodeptInput = {
    sppd_id?: StringFieldUpdateOperationsInput | string
    purpose?: StringFieldUpdateOperationsInput | string
    location?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type srl_detailCreateManySrlInput = {
    srl_detail_id: string
    description: string
    status: string
  }

  export type srl_detailUpdateWithoutSrlInput = {
    srl_detail_id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type srl_detailUncheckedUpdateWithoutSrlInput = {
    srl_detail_id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type srl_detailUncheckedUpdateManyWithoutSrlInput = {
    srl_detail_id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type skpdCreateManySppdInput = {
    skpd_id?: string
    payroll?: string | null
    real_start: Date | string
    real_end: Date | string
    status: $Enums.skpd_status
    createdBy?: string | null
    createdAt: Date | string
  }

  export type sppd_detailCreateManySppdInput = {
    sppd_detail_id: string
    step: number
    payroll?: string | null
    description: string
  }

  export type skpdUpdateWithoutSppdInput = {
    skpd_id?: StringFieldUpdateOperationsInput | string
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumskpd_statusFieldUpdateOperationsInput | $Enums.skpd_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee_skpd_createdByToemployee?: employeeUpdateOneWithoutSkpd_skpd_createdByToemployeeNestedInput
    employee_skpd_payrollToemployee?: employeeUpdateOneWithoutSkpd_skpd_payrollToemployeeNestedInput
  }

  export type skpdUncheckedUpdateWithoutSppdInput = {
    skpd_id?: StringFieldUpdateOperationsInput | string
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumskpd_statusFieldUpdateOperationsInput | $Enums.skpd_status
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type skpdUncheckedUpdateManyWithoutSppdInput = {
    skpd_id?: StringFieldUpdateOperationsInput | string
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    real_start?: DateTimeFieldUpdateOperationsInput | Date | string
    real_end?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: Enumskpd_statusFieldUpdateOperationsInput | $Enums.skpd_status
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sppd_detailUpdateWithoutSppdInput = {
    sppd_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    employee?: employeeUpdateOneWithoutSppd_detailNestedInput
  }

  export type sppd_detailUncheckedUpdateWithoutSppdInput = {
    sppd_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
  }

  export type sppd_detailUncheckedUpdateManyWithoutSppdInput = {
    sppd_detail_id?: StringFieldUpdateOperationsInput | string
    step?: IntFieldUpdateOperationsInput | number
    payroll?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}